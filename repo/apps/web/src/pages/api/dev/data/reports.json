[{"_id":"622f55702ceb370509d0cb59","authorId":"112259034941075238160","authorName":"Adeesh Padwalkar","authorSlug":"adeesh-padwalkar","authorImage":"https://lh3.googleusercontent.com/a-/AOh14GjIzRa5L0lZeO1ig2AQD0CxHFtwui-jgrIsMYrVqg=s96-c","level":1,"courseCode":"CL-CY-001","domain":"CL-CY","title":"report 1","content":"### **Task 1: Basic knowledge of C++ and Python**\n\n&gt; I am already well versed with C++ and Python. I have used Python to write all the Cyber Security tools.\n\n### **Task 2: Get started with cloud computing**\n\n&gt; I have written down briefly about the topics given about cloud computing in the document present in the given github repository.\n[https://github.com/adeeatom/uvcemarvel.git](url) \n\n### **Task 3, Task4: Cyber Security foundations**\n\n&gt; I got to learn about the basics of cyber security such as types of attacks like phishing, man in the middle, social engineering, etc. Got to know about types of cryptography such as the public key cryptography and private key cryptography. Along with cryptography I explored password cracking, like different methods such as bruteforce, dictionary, etc. \nHere is the link of the certification completion for the same. \n[https://olympus1.mygreatlearning.com/course_certificate/SIIJLDQF](url)\n\n### **Task 5: Create AWS EC2 Virtual Machine**\n\n&gt; An EC2 instance is an Virtual Machine hosted on the cloud platform of Amazon web services. I have put in the detailed documentation on how I created and hosted an EC2 instance using an aws account in the link given below.\n[https://docs.google.com/document/d/14fmLPWWrCx5SlTtojUWGFEy7tacoBA23QPH_cv2zWt8/edit?usp=sharing](url)\n\n### **Task 7: Kali Linux - Install and Basic understanding**\n\n&gt; Kali linux is a debian based linux operating system that I installed on a virtual machine. I used the software named virtual box for creating the virtual machine. \nI downloaded the virtual machine software and the ISO file of the kali linux os from their official sites as linked below. I have put down the detailed document on how I installed kali linux on the Virtual Machine.\n[https://docs.google.com/document/d/1usExSEqYbyh27CQZBcCVtTzLNQr2tUs7M24HhELOkeo/edit?usp=sharing](url)\n\n### **Task8: Attempting to build a keylogger**\n\n&gt; I built a simple keylogger using python that just takes in the input from the keyboard and stores it in a text file. I used the python module named pynput for the same. \n*Note: I had written this code when I had windows 10 but after upgrading to windows 11, windows defender does not allow me to keep the code so I have given the copy of code in document format below.*\n[https://docs.google.com/document/d/13iRxdzWkaOX062gv7bggDhCx7PdN_X5INpYw4oab5Vw/edit?usp=sharing](url)\n\n### **Task 9: Working with nmap**\n\n&gt; In order to understand the tcpdump tool, I figured it was best to learn and experiment with nmap. Nmap is a famous network scanner and network discovery tool used to discover hosts and services on a computer network. Nmap comes preinstalled on kali linux but I even installed it on ubuntu ( as shown in the images below in the given document) and it works excellently on ubuntu also.\n[https://docs.google.com/document/d/14bnn_H1Fh3TQSwnE9WOEeGdgAr6gzpmzWaPoBkzd98g/edit?usp=sharing](url)\n\n### **Task 10: Creating a basic network scanner**\n\n&gt; I used python to build a basic network scanner that returns all the active/live hosts on a network, we can further scan for the open ports on any particular given host. I have given below the github link of the code along with the link for the document containing the detailed explanation of the types of scanner that I have built.\n[https://github.com/adeeatom/NetworkScanner.git](url)\n[https://docs.google.com/document/d/1zi15yrDPFejoB1gmCoLzXdDxMd7fyO8_VSbrOBLnIxk/edit?usp=sharing](url)\n\n### **Task 11: Caesar Cipher – Encryption/Decryption**\n\n&gt; I built a simple python program that encrypts and decrypts a given message using caesar cipher. The program also helps in cracking a message using brute force method. The link for the document containing the code with the detailed explanation is given below.\n[https://docs.google.com/document/d/11zYYblQKNMiavKIkaea2gZRaxrIzmU-VNzg4KYm_r5Q/edit?usp=sharing](url)","tags":[],"reviewStatus":"APPROVED","feedback":"","rankingScore":1,"createdAt":"2022-03-14T14:47:12.040Z","updatedAt":"2022-05-09T04:08:32.271Z","slug":"report-1-adeesh-padwalkar","__v":0},{"_id":"625ca6494464ae5ce0ed58bf","authorId":"105852021669447036706","authorName":"Mahammad Riyaz","authorSlug":"mahammad-riyaz","authorImage":"https://lh3.googleusercontent.com/a-/AOh14Gi-4BaHU_2-RIhRxVyp2n5XPTHhZSE0YNc1_U7byg=s96-c","level":1,"courseCode":"D-P-001","domain":"D-P","title":"Blinking LED","content":"AIM : To understand the basic working  of LEDs \nBrief description of tasks : Here I performed two types of LED connections\nSeries connection and Parallel connection\n\nNote : 1) Most of the LED usually draws around 15 to 20mA of   \n              current to operate\n       2)A 9V battery can supply maximum of 2A of current(I used 9V Hi-Watt battery)\n\n\nSeries connection : for a single led I used 1k ohm resistor in series with the led \nFor multiple led in series : Since I sued 9v battery the maximum LEDs that I could connect is 3  with 500 ohm resistor connected in series\n\nParallel connection: I tried 7 LEDs in parallel with 500 ohms of resistance \nSince a single LED only draws around 20mA of current Ideally we can  connect may be around 15 to 18 LEDs for a 9V battery .\n\nProblems I have encountered : NA\nWhat I did to solve them : NA\n\n","tags":[],"reviewStatus":"APPROVED","feedback":"","rankingScore":1,"createdAt":"2022-04-17T23:44:09.427Z","updatedAt":"2022-05-02T05:08:06.700Z","slug":"blinking-led-mahammad-riyaz","__v":0},{"_id":"625ecb2ccc7580dbae7f8b43","authorId":"113351026631427985030","authorName":"Yuan Biju","authorSlug":"yuan-biju","authorImage":"https://lh3.googleusercontent.com/a-/AOh14GgdbuLTfC2iggUdfEUpBL-v3XadpjLuxDkw-IwF=s96-c","level":1,"courseCode":"EV-RE-001","domain":"EV-RE","title":"Level 1 Project Report","content":"## Videos of all executed tasks in the given drive\nhttps://drive.google.com/drive/u/0/folders/18PYLMC82pLBEVwkyvcZ9jAV_zqpxm1v4\n\n# Task 1: DC motor speed control using Arduino\n\nThe speed of a DC motor can be controlled with the help of a microcontroller such as Arduino using the PWM feature available with it. The manual input in order to control the speed is given to the microcontroller board with the help of a potentiometer. The microcontroller then provides a PWM signal to a motor driver which then drives a dc motor at the required speed.\n\nLink to git repository:\n<br />\nhttps://github.com/UVCE-ECE-2023-MarvelLab-2021/dc-motor-speed-control-arduino\n\n# Task 2: DC motor direction control using Arduino \n\nThe direction of a DC motor can be controlled with the help of a microcontroller such as Arduino. The manual input in order to control the direction is given to the microcontroller board with the help of a potentiometer.The microcontroller gives appropriate signals to the input pins of a motor driver which in turn drives a dc motor in the required direction.\n\nLink to git repository:\n<br />\nhttps://github.com/UVCE-ECE-2023-MarvelLab-2021/dc-motor-direction-control-arduino\n\n# Task 3: Point turn of a vehicle\n\nAn object is said to have done a point turn if it rotates about an axis passing through the centre of the object. A vehicle makes a point turn when the wheel on one side rotates in one direction and the wheel on the other side rotates in the opposite direction as shown in figure. The direction of rotation of vehicle depends on the direction of wheel rotation.\n<br />\nA microcontroller such as arduino can be used to send appropriate signals to a motor driver such as a L298N which in turn drives the respective motors in desired direction.\n\nLink to git repository:\n<br />\nhttps://github.com/UVCE-ECE-2023-MarvelLab-2021/point-turn-of-vehicle\n\n# Task 4: Swing turn of a vehicle\n\nAn object is said to have done a swing turn if it revolves around around a point at a fixed radius away from the center of the object. A vehicle makes a swing turn when the wheel/wheels on one side of the vehicle rotates in one direction and the wheel on the other side doesnt rotate. The vehicle when doing a swing turn moves around in a circleas shown in figure.\n<br />\nA microcontroller such as arduino can be used to send appropriate signals to a motor driver such as a L298N which in turn drives the respective motors in desired direction.\n\nLink to git repository:\n<br />\nhttps://github.com/UVCE-ECE-2023-MarvelLab-2021/swing-turn-of-vehicle\n\n# Task 5: Line Following Car\n\nAn IR sensor can be used to detect the presence of black regions. A vehicle can be made to follow a path of black color with the help of an IR sensor. The output from the sensor can be used to correct the course of the vehicle should it deviate from the black path.\n\nLink to git repository:\n<br />\nhttps://github.com/UVCE-ECE-2023-MarvelLab-2021/line-following-car\n\n# Task 6: Obstacle avoiding vehicle\n\nAn Ultrasonic sensor can be used to detect the presence of objects around a vehicle and send signals whenever it does.  A microcontroller such as an Arduino can use this signals to veer the vehicle so as to avoid collision with nearby object. Here, such a sensor is used to detect obstacles lying in front of the vehicle and an Arduino Uno is used to change the course of the vehicle to avoid collision with the obstacle.\n\nLink to git repository:\n<br />\nhttps://github.com/UVCE-ECE-2023-MarvelLab-2021/obstacle-avoiding-vehicle\n\n# Task 7: Bluetooth Controlled Vehicle\n\nBluetooth is a communication protocol used for wireless transfer of data between two devices that support this protocol. Here, a vehicle is controlled by transmitting commands to it remotely from a smartphone to a bluetooth module which communicates with a microcontroller placed on the vehicle. The microcontroller used here is an Arduino to which a bluetooth module \"HC05\" is fitted to support the communication protocol.\n\nLink to git repository:\n<br />\nhttps://github.com/UVCE-ECE-2023-MarvelLab-2021/bluetooth-controlled-vehicle\n\n# Task 8: IR Remote Controlled Vehicle\n\nAn IR remote containing various buttons each associated with a unique code can be used to send command to a vehicle in order to control its motion. The IR receiver placed on the vehicle receives these coded signals and conveys them to a microcontroller on board which then translates these codes to a corresponding command. Appropriate signals are then send to the motor driver based on these commands which in turn drives the motors in desired speed and direction therby controlling the motion of the vehicle.\n\nLink to git repository:\n<br />\nhttps://github.com/UVCE-ECE-2023-MarvelLab-2021/ir-remote-controlled-vehicle\n\n# Task 10: Solar Tracker\n\nA solar panel produces current whenever light strikes its surface. They are used to collect radiated light energy from the sun and convert them to electric energy. A static solar panel always facing one direction may not receive the same amount of radiation throughout a day as the position of sun with respect to the panel changes due to which a lot of solar energy is missed in a day.\nThis can be solved by changing the position of the solar panel such that it always faces the sun allowing for maximum radiation exposure throughout the day. The solar panel can be made to track the movement of the sun with the help of a servo motor whose shaft angle can be changes by giving pwm signals from a MCU(Micro Controller Unit).\n\nLink to git repository:\n<br />\nhttps://github.com/UVCE-ECE-2023-MarvelLab-2021/solar-tracker","tags":[],"reviewStatus":"APPROVED","feedback":"","rankingScore":1,"createdAt":"2022-04-19T14:46:04.878Z","updatedAt":"2022-05-01T17:42:52.057Z","slug":"level-1-project-report-yuan-biju","__v":0},{"_id":"62610067cc7580dbae7f8e03","authorId":"104838778419284273154","authorName":"Shaik Abdul Salam Batcha","authorSlug":"shaik-abdul-salam-batcha","authorImage":"https://lh3.googleusercontent.com/a-/AOh14GjU5pgSZc4ThVRFBZJCZdaPwpSaCOWpq2PujamhGA=s96-c","level":1,"courseCode":"EV-RE-001","domain":"EV-RE","title":"Level -1 report","content":"Task-1: Speed control of motor\n  I started doing it with Arduino nano, l293d and potentiometer to control the speed of motor.\n\n Circuit connections: Enable pins of l293d to pwm pins of Arduino and IN1,2,3,4 pins to d3,d4,d6,d9 pin of Arduino. OUTput pins of l293d is connected to motor directly.\n\nTask-2:direction control of motor\n\nIn this for circuit connection i used h-bridge of l293d to control direction of the motor .By varying the code for input pins 1,2,3,4 accordingly .\n\nTask-3: Point turn \n\nIn this circuit , same l293d is connected to motor .Thus by keeping IN1 and IN2 Low and keeping IN3 High and IN 4 low .The motor will turn at one point around the axis.\n\nTask-4: Swing turn \n\nIn this circuit ,l293d is connected to motor which in turn connected to chassis .Thus by keeping IN1-Low IN2-High IN3-High IN4-Low the motor will swing around the axis.\n\nTask-5: Line follower \nIn this circuit ,i used l293d ,Ir sensor and motor .When Ir sensor is left on a black ground it will move forward and when car tries to come out of black ground and light reflects back to Ir sensor .Then we code such a way that car tends to go back to black ground .This way it follows the lane.\n\nTask-6: Obstacle Avoidance\nIn this circuit ,I have used Ultrasonic sensor, motor and l293d along with Arduino Uno.When ultrasonic sensor detects am obstacle ..the car tends to avoid crash and move the other way.\n\nTask:7- Bluetooth controlled car\nIn this circuit ,i had used Bluetooth module , l293d ,motor and chassis along with Arduino Uno and Android app. We have to pair Bluetooth module with mobile app and then we can control the car via bluetooth.\n\n","tags":[],"reviewStatus":"APPROVED","feedback":"","rankingScore":1,"createdAt":"2022-04-21T06:57:43.196Z","updatedAt":"2022-05-01T17:43:32.732Z","slug":"level-1-report-shaik-abdul-salam-batcha","__v":0},{"_id":"626a39dca850aaf2fe987068","authorId":"106364624677601940985","authorName":"VISHAL VINAYRAM","authorSlug":"vishal-vinayram","authorImage":"https://lh3.googleusercontent.com/a-/AOh14Gjh8XCH9LUeJGPKvvJPbyRpw8M-19qkcJBWmyY=s96-c","level":1,"courseCode":"CL-CY-001","domain":"CL-CY","title":"The basic knowledge","content":"In this task I learner some basic topics of c++ ,python and Linux operating system  and applied some of them .I learnt some basic knowledge of python and used Linux terminal for most of the process which enabled me to make process faster ,efficient and also without any problems.\nI installed some apps using the terminal which enables me to install the most latest as well most optimised version to my computer ","tags":[],"reviewStatus":"FLAGGED","feedback":"Write the report in detail with the snapshots , video etc included ","rankingScore":1,"createdAt":"2022-04-28T06:53:16.917Z","updatedAt":"2022-06-06T04:45:23.636Z","slug":"the-basic-knowledge-vishal-vinayram","__v":0},{"_id":"626cc3ccd7e9dde99b3c2e62","authorId":"104998706990791651743","authorName":"Manish K B","authorSlug":"manish-k-b","authorImage":"https://lh3.googleusercontent.com/a/AATXAJyt_qIYQijcvnCDFpy5ylHAX8EbIPQ0x4wisVL_=s96-c","level":1,"courseCode":"IOT-001","domain":"IOT","title":"IoT Level 1  Report","content":"Task 1: Getting Started with ESP32\n\nAbout the task\n\n- This is a prerequisite task which will help us in upcoming tasks.\n- This task helps us learn the basics of interfacing the ESP32 microcontroller with the Arduino IDE.\n- This task will teach us to blink the onboard LED in the ESP32.\n\nMaterials Used\n\n- ESP32 Module\n- USB cable\n- Arduino IDE\n\nWhat did I learn?\n\n- This task taught to me to setup an ESP32 board and Arduino IDE for coding the microcontroller.\n- Basic codes to implement simple tasks\n\nProject Video:\n https://drive.google.com/file/d/1lnC0yeOWhE7Cy8wQj9w_4HP5turpGIWz/view?usp=sharing\n \n \n \nTask 2: Connect the ESP32 to the internet. Build a simple clock which displays time on an OLED screen using NTP\n\nAbout the task\n\n- This task involves use of ESP32 to fetch time from internet using NTP (Network Time Protocol) and UDP (User Datagram Protocol) to fetch Time from the internet using Wi-Fi.\n- Network Time Protocol (NTP) is a networking protocol used for synchronization of time between systems and Data networks.\n\n\nAbout the code: \n\n- NTPClient.h library is used to connect with the time server. It takes time from a NTP server and keep it in sync. And Hhre WiFiUdp.h library is used to send and receive UDP messages. UDP is a protocol which sends and receive short messages from our system to NTP server.\n- timeClient.update()  function takes updated time from NTP  in the form of string and stores it in a variable. Then display it on OLED using display.println() function.\n- Complete code: https://circuitdigest.com/microcontroller-projects/esp32-internet-clock\n\n                     \nMaterials Used:\n\n- ESP32\n- 128*64 OLED display\n- Breadboard\n- Jumper wires\n \nWhat did I learn?\n\n- I learnt how to use an OLED display with an ESP32 board.\n- Installing the required libraries for OLED display.\n- I tried displaying images and small animations on the OLED display.\n- Connect ESP32 to the internet and fetch the data from NTP.\n- Initially I faced difficulties in displaying the text in the correct position.\n- I learnt to change the display properties such as font and font size of the text on the OLED display.\n- I also did the LCD display task of the older course. Here I learnt to solder the header pins to the LCD display module and control contrast and other properties using a potentiometer.\n \nProject video:\n https://drive.google.com/file/d/1RKPPbmkH0Ar1Nth-zCfQruKHkhM1BMp7/view\n\nTask 3: Controlling ESP32 using Telegram bot.\n\nAbout the task\n\n- This task involves controlling GPIO Pins through Telegram Chat.\n- We will be controlling a LED with the Telegram bot, the LED is connected to the ESP32 board. \n- A bot will be created using Botfather which is a pre-built Telegram bot that lets us create, manage, and delete our bots.\n- To establish communication Telegram bot, Universal Telegram Bot Library is used. It is an Arduino IDE library for using Telegram Bot API.\n- Schematic Diagram: https://iotdesignpro.com/projects/telegram-bot-with-esp32-control-gpio-pins-through-telegram-chat.\n- After the completion of the task, \n a command /led_on turns on the led connected to the ESP32 board and /led_off turns it off.\n \nMaterial Requirements:\nESP32 Development board\n\n What did I learn?\n\n- Initially it was difficult setting up the project. Sometimes it was the problem with the bot and sometimes it was problem with the code.\n- Just the wrong chat ID made the project not work.\n- After all was sorted the ESP32 responded to the Telegram messages(commands).\n\nProject Video:\nhttps://drive.google.com/file/d/1QzFdw_M7yOaJkaFZD2lZwuBWEZjLJpgU/view?usp=sharing\n\nTask 4: Use a web server to wirelessly control the direction and speed of a servo motor via the ESP32.\n\nAbout the task\n\n- Here we control the motion of the servo motor without using a potentiometer.We use a web server to control to the servo motor.\n- We will use built-in WiFi Library for connectivity, as well as the ESP32Servo library.\n- A HTML code will be needed to create the web interface.\n- We also add CSS, JavaScript and JQuery to this HTML code.\n- \n\nMaterials required\n\n- ESP32 board\n- Servo motor\n- Jumper wires\n- Bread Board\n\nWhat did I learn?\n\n- Learnt to use and control servo motor            \n- I had to learn some more web development concepts to create the slider for the servo.\n- Initially the servo did not respond to the slider, it stayed stationary. There were some problems in the connections. After correcting the corrections the servo responded.\n\nProject Video:\nhttps://drive.google.com/file/d/1SPumdiNYElPjxY8k2NXFZW_aonUE8KKV/view?usp=drivesdk\n\nTask 6: Interface a simple keypad with the ESP32.\n\nAbout the task\n\n- A keypad consists of group of buttons arranged in the form of a matrix.\n- 3*4 and 4*4 keypads are the commonly used configurations.\n- In this project 4*4 keypad is used.\n- It consists of numbers 0-9,*,#,A-D\n- Keypad library is needed to interact with the keypad.\n- The key pressed can be seen in the serial monitor.\n\nMaterials required\n- ESP32\n- Jumper wires\n- Keypad\n-\n\nWhat did I learn\n-I  learnt to use keypad which can find its applications in making a password protected door lock, projects involving input from users etc.\n- I did not face any major challenges while making this project.\n\nProject Video:\nhttps://drive.google.com/file/d/1lnPVZA_SliMCAZzpIVvcUNOnrO4wigRt/view?usp=drivesdk\n\nTask 7:Obtain data from an ultrasonic sensor using the ESP32.\n\nAbout the task\n\n- This project uses a HC-SR04\n sensor to measure the distance and display it in the serial monitor.\n- It has a range of 2cm-400cm with an accuracy of 0.3cm.\n\n- The ultrasound transmitter (trig pin) emits a high-frequency sound (40 kHz).\n- The sound travels through the air. If it finds an object, it bounces back to the module.\n- The ultrasound receiver (echo pin) receives the reflected sound (echo).\n- Taking into account the sound’s velocity in the air and the travel time (time passed since the transmission and reception of the signal) we can calculate the distance to an object.\n\n\nMaterials required\n\n- HC-SR04 Ultrasonic Sensor\n- ESP32\n- Breadboard\n- Jumper wires\n\n\nWhat did I learn\n\n- Use an ultrasonic sensor for measuring distance. \n- This finds its applications in obstacle avoiding robots, air drums etc.\n\nProject Video:\nhttps://drive.google.com/file/d/1Rnb2oavJBL_buYtoRSVB0Bs-WTtujQ0X/view?usp=drivesdk\n\nTask 8:Install the Raspbian operating system on the raspberry pi 3\n\nAbout the task\n\n- The Raspberry Pi is a low cost, credit-card sized computer that plugs into a computer monitor and uses a standard keyboard and mouse.\n- It can't be used for interacting with sensors, coding, IoT etc\n- In this task we will install Raspberry Pi OS using a Raspberry Pi Imager and a microSD card.\n- The OS needs to be installed into a microSD card using a computer, a microSD card reader, and the imager software.\n\n\nMaterials required\n\n- Raspberry Pi\n- Computer with Raspberry Pi Imager\n- Micro HDMI cable\n\nWhat did I learn\n\n- Installation process was simple.\n- But despite installing the OS the display remained black.\n- I tried installing again but same problem\n- The following solution worked for me. \nhttps://learn.sparkfun.com/tutorials/setting-up-raspbian-and-doom/setup-raspbian#:~:text=If%2C%20after%20installing%20Raspbian%2C%20your,specific%20to%20the%20Raspbian%20install.&amp;text=As%20soon%20as%20you%20see,shift%20to%20enter%20recovery%20mode.\n\nProject Photos:\nhttps://drive.google.com/drive/folders/1lZ1EQNXS1ok0qrfn8VULbTApi8k5tsCw\n\nTask 9: Using Raspberry Pi to blink an LED\n\nAbout the task\nThis task involves writing a python script that will make an LED blink.\n\nMaterials required\n\n- Raspberry Pi 3 setup with monitor and USB Mouse &amp; Keyboard\n- Breadboard\n- Jumper wires\n- Resistor\n- LED\n\nWhat did I learn\n- I learnt to use Raspberry Pi for coding.\n- Wrote a python code which interacts with the GPIO pins of the Raspberry Pi\n\nProject Video:\nhttps://drive.google.com/file/d/1lYg2EHYNIbXTZmXJmzzRdRTos1N-czlQ/view?usp=sharing\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","tags":[],"reviewStatus":"APPROVED","feedback":"","rankingScore":1,"createdAt":"2022-04-30T05:06:20.281Z","updatedAt":"2022-05-02T05:08:36.962Z","slug":"iot-level-1-report-manish-k-b","__v":0},{"_id":"6271398823396b90069aba3e","authorId":"104782836899613634191","authorName":"Manjesh Patil","authorSlug":"manjesh-patil","authorImage":"https://lh3.googleusercontent.com/a-/AOh14GhWivrGxDzuN41RnFPGs32LSpzmYKsK2KcpLM1VcQ=s96-c","level":1,"courseCode":"EV-RE-001","domain":"EV-RE","title":"Project report","content":"Task-1 speed control of dc motor\nI made it by using aurdino Uno, motor driver-l293D and using a potentiometer for the speed control of the dc motor.\nCircuit connections: Enable pins of 1293d to PWM pins of Arduino and IN1,2,3,4 pins to d4,d5,d6,d9 pin of Arduino. OUTput pins of 1293d is connected to motor directly.\n\nTask-2\nDirection control of dc motor.\nIn this task i used of if condition where it contains not statement in it. Using this statement i changed the direction of dc motor.\n\nTask-3\nPoint turn.\nFor this task i used the same L293D where i coded such that IN1 and IN2 will be low and the other IN3 and IN4 will be high so that the vehit will take a sharp turn on the same vertical axis.\n\nTask-4\nIn this situation i made the IN1 as high, IN2 as low, IN3 as high and IN4 as low. This code will make the bot to turn sweeply on the ground.\n\nTask-5\nLine follower bot\nIn this task i used 2 IR sensors, aurdino nano, L293D. I made the bot such a way that if anyone of the IR sensors detects the light then that side motors will stop work and it will take a turn until IR sensor will show 0 on the serial monitor.\nIn this manner it follows the black lane.\n\nTask-6\nObstacle avoiding robot.\nFor this robot i made it using aurdino Uno, ultrasonic sensor, servo motor and driver-l298N. I coded in such a way that if any obstacle comes infront of the bot then it comes into if condition and checks the range. If the condition satisfies then it will stop and goes backwards and the servo motor turns left and right and the ultrasonic sensor again check the range and goes on the safer side.\n\nTask-7\nBluetooth controlled car.\nIn this task i made a car using blutooth module, L293D, and motors.\nThe car will be controlled by a Android app via bluetooth. At first  we have to connect or pair the bluetooth module and Android app. And once it pairs then we can automatically controll the vehicle.\n\n\n\n","tags":[],"reviewStatus":"APPROVED","feedback":"","rankingScore":1,"createdAt":"2022-05-03T14:17:44.502Z","updatedAt":"2022-06-05T11:28:08.747Z","slug":"project-report-manjesh-patil","__v":0},{"_id":"627e473d3c79cb1af065e88e","authorId":"117351210451362038471","authorName":"Bhooshankumar","authorSlug":"bhooshankumar","authorImage":"https://lh3.googleusercontent.com/a-/AOh14GgzFwp2Uw32S69c75rsRJNzPKv2W8LGsChVyjgJcBo=s96-c","level":1,"courseCode":"IOT-001","domain":"IOT","title":"LEARNINGS IN MARVEL.","content":"**TASK 1: *BLINKING OF ONBOARD LED OF ESP32***\n\nESP32 is a WIFI module. It is the successor of popular ESP8266 wifi module. ESP32 is used in many IOT based projects for connecting the hardware to internet. ESP32 can be programmed using arduino IDE which makes it easy to work for large community of arduino developers. In  this task we are blinking the internal led of ESP32, ESP32 has a internal led in pin no 2.\n\nLink to git repository:   \nhttps://github.com/bhooshan11/Blinking-onboard-led-of-esp32.git \n\n**TASK 2 : *DISPLAYING TIME ON OLED***\n\nIn this task we will fetch time from internet using NTP server and display it on OLED screen. The advantage of using internet clock is that it reduces the hardware required.\nOLED is an organic light emitting diode. OLED is better when compared to LED/LCD.\n\nLink to git repository:    \n https://github.com/bhooshan11/Displaying-clock-on-OLED.git\n\n**TASK 3 : * CONNECTING ESP32 TO TELEGRAM***\n\nIn this task we create a telegram bot which will send and receive data to and from ESP32. Telegram is cloud based instant messaging app. This has many applications in IOT projects like Home automation. \n\nLink to git repository:     \nhttps://github.com/bhooshan11/connecting-esp32-to-telegram.git\n\n**TASK 4 : *Controlling servo motor using web server***\n\nIn this task we control servo motor using web server and also control the direction of rotation of servo motor using potentiometer. Servo motor rotation is limited to 90, 180 or 270 degree. It has low speed but has high torque.\n\nLink to git repository:    \nhttps://github.com/bhooshan11/Controlling-servo-motor-through-web-server.git\n\n**TASK 5 : *Sending and receiving data from the cloud using ESP32***\n\nIn this task we are going to measure temperature and hall voltage using ESP32 and observe the plot received value versus time on our thingspeak account.\n\nLink to git repository:     \nhttps://github.com/bhooshan11/sending-and-receiving-data-from-the-cloud-using-ESP32..git \n\n**TASK 6 : *INTERFACING OF 4X4 KEYBOARD WITH ESP32***\n\nIn this task we connect ESP32 to 4X4 keyboard and also implement password checking using the text entered through the keypad. This can be used in projects like home security system and many security applications.\n\nLink to git repository:      \nhttps://github.com/bhooshan11/INTERFACING-OF-4X4-KEYBOARD-WITH-ESP32.git\n\n**TASK 7 : *OBTAINING DATA FROM ULTRASONIC SENSOR***\nIn this task we measure the distance of an object using ultrasonic sensor and display the values on serial monitor. The ultrasonic sensor we are using is HC-SR04.Ultrasonic sensor uses sonar to detect the object.\n\nLink to git repository:    \nhttps://github.com/bhooshan11/OBTAINING-DATA-FROM-ULTRASONIC-SENSOR.git\n\n**TASK 8 : *INSTALLING RASPBERRY PI***\nIn this task we will learn to install raspberry pi on pc .Raspberry pi is a tiny computer in a small form factor. There are 4 models of raspberry pi they are raspberry pi 1,2,3,4. In this task we will learn to setup raspberry pi 4.\n\nLink to git repository:    \nhttps://github.com/bhooshan11/INSTALLING-RASPBERRY-PI.git\n\n**TASK 9 : *CONTROLLING LED WITH RASPBERRY PI AND PYTHON***\nIn this task we will blink led using python in raspberry pi 4. By this we can learn how to use raspberry pi interface\n\nLink to repository:     \nhttps://github.com/bhooshan11/CONTROLLING-LED-WITH-RASPBERRY-PI-AND-PYTHON.git","tags":["#esp32","#oled","#clockonoled","#telegrambot","#controllingservomotor","#keypadinterfacingwithesp32","#ultrasonicsensor","#raspberrypi"],"reviewStatus":"APPROVED","feedback":"","rankingScore":1,"createdAt":"2022-05-13T11:55:41.672Z","updatedAt":"2022-06-05T05:38:31.035Z","slug":"learnings-in-marvel-bhooshankumar","__v":6},{"_id":"62816f2b3c79cb1af065e9d9","authorId":"115909686327300868946","authorName":"Veerabhadra Kumbar","authorSlug":"veerabhadra-kumbar","authorImage":"https://lh3.googleusercontent.com/a-/AOh14Gj0PXNGHw3uIau_ZHqd_m4umjhG6L2URCpfuoqgrg=s96-c","level":1,"courseCode":"D-P-001","domain":"D-P","title":"Level 1 Project Report ","content":"#**TASK 1 : Basic Drawings On Paper**\n###**Description** :\n\n#####Aim : to familiarize with the Shapes and put them on Paper\n\n- Observe the given 3D design carefully (especially the dimensions and basic geometric shapes).\n- Once the observation is done, visualise differentiating the 3D design into top view , front view, side view.\n- Now using the required tools (pencil, mini drafter, compass etc...) manually draft the 3D design to the orthographic view (2D view).\n\n###**Images** : \n\nOrthographic Projections\n\n- https://drive.google.com/file/d/1Wtcf7sNAMF9L6jUOHbZngFQHay3x5C5P/view?usp=sharing\n- https://drive.google.com/file/d/12DEmtJWB9rVa1NbYXWbqxk1CUONSdLCL/view?usp=sharing\n- https://drive.google.com/file/d/1z1M3m_Lgrx8Y_g1-BmLy_GSE2JJyKGxc/view?usp=sharing\n- https://drive.google.com/file/d/1_symPcDy3xOwOxJh8Gp8YSvNySWYOCb7/view?usp=sharing\n- https://drive.google.com/file/d/1oLsjlQMeyLySSG3DDjSRMjXSeohuDDnn/view?usp=sharing\n\n#**TASK 2 : LED On a Breadboard**\n\n###**Description** : \n\n#####Aim : to understand the Basics of LED\n\nBrief description of tasks : Here I performed two types of LED connections.\n\n- Series connection\n\n- Parallel connection\n\nComponents required are a breadboard, wire links, breadboard power supply.\n\n- A  LED is plugged in with  the required resistor and when it is turned on the                                                                                LED glows.\n- for a single LED, i have used 1k ohm resistor in series with the LED.\n- here i've tried lighting up LED sequences using AA batteries.\n- For multiple led in series, Since i have used 9V battery the maximum LEDs that i could connect is 3 with 500 ohm resistor connected in series\n- Two LEDs are plugged in a series connection with the required resistor and when it is turned on both the LEDs glow.\n- Two LEDs are plugged in a parallel connection with the required resistor and when it is turned on both the LEDs glow.\n- I tried 3 LEDs in parallel with 500 ohms of resistance, \n- single LED only draws around 20mA of current Ideally.\n\nNote :\n\n-  Most of the LED usually draws around 15 to 20mA of current to operate\n-  A 9V battery can supply maximum of 2A of current\n\n###**Images** :\n\n- https://drive.google.com/file/d/1YCSWKitgo7IN3pw5FJnu2aZTWmFRGD9J/view?usp=sharing\n- https://drive.google.com/file/d/1oIvpxzKHnSP8lmNzgm_zjYSIOxDS7A7I/view?usp=sharing\n- https://drive.google.com/file/d/13QmgRnOnQC-o19_yv2mkb825hyt7D5f7/view?usp=sharing\n- https://drive.google.com/file/d/1I8Cb_swrFiuOyXGte7gbHPKeNj7ZfXa8/view?usp=sharing\n- https://drive.google.com/file/d/1_Bo7Z0VuhdCDANi_9vv5Whwyzx_9SwMS/view?usp=sharing\n\n#**TASK 3 : Transistor as A Switch**\n###**Description** :\n\n#####Aim : to operate a transistor as a switch by biasing it appropriately\n\n- Plug Transistor to the breadboard.\n- Connect emitter to the ground of the battery.\n- Connect LED to the collector of the transistor.\n- Connect 330 Ohm Resistor to the collector of the transistor.\n- Connect 1k resistor to the base of the transistor\n- Connect Switch to the base of the transistor.\n- Power up the circuit with 9V Battery.\n- The LEDs will glow when the switch is pressed.\n\n###**Image** :\nhttps://drive.google.com/file/d/1KkQCqq3PUv18x6p9oBSS0AeFBYjedEw6/view?usp=sharing\n\n###**Video** :\nhttps://drive.google.com/file/d/1TB5fw2kLe5aRurWrh95y7hsN6Coz07fh/view?usp=sharing\n\n#TASK 4 : Flash an LED using a transistor\n###**Description** :\n\n#####Aim : Blink an LED using 2 npn transistors, a few resistors and capacitors\n\nComponents required are Breadboard, Connecting Wires, 9v Battery, BC547 NPN Transistor, \n\n- Switch/Push Button, Resistors (1K,330ohm),5mm LED.\n- Plug Transistor to the breadboard.\n- Connect Emitter to the ground of the battery.\n- Add LED &amp; 330 Ohm Resistor to Collector of BC547.\n- Connect 1k Resistor and Switch to Base of the transistor.\n- Power up the circuit with 9V Battery.\n\n###**Image** :\nhttps://drive.google.com/file/d/1pB_uziKBY5xqn9a-Cuue-ucDqqQSPdlg/view?usp=sharing\n\n###**Video** :\nhttps://drive.google.com/file/d/14o36T4LK4NGVFsSKw9N8MnkSGuhuKZro/view?usp=sharing\n\n#TASK 5 :  Darkness Detector using LDR\n\n###Description :\n\n#####Aim : to create a circuit that turns on an LED when the room is dark\n\n- Plug a npn transistor to the breadboard.\n- Connect the base of the transistor to the LDR.\n- Connect another end of the LDR to the positive terminal.\n- Connect the emitter of the transistor to the ground.\n- Connect one end of the 1k resistor to the base of the transistor and the other end to the ground.\n- Connect the negative end of the LED to the collector of the transistor and connect the 470ohm resistor to the positive end of the LED and the other end of the resistor is connected to the positive terminal of the battery.\n- As the brightness increases light glows brighter.\n\n###**Image** :\nhttps://drive.google.com/file/d/1F97t6RQe_Vg8qSzYqGzqaiU8bBSyihFh/view?usp=sharing\n\n###**Video** :\nhttps://drive.google.com/file/d/1bKsOEQEhzN_VPz9SCJKPs9wL_5zTad4E/view?usp=sharing\n\n###**Light Detector using LDR** :\n\n###**Image** :\n\nhttps://drive.google.com/file/d/1hCjsv1bDERl3DOx6sgMBuqDgNstfJqwt/view?usp=sharing\n\n###**Video** :\n\nhttps://drive.google.com/file/d/1Ga45rs9Mx7hA2tF7fLqyGj5rWCZvI8L9/view?usp=sharing\n\n#TASK 6 : Convert Your Drawings On paper to CAD\n\n###Description :\n\n#####Aim : to replicate the given drawings using CAD tools\n\n- i've used Catia V5 software was used to design the prototype as shown in the picture below.\n- The 2D of the prototype was built in this software using the required tools.\n- Now the 2d design was padded to the 3d prototype.\n- Finally the required changes (like pocketing,fillet,colour change etc...) were done to get the required prototype.\n\n###images :\n\n- Model 1 : https://drive.google.com/file/d/1-8HDW64REywoCpkL2P20c9xDfhp01FLO/view?usp=sharing\n- model 2 : https://drive.google.com/file/d/1Tbagw2Q8z5x3d5nRdXs7eUKR18pViLkg/view?usp=sharing\n- model 3 : https://drive.google.com/file/d/1-NAptMPbYfSa7bLl8AJsu6KfehSU1d3_/view?usp=sharing\n\n#TASK 7 : Simple Soldering Practice\n\n###Description :\n\n- learnt about soldering during the hands-on workshop.\n- tried to solder wires,LED, Resistor etc on Circuit board.","tags":[],"reviewStatus":"APPROVED","feedback":"","rankingScore":1,"createdAt":"2022-05-15T21:22:51.879Z","updatedAt":"2022-06-05T05:38:21.480Z","slug":"level-1-project-report-veerabhadra-kumbar","__v":0},{"_id":"62851f45799133afc38301c4","authorId":"109660455535670337758","authorName":"Meghana K S","authorSlug":"meghana-k-s","authorImage":"https://lh3.googleusercontent.com/a/AATXAJxokNRXpbonGIEffDm9lW8flg-yY_LUSgbxRvrm=s96-c","level":1,"courseCode":"IOT-001","domain":"IOT","title":"IOT-Level 1 report","content":"### Task 1: blinking onboard LED of ESP32\nThis is a simple task, where Arduino IDE is used to write and upload the code to ESP32 microcontroller, and blink the onboard LED. ESP32 can be easily programmed with Arduino IDE. The internal LED is connected to pin number 2, this has been declared and defined as high or low alternatively with a delay of 1 second.\n\n[blinking onboard LED](https://github.com/meghana-23-7/Blinking-Internal-LED-of-ESP32)\n\n### Task 2: Internet clock using ESP32\nWe know ESP32 is a Wi-Fi module and hence can be easily connected to internet to get the current time from internet servers. In this project, ESP32 fetches time from NTP server and displays it on the OLED display, also prints the same on the serial monitor. Here hardware usage is reduced, as only ESP32 and OLED display are used to make a internet clock.\n\n[Internet clock using ESP32](https://github.com/meghana-23-7/Internet-clock-using-ESP32)\n\n### Task 3: Controlling LED through telegram bot\nUsing telegram bot to control the led connected to ESP32. ESP32 can be connected to Wi-Fi, using a telegram to send commands to ESP32 to  switch LED on or off.\n\n[Controlling-ESP32-by-telegram-bot](https://github.com/meghana-23-7/Controlling-ESP32-by-telegram-bot)\n\n### Task 4: Controlling Servo motor using ESP32\nUsing ESP32 to control the movement of analog servo motor shaft. Providing PWM input to servo motor and control its shaft position.\n\n[Servo motor and ESP32](https://github.com/meghana-23-7/Controlling-servo-motor-usiing-ESP32)\n\n### Task 5:  \nESP32 has inbuilt temperature and hall effect sensors. We used the ESP32 to read the temperature and hall effect value, send the data to cloud. For cloud thingspeak.com was used, it takes the input values and plotted the graph.\n\n[Temperature and hall effect plot](https://github.com/meghana-23-7/using-cloud-with-ESP32)\n\n### Task 6:\nUsing ESP32 along with keypad to interface a password. Keypad is like a group of buttons arranged in matrix, a button can be  referenced using row and column value. There are two steps, in first just print the button pressed and in second, check if the password typed is correct.\n\n[Keypad interfacing with ESP32](https://github.com/meghana-23-7/Interfacing-keypad-using-ESP32)\n\n### Task 7: \nUse ultrasonic sensor along with the ESP32 to find at what distance an object is. It is simple code which converts the time into distance and print the distance on the serial monitor.\n\n[Measuring distance using UR sensor](https://github.com/meghana-23-7/Obtaining-data-from-UR-sensor-using-ESP32)\n\n### Task 8:\nThis task is about installing necessary Raspberry Pi OS to boot-up Raspberry pi and do the initial configuration. First up install the OS into the Micro SD card, insert the same to PC or laptop and setup the OS.\n\n[Installing OS on Rpi4](https://github.com/meghana-23-7/Install-OS-in-Rpi4)\n\n### Task 9:\nPrevious task was to learn installing and setting up of OS for a Raspberry Pi4. In this task we write a simple python code to blink the LED connected to GPIO of RPi4. Write the program on the nano text editor, save and close the file, run the same to blink the LED.\n\n[Blinking LED using RPi4](https://github.com/meghana-23-7/Blinking-LED-using-Rpi4)\n\nIf you want the complete level 1 report at just one place:\n[Report document](https://docs.google.com/document/d/17Ge-UQA9mXiw9zOwsr4pyWb8EnRBoO-7HoiT_U6JuDM/edit?usp=sharing) ","tags":[],"reviewStatus":"APPROVED","feedback":"","rankingScore":1,"createdAt":"2022-05-18T16:31:01.807Z","updatedAt":"2022-06-05T05:38:07.078Z","slug":"iot-level-1-report-meghana-k-s","__v":0},{"_id":"628b5702799133afc3830360","authorId":"104450960609424011226","authorName":"bhargav adya l","authorSlug":"bhargav-adya-l","authorImage":"https://lh3.googleusercontent.com/a-/AOh14GhqFcgnnsfxaGieR2Pb822y6Lh9LlVFxiLjVcJw7A=s96-c","level":1,"courseCode":"AI-ML-001","domain":"AI-ML","title":"AI/ML Level 1 Report","content":"# **Task 1**\n## **Linear Regression Boston Dataset**\n \t\n         Linear Regression is a machine learning algorithm based on supervised learning. It is used for finding out the relationship between variables and forecasting. \n         A linear regression line has an equation of the form Y = a + bX, where X is the explanatory variable and Y is the dependent variable. The slope of the line is b, and a is the intercept (the value of y when x = 0).\n         Linear Regression is one of the basic algorithms in machine learning. We start with importing basic modules such as numpy, pandas and matplotlib.\n![Importing libraries and data](https://drive.google.com/uc?export=view&amp;id=1RIzJVwY71HB8syExesYIPgm1GXuzdPiq)\n        The above image has code to import data which we get in sklearn.datasets, the libraries numpy and pandas supports multidimentional arrays and provides tools for mnipulating data respectively. \n\n         We put the data into a data frame which behaves like an 2D array in C, using Pandas. With data frames we can manipulate the data mathematically by using inbuilt methods in pandas which is called data cleaning. pd.DataFrame() converts data to data frame , columns headings are set to the feature_names. Then we add the house prices to it.\n\n![](https://drive.google.com/uc?export=view&amp;id=1CGaPIE8dgAAA95fUWcDLWO4O4FPABbd4)\n       The model called regressor is trianed with 80% of the data available. \n![](https://drive.google.com/uc?export=view&amp;id=1RYYhoMV_muO4C4jsF0kXWCme1WPRpals)\n![Plotting results](https://drive.google.com/uc?export=view&amp;id=1MQyQQnDpKPukrKWc4B9fnPcOl_SkXB0I)\nThe above image shows the scatter plot of the model and we have calculated the mean squared error which out to be 33.4\nThe model is 66.55% accurate.\n\n## **Logistic regression on Iris Dataset**\n        \n         Logistic regression is modelling the probability of a discrete outcome given an input variable. It says whether something is true or false. The prediction logistic regression is categorical.\n         We start with loading the required modules and iris data from sklearn.datasets.\n         The different classes in iris dataset are present in iris.target and different features based on which they are divided are present in iris.feature_names. \n![](https://drive.google.com/uc?export=view&amp;id=1N6dsziys45yidxOG_7xEVJhGMdNVGa9e)\nThe above image shows the confusion matrix of the classification .The accuracy_score is imported from sklearn.metrics and the accuracy is found to be 97%.\n\n\n# **Task 2:**\n## Plotting graphs**\n\n       Some of the plot which are plotted using  matplotlib.pyplot and  seaborn  are shown here.\n\n      Area plot and line plot\n     ![Area plot and line plot](https://drive.google.com/uc?export=view&amp;id=11a-M9Zba6JSsx_NqA5sucXX6tCx5Zf6M) The area plot covers the area under the plot where the other doesn't\n     \n  Scatter and Bubble Plot \n![Scatter and Bubble Plot](https://drive.google.com/uc?export=view&amp;id=11SVOVYg2hmq_g6yGOxOQfwZckDRvStC2)\n    In scatter charts, the x-axis displays one numeric field and the y-axis displays another, making it easy to see the relationship between the two values for all the items in the chart. In a bubble chart, a third numeric field controls the size of the data points.\n\nBox plot\n![Box plot](https://drive.google.com/uc?export=view&amp;id=1TbXeIy6EYBO8LqjDpUrQH662t_Nod1z1)\n     Box plot is used to have information on the variability or dispersion of the data i.e., quartile deviations.\n\nPie Plot\n![Pie plot](https://drive.google.com/uc?export=view&amp;id=1ZeFvpC0sCMg7otdS2gEnVibUmVDLEnco)\n     Pie plot is circular plot to display one series of data.\n    \nViolin plot\n![Violin Plot](https://drive.google.com/uc?export=view&amp;id=1ozXoyosJi8UoPRaJmVjtNyZfoaHrPS05)\n     Violin plots depict summary statistics and the density of each variable.\n\n Marginal plot\n![Marginal plot](https://drive.google.com/uc?export=view&amp;id=1JXv651TBZltzftiU42-UBynSiuhSX4nn)\n    Marnal plots shows the corelation between two variables.\n\n3D Plot\n![3D plot](https://drive.google.com/uc?export=view&amp;id=1_nnUSZ9hpUxLlXef--9gPjw6nsjQvBUC)\n   3D plot shows relationship between three variables.\n\n# **Task 3:**\n## Metrics and Performance Evaluation**\n       The top_k_accuracy_score function is a generalization of accuracy_score. a prediction is considered correct as long as the true label is associated with one of the k highest predicted scores.\n![](https://drive.google.com/uc?export=view&amp;id=1QfHIYeEr1s8JoDH9JhHtNsMAS_49cWzw)\n\nThe above image shows top_k_score.\n\nThe accuracy_score function computes either the fraction (default) or the count (normalize=False) of correct predictions.\n\nacc = np.sum(predictions == y_test)/len(y_test)\n\nThe classification_report function builds a text report showing the main classification metrics.\n![](https://drive.google.com/uc?export=view&amp;id=1-MfldUH9WeXz7km0aFaOyBuuxZLg5NOi)\n    The above image shows precision , f1-score,and recall.\n\n     Precision is the ability of the classifier not to label as positive a sample that is negative, and recall is the ability of the classifier to find all the positive samples.\n\n     The F-measure is a weighted harmonic mean of the precision and recall. A Fβ measure reaches its best value at 1 and its worst score at 0\n\n     The hamming_loss computes the average Hamming loss or Hamming distance between two sets of samples\n\n     Max_error function computes the maximum residual error , a metric that captures the worst case error between the predicted value and the true value.\n\n     Mean absolute error: function computes mean absolute error, a risk metric corresponding to the expected value of the absolute error loss or l1-norm loss.\n\n![](https://drive.google.com/uc?export=view&amp;id=1_qpRZz3OiqJQG8GRZhehIXan7wkC0-sw)\nThe above image shows max_error\n\n         R² score represents the proportion of variance (of y) that has been explained by the independent variables in the model. It provides an indication of goodness of fit and therefore a measure of how well unseen samples are likely to be predicted by the model, through the proportion of explained variance\nThe image below shows R2 score.\n       \n![](https://drive.google.com/uc?export=view&amp;id=1XdU3h89dPe9rE90gb-e7vp-0r3yeQM5N)\n\n\n# **Task 4: **\n\n## ** Implementing Linear regression from scratch**\n      In linear Regression we try to predict the continuous values through the linear equation y = wx +b where w is the weight and b is called the bias\n\n#### **Cost Function**\n\n      We initially take the random value as bias then we calculate the error that we get which is called cost function. \n\n      Then plot a graph of error and for different weights, using derivatives we find the least loss which is called the gradient dissent\n\n\n![](https://drive.google.com/uc?export=view&amp;id=1i1EE_3AFfVDFLEXxwV2GkuGwfIibsSM5)\nThe image illutrsa=tes the gradient dissent.\n\n      We rapidly or slowly move down the curve based on how far are we from the global minimum.\n\nAdjusted weights and bias.\n\n\nw = w- a.dw\n\nb = b – a.db\n\n\n![](https://drive.google.com/uc?export=view&amp;id=1bdEd0zMC_KlHHja_fzF-A5mClgPnHROH)\nThe scatter plot of data set used shown in above figure.\n![](https://drive.google.com/uc?export=view&amp;id=1hxeQjv2E3CruZx7KBOuH1CqtGG-jQ9hW)\nThe above shows the actual value and the prdicted value which is straight line.\n\n\n## **Logistic Regression from scratch:**\n\n        Logistic regression is used for binary classification so we use a sigmoid function s(x) = 1/(1 + (e)**-x)\n\n![](https://drive.google.com/uc?export=view&amp;id=1YfIBIGkG3puCzKvqLZ0gAylHFNqFQ_md)\n\nThe above image shows how classification is done using sigmoid function.\nIf the value is less than 0.5 then it is zero else it is classified one.\n![](https://drive.google.com/uc?export=view&amp;id=1FK7XXDuk2d6tY1UsFSzBBqbCqCQwRgTY)\nThe above image shows the code in python to implement logistic regression\n![](https://drive.google.com/uc?export=view&amp;id=1R4YENU7F93suggol-cUlaEzvL_SAaDmj)\nThe above image shows the accuracy of the model.\n\n# **Task 5:**\n\n## **K – Nearest Neighbour (KNN) Algorithm :**\n\n\t KNN is a supervised classification algorithm we can use to assign a class to new data point. It can be used for regression as well when data is continuous.\n\n\t\nWorking:\n\n\tStart with a dataset with known categories. The new data points are classified based on the distance of the new data point from the nearest k neighbours. For computing the distance measures such as Euclidean distance, Hamming distance or Manhattan distance will be used.\nThe image below illustrates the working of the model.\n![](https://drive.google.com/uc?export=view&amp;id=12xEcedJRWZoVBU_1kvb3GvtELSpee-nr)\n      \n        In the case of Iris dataset which consists of 150 instances of three classes namely Setosa, Versicolour and Virginica. Based on four features sepal length, sepal width, petal length, petal width.\n\n      Training the model:\n\n      80% of the available data is used for training and the remaining is used for testing the model. We use the module train_test_split available in sklern.model_selection to split the data.\n![](https://drive.google.com/uc?export=view&amp;id=1OvbKG9jRSdpH7X1LqnOszsATsaUPTfsa)\nThe above image shows the code to implement knn.\n![](https://drive.google.com/uc?export=view&amp;id=1v0pKCdUkwWvccBh71asGCS_w470rqT8w)\nThe confussion matri of results is shown in the above image.\n      KNN for wine dataset\n![](https://drive.google.com/uc?export=view&amp;id=15qgFBIv0sPt9aL9KZ357x3lFNwyqQWsS)\n\n      The model score is 80%\n\n      Implementing KNN from scratch\n![](https://drive.google.com/uc?export=view&amp;id=1RnJDyx54JuOyMB8NbhIJUW3Agum8Q1Ox)\nThe above image shows the image for the code for the implementation from sratch.\n![](https://drive.google.com/uc?export=view&amp;id=1wluedRlCkEcZ27sSB-a6mcNXQwOaOd_0)\nThe results are shown in the above figure.\n      After the model is trained with 80% of data we got 90% accuracy.\n\n#### Notebooks:\n[Task 1a](https://github.com/Bhargav-Adya/ML/blob/main/house%20price%20prediction%20boston%20dataset.ipynb)\n\n[Task 1b](https://github.com/Bhargav-Adya/ML/blob/main/iris%20dataset.ipynb)\n\n[Task 2](https://github.com/Bhargav-Adya/ML/blob/main/Task%202.ipynb)\n\n[Task 3](https://github.com/Bhargav-Adya/ML/blob/main/task%203.ipynb)\n\n[Task 4a](https://github.com/Bhargav-Adya/ML/blob/main/linear%20regression%20srcatch.ipynb)\n\n[Task 4b](https://github.com/Bhargav-Adya/ML/blob/main/Logistic%20Regression%20scratch.ipynb)\n\n[Task 5](https://github.com/Bhargav-Adya/ML/blob/main/knn_iris.ipynb)\n\n\n##### Full Report:\n\n[Report](https://github.com/Bhargav-Adya/ML/blob/main/Level%201%20Report.docx%20-%20Google%20Docs.pdf)","tags":["AI/ML"," Report Level 1"],"reviewStatus":"APPROVED","feedback":"","rankingScore":1,"createdAt":"2022-05-23T09:42:26.571Z","updatedAt":"2022-06-13T10:33:47.296Z","slug":"ai-ml-level-1-report-bhargav-adya-l","__v":0},{"_id":"62a3105cce4c4ef514e78b84","authorId":"104388636569845587368","authorName":"Kushal","authorSlug":"kushal","authorImage":"https://lh3.googleusercontent.com/a/AATXAJwnq0lCx5miTa73l1zzP-3DayG8UCx9HIC1YHZcKA=s96-c","level":1,"courseCode":"AI-ML-001","domain":"AI-ML","title":"LEVEL-1 REPORT BY KUSHAL S R","content":"# LEVEL-1 REPORT BY KUSHAL S R\n# TASK-1\n# 1. LINEAR REGRESSION\nRegression analysis is used to model the relationship between a single dependent variable Y (aka response, target, or outcome) and one or more independent variables X (aka predictor or feature).\n![](https://i.imgur.com/ljIIIU9.jpg)\nThe fitted (predicted) values typically denoted by Y-hat, and β-hat coefficients are chosen by the model as they minimize the squared distance (aka residuals) between the actual Y value and the best fit (Y-hat) minimizing the following expression i.e. having values with the least variance.\nStep-1: Import the libraries\n![](https://imgur.com/OUdx5Uv.jpg)\n Step-2: load boston dataset model\n![](https://imgur.com/oLjtZ2D.gif)\nStep-3 : Setting dependent and independent variables\n![](https://imgur.com/boVkfnq.jpg)\nStep-4: Fitting the model and splitting the dataset into training and testing sets\n![](https:oc//imgur.com/1wbrJr3.jpg)\nStep-5: Predicting the values of y from the testing set using the model created\n![](https://imgur.com/ORHxSXS.jpg)\nStep-6: Performance metrics\n![](https://imgur.com/M2LoePD.jpg)\n\n# 2. LOGISTIC REGRESSION\nLogistic regression is basically a supervised classification algorithm. In a classification problem, the target variable(or output), y, can take only discrete values for a given set of features(or inputs), X.\n\nHere the procedure is same as linear regression except we map the dependent variable to a category like the type of flower, in iris dataset we have 3 types of flowers so y can have 3 values namely 0,1,2.\n\nHere we use decision boundaries to put the continuous values into categorical ones.\n![](https://imgur.com/05W9HR5.jpg)\nStep-1: Import libraries and  load the dataset\n![](https://imgur.com/WSO6PRN.jpg)\nStep-2: Mapping the values and defining the dependent and independent variables and fitting the model\n![](https://imgur.com/THv3qEg.jpg)\nStep-3: Predicted values and performance(score)\n![](https://imgur.com/ktIwIj3.jpg)\n\n# TASK-2\nMatplotlib is one of the most popular and oldest plotting libraries in Python which is used in Machine Learning. In Machine learning, it helps to understand the huge amount of data through different visualisations.\n![](https://imgur.com/DH4o6m0.jpg)\nImporting the required libraries and loading the dataset\n![](https://imgur.com/VBl7Fgb.jpg)\nBar graph\n![](https://imgur.com/Ri4z6cK.jpg)\nScatter plot\n![](https://imgur.com/COLBRuK.jpg)\n\n# TASK-3\nPerformance metrics are a part of every machine learning pipeline. They tell you if you’re making progress, and put a number on it. All machine learning models, whether it’s linear regression, or a SOTA technique like BERT, need a metric to judge performance\nRegression metrics\n\n- Mean Absolute Error (MAE),\n- Mean Squared Error (MSE),\n- Root Mean Squared Error (RMSE),\n- R² (R-Squared).\n![](https://imgur.com/X29l68O.gif)\n\n# Classification Metrics\nClassification is one of the most widely used problems in machine learning with various industrial applications, from face recognition, Youtube video categorization, content moderation, medical diagnosis, to text classification, hate speech detection on Twitter.\n\nModels such as support vector machine (SVM), logistic regression, decision trees, random forest, XGboost, convolutional neural network¹, recurrent neural network are some of the most popular classification models.\n\n1- Confusion Matrix\n![](https://imgur.com/dm8Y2Z4.jpg)\n2- Classification Accuracy\n\n3- Precision\n\n4- Recall\n\n5- F1 Score\n\n6- Sensitivity and Specificity\n\n7- ROC Curve\n\n8- AUC Area Under Curve\n\n# TASK-4\n# Linear Regression from Scratch\nData\n\nThe first step for any machine learning problem is getting the data\n\n```\ndef load_data(filename):\n\n    df = pd.read_csv(filename, sep=\",\", index_col=False)\n\n    df.columns = [\"housesize\", \"rooms\", \"price\"]\n\n    data = np.array(df, dtype=float)\n\n    plot_data(data[:,:2], data[:, -1])\n\n    normalize(data)\n\n    return data[:,:2], data[:, -1]\n```\nNormalize the data\n\nZ = (x — μ) / σ\n\nμ : mean\n\nσ : standard deviation\n\nPlot the data\n\nHypothesis\n\nhθ(x) = θ0 + θ1x1 + θ2x2\n\nCost Function\n![](https://imgur.com/HM8HHww.jpg)\n\n# TASK-5\nK-Nearest Neighbour is one of the simplest Machine Learning algorithms based on Supervised Learning technique. K-NN algorithm assumes the similarity between the new case/data and available cases and put the new case into the category that is most similar to the available categories.\n\n## Implementing K-NearestNeighbour Algorithm for Iris dataset\nImporting the required libraries and loading the dataset\n\n![](https://imgur.com/McI2VY9.jpg)\nData Normalization and fitting the model\n![](https://imgur.com/XOgPW42.jpg)\nMetrics\n![](https://imgur.com/uFVBWK2.jpg)","tags":["ai ml","regression"],"reviewStatus":"FLAGGED","feedback":"Task 1, ss4 unable to see\nTask 3, classification matrix points explain ","rankingScore":1,"createdAt":"2022-06-10T09:35:25.022Z","updatedAt":"2022-06-13T10:24:00.535Z","slug":"level-1-report-by-kushal-s-r-kushal","__v":0},{"_id":"62a4c84fce4c4ef514e78bb1","authorId":"109330081501351077846","authorName":"EN Sharan","authorSlug":"en-sharan","authorImage":"https://lh3.googleusercontent.com/a/AATXAJzCkmnEU2rcATUW6P0LiRt94byB3qA7Yy0Vjgiu=s96-c","level":1,"courseCode":"AI-ML-001","domain":"AI-ML","title":"Level 1 Task Reports","content":"# Task 1 Report\n# Linear and Logistic Regression - HelloWorld for AIML\n## Overview\nRegression analysis is a statistical methodology that allows us to determine the strength and relationship of two variables. Regression is not limited to two variables, we could have 2 or more variables showing a relationship. The results from the regression help in predicting an unknown value depending on the relationship with the predicting variables. For example, someone’s height and weight usually have a relationship. Generally, taller people tend to weigh more. We could use regression analysis to help predict the weight of an individual, given their height.\n\nWhen there is a single input variable, the regression is referred to as **Simple Linear Regression**. We use the single variable (independent) to model a linear relationship with the target variable (dependent). We do this by fitting a model to describe the relationship. If there is more than predicting variable, the regression is referred to as Multiple Linear Regression.\n\n\nLogistic regression is a classification algorithm used to assign observations to a discrete set of classes. Some of the examples of classification problems are Email spam or not spam, Online transactions Fraud or not Fraud, Tumor Malignant or Benign. Logistic regression transforms its output using the logistic sigmoid function to return a probability value.\n\nWhat are the types of logistic regression?\n\n1.Binary\n\n2.Multinomial\n\n3.Ordinal\n\n\nThe complete task report for the given task is available in the link below\n\n[Task 1 report](https://github.com/sharanEN27/UVCE-Marvel-Level1/blob/298e69fb2f771f99563ce73d27a34abf36c17dd7/Task%201.md)\n\n#Task 2 Report\n#Matplotlib and Visualizing Data\n\n## Overview\n\nData visualization involves graphically plotting data and is an effective way to communicate inferences from data. Using data visualization, we can get a visual summary of our data. With pictures, maps and graphs, the human mind has an easier time processing and understanding any given data. Data visualization plays a significant role in the representation of both small and large data sets, but it is especially useful when we have large data sets, in which it is impossible to see all of our data, let alone process and understand it manually.\n\n\nThe complete task report for the given task is available in the link below\n\n[Task 2 report](https://github.com/sharanEN27/UVCE-Marvel-Level1/blob/c44e78eff0323b4630e506bf35a1fbed62f33ab9/Task%202.md)\n\n#Task 3 Report\n##Metrics and Performance Evaluation\n##Overview\n\nPerformance metrics are a part of every machine learning pipeline. They tell you if you’re making progress. Every machine learning task can be broken down to either Regression or Classification, just like the performance metrics\n\nMetrics are used to monitor and measure the performance of a model (during training and testing), and don’t need to be differentiable.\n\nEvaluation metrics explain the performance of a model. An important aspect of evaluation metrics is their capability to discriminate among model results. \n\n\nThe complete task report for the given task is available in the link below\n\n[Task 3 report](https://github.com/sharanEN27/UVCE-Marvel-Level1/blob/c44e78eff0323b4630e506bf35a1fbed62f33ab9/Task%203.md)\n\n#Task 4 Report\n##Linear and Logistic Regression - Coding the model from SCRATCH\n##Overview\n\nLinear regression and logistic regression model can be implemented from scratch using various functions which includes mathematical implementation.\n\n\nThe complete task report for the given task is available in the link below\n\n[Task 4 report](https://github.com/sharanEN27/UVCE-Marvel-Level1/blob/298e69fb2f771f99563ce73d27a34abf36c17dd7/Task%204.md)\n\n#Task 5 Report\n#K- Nearest Neighbor Algorithm\n##Overview\n\nKNN also called K- nearest neighbour is a supervised machine learning algorithm that can be used for classification and regression problems. K nearest neighbour is one of the simplest algorithms to learn. K nearest neighbour is non-parametric i,e. It does not make any assumptions for underlying data assumptions. K nearest neighbour is also termed as a lazy algorithm as it does not learn during the training phase rather it stores the data points but learns during the testing phase. It is a distance-based algorithm.\n\nThe complete task report for the given task is available in the link below\n\n[Task 5 report](https://github.com/sharanEN27/UVCE-Marvel-Level1/blob/c44e78eff0323b4630e506bf35a1fbed62f33ab9/Task%205.md)\n\n###The source code for the the 5 tasks are available in the links provided below\n\n[Task 1-Linear regression using scikit-learn](https://github.com/sharanEN27/UVCE-Marvel-Level1/blob/dff64c40551c8201637946166e0e119fcb1f17ee/Source%20code/LinearRegressionModel%20Task%201.ipynb)\n\n[Task 1-Logistic regression using scikit-learn](https://github.com/sharanEN27/UVCE-Marvel-Level1/blob/dff64c40551c8201637946166e0e119fcb1f17ee/Source%20code/LogisticRegressionModel%20Task%201.ipynb)\n\n[Task 2-Matplotlib and Visualizing Data](https://github.com/sharanEN27/UVCE-Marvel-Level1/blob/dff64c40551c8201637946166e0e119fcb1f17ee/Source%20code/Matplotlib%20and%20Visualizing%20Data%20Task%202.ipynb)\n\n[Task 3-Metrics](https://github.com/sharanEN27/UVCE-Marvel-Level1/blob/dff64c40551c8201637946166e0e119fcb1f17ee/Source%20code/Metrics%20Task%203.ipynb)\n\n[Task 4-Linear Regression Algorithm from scratch](https://github.com/sharanEN27/UVCE-Marvel-Level1/blob/dff64c40551c8201637946166e0e119fcb1f17ee/Source%20code/Linear%20Regression%20Algorithm%20from%20scratch%20Task%204.ipynb)\n\n[Task 4-Logistic Regression Algorithm from scratch](https://github.com/sharanEN27/UVCE-Marvel-Level1/blob/dff64c40551c8201637946166e0e119fcb1f17ee/Source%20code/Logistic%20Regression%20Algorithm%20from%20scratch%20Task%204.ipynb)\n\n[Task 5-KNN algorithm using sklearn](https://github.com/sharanEN27/UVCE-Marvel-Level1/blob/dff64c40551c8201637946166e0e119fcb1f17ee/Source%20code/KNN%20algorithm%20using%20sklearn%20Task%205.ipynb)\n\n[Task 5-KNN algorithm from scratch](https://github.com/sharanEN27/UVCE-Marvel-Level1/blob/dff64c40551c8201637946166e0e119fcb1f17ee/Source%20code/KNN%20algorithm%20from%20scratch%20Task%205.ipynb)\n\n","tags":[],"reviewStatus":"APPROVED","feedback":"","rankingScore":1,"createdAt":"2022-06-11T16:52:31.827Z","updatedAt":"2022-07-11T03:48:59.438Z","slug":"level-1-task-reports-en-sharan","__v":0},{"_id":"62cf084f5172da7114d5d5a7","authorId":"109773147484993338864","authorName":"Sujatha Bhat","authorSlug":"sujatha-bhat","authorImage":"https://lh3.googleusercontent.com/a-/AOh14Ghc0im4uC71yBwQUUwduwjI4C5y0YA84rD2jTl_8IM=s96-c","level":1,"courseCode":"CL-CY-001","domain":"CL-CY","title":"Level 1 project report","content":"# Task 1\n##PREREQUISITES\n\n&gt; This task has two concepts in it which serve as the prerequisites for learning about cloud computing and cyber security. They are  Basic knowledge of C++ and Python and operating systems. Through this task, I learned to write efficient code in c++. Python was a new language to me but I got to learn more about python. Now I can write programs in both c++ and python. I learnt about various types, features of OS and many new concepts regarding OS.\n\n\n&gt; [task1report](https://github.com/SujathaBhat/Marvel/blob/91f05b83721d57bfeca144e39e935935602a8496/cloud/Task%201.pdf)\n\n#Task 2\n##Get started with cloud computing\n\n&gt; In this task, I got familiar with various concepts of cloud computing like map reduce, virtual machine and others. With the knowledge gained by this task, I can explain various concepts of cloud computing. \n\n\n&gt; [task 2 report](https://github.com/SujathaBhat/Marvel/blob/91f05b83721d57bfeca144e39e935935602a8496/cloud/Task%202.pdf)\n\n\n#Task 3\n##Cyber Security foundations\n\n&gt; In this task, I got to take an online course on cyber security. Through this task, I learned about the foundation of cyber security, about which I was always curious. I was introduced to a wide range of concepts in cyber security. I learned about the Design of Secure Systems, Goals, key concepts of Cybersecurity, popular attacks, Buffer Overflow, Cryptography, Types of Cryptography, Designing a security system, case studies, etc. This inspired me to learn more and more about cyber security.\n\n\n&gt; [task 3 report](https://github.com/SujathaBhat/Marvel/blob/91f05b83721d57bfeca144e39e935935602a8496/cloud/Task%203.pdf)\n\n#Task 4\n##Introduction to Cyber Security Course\n\n&gt; I  learnt about various cyber threats and their types. I also learned about various cyber security tools, and security policies which help us to keep the cyber network safe. I also learned about various hacking tools and how important it is to learn more about cyber security factors which are important for our day-to-day life.\n\n&gt; [task 4 report](https://github.com/SujathaBhat/Marvel/blob/91f05b83721d57bfeca144e39e935935602a8496/cloud/Task%204.pdf)\n\n#Task 5\n##Create AWS EC2 Virtual Machine\n\n&gt; In this task, I got to know in detail about virtual machines. I learned to download, install and run virtual machines. I also created a virtual machine. The steps followed in the process are given in the report below.\n\n&gt; [task 5 report](https://github.com/SujathaBhat/Marvel/blob/91f05b83721d57bfeca144e39e935935602a8496/cloud/Task%205.pdf)\n\n#Task 6\n##Get started with Azure \n\n&gt; Through this task, I understood about azure subscription, account, architecture, and many other concepts about azure. I also learned about azure virtual networks, azure storage devices and many more. The details about which are given in the report.\n\n&gt; [task 6 report](https://github.com/SujathaBhat/Marvel/blob/91f05b83721d57bfeca144e39e935935602a8496/cloud/Task%206.pdf)\n\n#Task 7\n##Kali Linux - Install and Basic understanding\n\n&gt; In this task, I got introduced to Kali Linux which security professionals use. I learned about how to install Kali Linux on a system. I also learned about the various features and applications of Kali Linux. I am now able to install Kali Linux on the system. The process of installing Kali Linux and other details about Kali Linux is given in detail in the report below.\n\n&gt; [task 7 report](https://github.com/SujathaBhat/Marvel/blob/91f05b83721d57bfeca144e39e935935602a8496/cloud/Task%207.pdf)\n\n#Task 8\n##Develop ethical hacking tools using Python\n\n&gt; In this task, I learned about the process of ethical hacking. I learned to code keylogger. I also learned to write zip password brute force in python. I also got to know how to use python to build various tools used in ethical hacking. I have also built a keylogger. \n\n&gt; [task 8 report](https://github.com/SujathaBhat/Marvel/blob/91f05b83721d57bfeca144e39e935935602a8496/cloud/Task%208.pdf)\n\n\n\n\n\n\n\n\n\n\n","tags":[],"reviewStatus":"APPROVED","feedback":"","rankingScore":1,"createdAt":"2022-07-13T18:00:47.899Z","updatedAt":"2022-07-14T13:24:39.746Z","slug":"level-1-project-report-sujatha-bhat","__v":0},{"_id":"62f27743a7e8566efeeb1f51","authorId":"112762218547815767821","authorName":"Anusha L","authorSlug":"anusha-l","authorImage":"https://lh3.googleusercontent.com/a/AATXAJwn-9i3sr80ya6NuSLO4OqB7Sx_tmKe44rRUUOb=s96-c","level":1,"courseCode":"EV-RE-001","domain":"EV-RE","title":"Level 1 - Report","content":"### **Task 1-Speed Control using Potentiometer**\nL298N was used in this task. I assembled the circuit and the enable for the driver module\nwas given. For this task had connected two motors to the driver module. Using Arduino I\npowered the driver module with 5V. The 12V was given using an adapter, Grounds were\nconnected. A potentiometer(10K) was connected on the bread board and connected to the\nUNO.\nCode was fed through Proteus. By varying the potentiometer i could clearly see the speed of the motor varying as well.\n\n### **TASK 2-Direction Control of a Motor**\nWhen the value of the potentiometer is in a range the motor should move clockwise once it crosses the range it has been rotating in the anti clock direction.\nFor this task I connected the L298N module which was used for both speed and direction\ncontrol. A potentiometer was connected to the arduino. The driver module was powered and connected to the arduino. By varying the potentiometer value i could vary the direction of rotation of the wheel.\n\n### **TASK 3-POINT TURN OF VEHICLE**\nFirst the circuit was connected. The two motor wheels were connected to the\noutputs of the L293d and the 9v supply was given via a battery and the\nground pin of the driver module and arduino are connected. The respective\nconnections for the enable for each motor and input are connected from the\npins of arduino. The code is fed into arduino and once we run the code the\nvehicle takes a point turn based on the coordinates given.(my case left\nturn).\n\n### **Task 4-Line Follower Bot**\nFirst the circuit is built using the L298D module. The motor outputs are connected to the driver module outputs. The module is powered. The IR sensors were used to sense the line. A total of IR sensors were used. The sensors were connected to the arduino pins. Using 9v batteries the power was supplied. The code is uploaded to the arduino and when a track is made the bot follows the track.\n\n\n\n","tags":[],"reviewStatus":"APPROVED","feedback":"","rankingScore":1,"createdAt":"2022-08-09T15:03:31.193Z","updatedAt":"2023-01-25T14:31:45.062Z","slug":"level-1-report-anusha-l","__v":0},{"_id":"6371253139a6577d56575cf1","authorId":"115226457739720150827","authorName":"Suresh","authorSlug":"suresh","authorImage":"https://lh3.googleusercontent.com/a/ALm5wu0-Ei0IPPg5XPgA1PAcDAvU_a8TJR-L8I8UE74w=s96-c","level":1,"courseCode":"EV-RE-001","domain":"EV-RE","title":"LEVEL1   REPORT ","content":"I have designed an astable_multivibrator for a duty cycle of 63.7%.\nsince it is an ideal one it generates a square wave signal.\nThe design image can be seen at :\n'https://github.com/sureshpatel9210/UVCE_marvel_TASKS/blob/TASK1/AStable_63.5_percent.png'\nthe output can be seen at:\n'https://github.com/sureshpatel9210/UVCE_marvel_TASKS/blob/TASK1/astable_output.png'\nthe spice file can be downloaded from:\n'https://github.com/sureshpatel9210/UVCE_marvel_TASKS/blob/TASK1/Astable_spice_file.asc'\nTASK-2 controlled the speed of a DC motor using L298-N dual-h-bridge,i have also applied the same where i  built a MAZEBOT for participation in INSPIRON technical event ,(TASK_3)controlling speed of a DC motor is done by varying the gate voltages of the mosfet drivers,(TASk_4) point turn of a 4 wheeler vehicle is achieved using L293-D(dual H-bridge) motor driver have 4 output control pins compared to L293-D having only two. \n\n(TASK-5)I have also built obstacle avoidance bot which takes turn at the right time when it encounters obstacle at a specified distance,this requires the use of ultrasound sensor it detects distances by measuring the delay between transmission and reception analogous to EM waves in RADAR but here the sound waves travel at speed of sound thus the DISTANCE is product  speed of sound and the delay/2 since it travels 2 times the distance from obstacle ,this concept was also applied to the MAZEBOT as i mentioned above.\n\nTASK 7 -temperature humidity sensor was interfaced with arduino,but was not implemented with LCD-display\n\nTASK-8 HALL effect sensor was aslo implemented and the rpm values were seen as shown in image at https://github.com/sureshpatel9210/UVCE_marvel_TASKS/blob/main/TASK8_hall_sensor/hall_sensor_v1.jpeg\nalso video is uploaded at \nhttps://github.com/sureshpatel9210/UVCE_marvel_TASKS/blob/main/TASK8_hall_sensor/hall_sensor.mp4\n\nI am very sorry that I tried to finish the other tasks but since due to the placements and academics there was huge shoratge of time due to which i was unable to finish them.\n\nMARVEL is playing a very important role in enriching the quality of knowledge gain in my journey of gaining knowledge.it makes me to know about things out of the box.","tags":[],"reviewStatus":"PENDING","feedback":"","rankingScore":1,"createdAt":"2022-11-13T17:11:13.270Z","updatedAt":"2023-01-29T11:27:23.054Z","slug":"level1-report-suresh","__v":0},{"_id":"637a2a362fb19e250d73fc7c","authorId":"118410162464738169067","authorName":"Bhavid A","authorSlug":"bhavid-a","authorImage":"https://lh3.googleusercontent.com/a/ALm5wu0WR2QOVsRvnREm_m-xzRP9-GShmUb6_-IrXrg80g=s96-c","level":1,"courseCode":"IOT-001","domain":"IOT","title":"MARVEL IOT-001 Level 1 Report","content":"\n![](https://drive.google.com/uc?export=view&amp;id=1j1rBMbzRWv2dnfcPZeK1KyTYaV1CUSEv)\n\n### Task 1: Setting up the ESP32 and Blink an LED\nFirst, I set up the Arduino IDE and imported the corresponding files required for coding ESP32.\n\nThen, I have written the code for blinking 3 LED’s one after the other.\n\n![](https://drive.google.com/uc?export=view&amp;id=1KVqenPOfhnQHFKODxoiKqniOzuL1KhfR)\n\n*Fig. Code*\n\nThe code was simulated on [Wokwi](https://wokwi.com/):\n\n[Simulation link](https://wokwi.com/projects/345293934569718356)\n\n![](https://drive.google.com/uc?export=view&amp;id=1AthSK6EDHsfgeoy-DNckVWxFep1JEhRk)\n\n*Fig. Simulation*\n\nThen, the above simulations were implemented using hardware.\n\n![](https://drive.google.com/uc?export=view&amp;id=18Tzx9Ekq1hrru61D3dcSH_XdNS7c9Ews)\n\n*Fig. Implementation*\n\n*Video of Implementation*\n\n<iframe height=\"525\" src=\"https://www.youtube.com/embed/B0S1-otZIJA?list=PLM81H9Z5Ti3ymuUS3E3CQc-WcFUzWYmaY\"></iframe>\n\n**Skills acquired:**\n\n- Familiarity with Arduino IDE\n\n- ESP32 basics\n\n- Coding of ESP32\n\n### Task 3: Basics of MQTT protocol\n\nRead about MQTT Protocol.\n\n**Summary:**\n\n- MQTT stands for Message Queuing Telemetry Transport. MQTT is a simple messaging protocol, designed for constrained devices with low bandwidth.\n\n- MQTT – Publish/Subscribe: The first concept is the publish and subscribe system. In a publish and subscribe system, a device can publish a message on a topic, or it can be subscribed to a particular topic to receive messages.\n\n![](https://drive.google.com/uc?export=view&amp;id=1BTjnOBmtFWfYbK0_sb2ko5MSDs8_MGD9)\n\n*Fig. MQTT publish and subscribe*\n\n- MQTT- Messages: Messages are the information that you want to exchange between your devices.\n\n- MQTT – Topics: Another important concept is the topics. Topics are the way you register interest for incoming messages or how you specify where you want to publish the message.\n\n- MQTT – Broker: The MQTT broker is responsible for receiving all messages, filtering the messages, deciding who is interested in them, and then publishing the message to all subscribed clients.\n\n![](https://drive.google.com/uc?export=view&amp;id=1NfesxK23vruGG035xBScVGSWh1EfxLnc)\n\n*Fig. MQTT broker working*\n\n### Task 4:Basics of creating a website\n\n- Read a couple of websites to understand the syntax of HTML and CSS.\n\n- Inspected elements of some websites.\n\n- Went through the resources.\n\n- Implemented the required problem statement-Create a webpage with a button that when pressed toggles the color of the webpage.\n\n![](https://drive.google.com/uc?export=view&amp;id=1pSyyr6Cg8DevmJdccx1_NYTtlaszF1A3)\n\n*Fig. Webpage-Before*\n\n![](https://drive.google.com/uc?export=view&amp;id=1FcChttn_js8TCUkzzQ4aMPwjFLkLzMY4)\n\n*Fig. Webpage-After*\n\n*Video of Implementation*\n\n<iframe height=\"525\" src=\"https://www.youtube.com/embed/a3DJISqzy98\"></iframe>\n\n**Skills acquired:**\n\n- Basics of HTML and CSS\n\n&gt; **BHAVID A**\n\n&gt; *3RD YEAR ECE*","tags":["MARVEL","IoT","Bhavid","Level 1","Report"],"reviewStatus":"APPROVED","feedback":"","rankingScore":1,"createdAt":"2022-11-20T13:23:02.425Z","updatedAt":"2023-01-21T15:04:54.753Z","slug":"marvel-iot-001-level-1-report-bhavid-a","__v":0},{"_id":"637a44be2fb19e250d73fcc6","authorId":"102273199884430853787","authorName":"deepak panwar","authorSlug":"deepak-panwar","authorImage":"https://lh3.googleusercontent.com/a-/AFdZucpo8HwURngYDs3z9aZIV_CVN8J1nAKY_j6C5Qc8yA=s96-c","level":1,"courseCode":"IOT-001","domain":"IOT","title":"An interesting title","content":"# An interesting title\nBy Deepak Panwar  \nBatch-2 IoT  \nLevel-1 Report\n\n## &gt;&gt;Task-1\n## Setting up the ESP32 and blink an LED\n\nAim:\nTo configure the working of ESP32 along with the working of Arduino IDE. And finally, make the in-built LED of ESP32 blink using Arduino IDE.  \n![Alt text](https://drive.google.com/uc?id=1_V_i-UuQpdR1AZqK165_6GeyYSiKQ3IP)  \nEsp32: It is a 32 bit microcontroller which can be programmed using Arduino IDE.  \n  \nCode:\n\n![Alt text](https://drive.google.com/uc?id=10hnfONZQpeeonj52X8sjjYR9OqyCAShJ)  \n\n\nThe #define is used to redefine the global variable LED_BUILTIN to the pin number 19. The pin number 19 in this case is the one which controls the built-in LED of ESP32.\n\nThe void setup() function’s body, i.e. the code inside the braces executes when the code gets uploaded or the board resets itself and it runs only once. Here in this body we setup LED_BUILTIN variable as OUTPUT so that we can control the values of this output.  \n\nThe void loop() function is the function which runs over and over again till the board shuts down. The body of this functions contains the code for blinking of built in led of ESP32. The digitalWrite function takes two parameters one is the LED_BUILTIN and the other is whether its HIGH or LOW. And then the delay functions tell the board to sleep for a given time in ms.  \n\nSo here we tell the board to turn on the built-in LED and then wait for 1000ms and then turn it off and then wait for a 1000ms and then turn it on. This code runs on a loop so this function is executed till the board shuts itself down.  \n\n\n\n## &gt;&gt;Task-3\n## Basics of MQTT protocol  \n\nAim: Learn the basics of MQTT protocol and it working.\n\n![Alt Text](https://drive.google.com/uc?id=1y0ahzYPT2ETSivpBwUXUj_kzz7KGF68N)  \n\nMQTT:\nMQTT stands for Message Queuing Telemetry Transport. MQTT protocol is a\nconnectivity protocol used mostly for machine-to-machine communication in Internet of Things. It is extremely lightweight and uses publish/subscribe protocol. This protocol is useful for the connection with the remote location where the bandwidth is a premium.\n\nComponents of MQTT:\n* Message\n* Client\n* Broker or Server\n* Topic  \n\nMessage:\nThe data carried out by the protocol across the network is called message. It consists of the following parameters.\n1. Payload Data\n2. Quality of Service (QoS)\n3. Collection of Properties\n4. Topic Name  \n\nClient:\nClients are machines that are connected to the server or broker, i.e subscriber (information taker) and publisher (information giver). In simple terms, if a machine uses MQTT then it is a client. The clients chose specific topics to publish or subscribe to\nthe messages. Clients perform 2 types of operations in MQTT:\n1. Publish: Sending data to server or broker.\n2. Subscribe: Receiving data from server or broker.  \n\nServer:\nIt acts as the mediator between publisher and subscribers or in simple terms between\nclients. The server accepts connection requests to the network, accepts the messages\nfrom clients (publish), processes subscribe and unsubscribe requests, forwards\nmessages to subscribers and closes the network connection from the client.  \n\nTopic:\n![Alt Text](https://drive.google.com/uc?id=18q_jaXH1tdN2ATDt4XIJBNeI-kTo6S2p)    \n\nThe label of the message is called topic. It is useful in differentiating\nthe messages published by clients. Like in the given figure different\npublishers publish messages with different topics. And the subscribers\nsubscribe to a specific topic so the server forwards them the message publish to that specific topic.\n\nArchitecture of MQTT:  \nLet us look at an example to understand the\narchitecture of MQTT. Suppose a device has a\ntemperature sensor and wants to send the\ninformation to the broker. If a device wants this\ninformation, then two things will happen. The\npublisher defines a topic (e.g. temperature) and\npublishes the message. After publishing device\non the other side will subscribe to the topic (like\ntemperature) and then receive the published message. The broker’s role is to deliver\nthe published message to the clients that have subscribed to the message topic. \n\n\nMQTT message format:  \nThe MQTT uses the command and the\ncommand acknowledgment format, i.e each\ncommand has an associated acknowledgment.\nThe connect command has connect\nacknowledgment, subscribe command has\nsubscribe acknowledgment, and publish command has publish acknowledgment.  \n\nThe packets structure of MQTT has\na fixed header of 2 bytes which is\npresent in all MQTT packets. The\nsecond is variable header which is\nnot always present. The third is\npayload which might also be not\nalways present. Some commands do not use payload field like disconnect.\n\nFixed Header:  \nThe fixed header contains\ntwo bytes. In which the first\nbyte contains two fields.  \n\n\nMQTT Control Packet Type and Flag specific to each MQTT Packet type.\n* MQTT Control Packet Type: It occupies 4 bits, i.e., 7 to 4-bit positions. This 4-bit\nis an assigned value, and each bit represents the MQTT control packet type.\n* Flag specific to each MQTT packet type: The remaining 4-bits represent the flag\nspecific to each MQTT packet type.\nByte 2 contains the remaining length, it is a variable-length byte integer. It contains the\nnumber of bytes remaining in a current control packet.\n\nFlag bits:\n![Alt Text](https://drive.google.com/uc?id=1dJYS5-wt6DWqO2pI62nvhziRsCh4P9GC)  \n\nControl Packet types:\n![Alt Text](https://drive.google.com/uc?id=1xFWsWcOotAQMftguKv915vw32XGBWD6L)  \n\nRemaining length = length of variable header + length of payload\n\nVariable Header:  \nThis field is between the fixed header and the payload. The content of the variable\nheader depends upon the packet type. The variable header contains the packet\nidentifier field, which is common in several packet types. The variable header\ncomponent of many MQTT control packet types includes 2-byte integer, i.e., the\npacket identifier field.\nThe given list below contains the packet identifier field:\n* PUBLISH\n* PUBACK\n* PUBREC\n* PUBREL\n* PUBCOMP\n* SUBSCRIBE\n* SUBACK\n* UNSUBSCRIBE\n* UNSUBACK\n\nPayload:  \n![Alt Text](https://drive.google.com/uc?id=1nNR25kh3Ro2GsZVozwj0tBmot-w-VEso)  \nIn the ICMP message format, the last\nMQTT control packet is the payload. This\nfield contains the data which is to be sent.\nFor example, in the case of the CONNECT\npacket, the payload is a client ID, the\nusername and password, and the PUBLISH\npacket, the payload is just an application\nmessage.  \n\n\n\n## &gt;&gt;Task-4\n## Basics of creating a website\n\nAim:  \nLearning how to create a website both frontend and backend. Creating a webpage with a button that when pressed toggles the color of the webpage.\n\nFiles:  \n![Alt Text](https://drive.google.com/uc?id=1fFYx-pdv2gd0pEDgYH0KAyS4bzzgAbnS)  \n* app.js: File containing the backend part of the webpage being hosted. Nodejs and expressjs are used for coding the backend.\n* index.html: Html file containing the frontend part of the webpage. It contains the code for changing the background of the webpage.\n* package.json: this JSON file contains the information about all the packages installed in our project. It is used in creating package-lock.json\n* package-lock.json: This JSON file contains the original package tree ,i.e. the information about the versions of the packages in the projects before they were updated or removed. It also locks the dependency version.\n* Node_modules: This folder contains all the packages downloaded for this project.\n \nCode Overview:  \nThe code is divided into two parts the code for server which is written in app.js file and the code for the frontend HTML file which is written in index.html. The app.js initializes a server on a given port and sends index.html file to anyone who visits the site hosted by server.\n\nServer Code:  \n![Alt Text](https://drive.google.com/uc?id=1FEIV5U3UTz8EVtZ3gSfhTo1UM4OICJQy)  \n\n* Importing modules: Express and path modules are exported into variables called express and path respectively.\n* Initializing express application: We initialize a variable called app for the express application which will provide us with many functionality for our server.\n* Creating a route: app.get takes two parameters. The first is a string, which is used for creating a route for this get method and the second is a function or a callback. The callback has two parameters which are req(request) and res(response). We send the file as the response object by using res.sendFile function. This sendFile function takes one parameter which is the path or location of the file. Since our file is in the same location as our app.js, we use the __dirname variable to get the location of our current working directory and concatenate it with index.html using path.join function. Now that we have the location of the file we then close the body of the function.\n* Listening to a port: Now we finally tell our express application to listen to a given port by using app.listen function. This function takes two parameters one is the int or the port number. Other is the callback which is executed once the server starts running in the given port. Here we enter the port as 5000. And tell the code to print “Running on port 5000”, if this part of code get executed without errors.\n* URL of the site: Since we are hosting our application locally the first part of URL is “localhost” followed by a colon and then port number. Therefore, the address is “localhost:5000”. The route created by us on the code has a path of “/”, therefore in order to acess this just append the route name to the end of the site URL. Therefore to get index.html we type “localhost:5000/” or just “localhost:5000” since browsers automatically adds a / in the end of URL.  \n\nHTML Code:  \n![Alt Text](https://drive.google.com/uc?id=1zudi3Jv6PYp-Yzq9j8iXFIC4Zl5p_wyd)  \n* Document Format: Here the first line specifies the document type which is html followed by the language which is English. Then comes head tag which has meta tags and a title tag. Inside title tag we write the title of the page which is document in our case. Then we close the head tag and start with our body tag.\n* Body tag: Inside body tag we creating a heading of first order and put Hello World inside that heading. This is followed by a button with a text called Change color. This button when pressed executed a function called changeCol() written in our script tag. Then we close the body tag.\n* Script tag: Inside script tag we define the changeCol function. This function takes no parameter and returns no value. Inside this function we initialize 4 numbers. Three of them are integers and one being a float. The three integers will represent the values of red, blue and green and the float will represent the alpha value. Here math.random function gives a random number from 0(inclusive) to 1(exclusive). We then multiply this function by 256 to get maximum value less than 256, since 255 is the limit in each color option. Then we use math.floor to tell the number to transform itself into an integer which is closest and smaller than the given number. We don’t use math.floor function with a variable neither do we multiply it with a constant, since alpha value ranges from 0 to 1. Then we print all these variables onto the console. We then use the document object to get the background color property of the body tag, i.e. document.body.style.backgroundColor. We then set it to a rgba value and enter variables r, g, b and a in the fields. This then changes the document background color to a random color every time you press the button. \n\n![Alt Text](https://drive.google.com/uc?id=1wNiwLi9s7VoQk1LEVH2IdUBOdt0816dj)  \n![Alt Text](https://drive.google.com/uc?id=1jqCnyNo2n9b4KiNzccd7FioJAD25GoRR)  \n![Alt Text](https://drive.google.com/uc?id=1OVXSsxPqtg9Nsizu9ILdoRIQOPycwqq-)\n![Alt Text](https://drive.google.com/uc?id=1tlJy9xG26WDEaxPz3cC9d6vf5YgBocw6)  \n\n","tags":[],"reviewStatus":"APPROVED","feedback":"","rankingScore":1,"createdAt":"2022-11-20T15:16:14.281Z","updatedAt":"2023-01-21T15:05:04.667Z","slug":"an-interesting-title-deepak-panwar","__v":0},{"_id":"637a5cc92fb19e250d73fd27","authorId":"116457774364774773301","authorName":"Utkarsh Raghunath","authorSlug":"utkarsh-raghunath","authorImage":"https://lh3.googleusercontent.com/a/AItbvmmVrxm7vHc5Nzu8YqCXDTS7dXdynkRUvDMIoO7j9cA=s96-c","level":1,"courseCode":"IOT-001","domain":"IOT","title":"IOT 001 - Level 1 Report 2022","content":"###IOT 001- An Introductory Course on Internet Of Things\n\n![](https://res.cloudinary.com/marvelweb/image/upload/v1651086776/image2mrvl-min_sh7yax.png)\n\n###Level 1\n\n##Task 1: Setting up the ESP32 and Blink an LED\n\nDate: 12-10-2022\n\nAim: Figuring out the ESP32: Setting up Arduino IDE to program ESP32.\n\n-Went through the given resources to understand the pin diagram of ESP32, figure out the circuit elements required to perform the task and also get an understanding of how the syntax works.\n\n-Ran a simulation on Wokiw simulator to understand the connections.\n\n-Executed the same on Arduino IDE and recorded the result.\n\n![](https://drive.google.com/uc?export=view&amp;id=1FCfyLb28JeA0-giSX6ChyzZfNYG3JUqb)\n\n[https://wokwi.com/projects/345293953257439828](url)\n\n```\n\n#define LED 2\n \nvoid setup(){\n  pinMode(LED, OUTPUT);\n}\n \nvoid loop(){\n  digitalWrite(LED, HIGH);\n  delay(500);\n  digitalWrite(LED, LOW);\n  delay(500);\n}\n\n```\nVideo Recording of Task 1:\n<iframe height=\"315\" src=\"https://www.youtube.com/embed/kMJsQLctCKY\"></iframe>\n\n --------------------------------------------------------------------------------------------------------\n\n##Task 4: Basics of creating a website\n\nDate: 13-10-2022\n\nAim: Create a website with a button that when pressed toggles the color of the website.\n\n-Learned the basic semantics of HTML and CSS and went through the documentation as well to understand the function and use cases of different tags in HTML and attributes in CSS.\n\n-With the help of the resource given, I understood the function of the 'script' tag which embeds the client-side script.\n\nSource code: [https://drive.google.com/file/d/1VOPJpmbX2Nv-Ll1k1XkI19rACVTmmVue/view?usp=share_link](url)\n\nBefore:\n![](https://drive.google.com/uc?export=view&amp;id=1x3iafEdk_9vgkfHWvZWDEYaygERZCdsq)\n\n\nAfter:\n![](https://drive.google.com/uc?export=view&amp;id=1cZ5CGBYSAlv63Iq6ygEEJEjX6ExV2ltk)\n\n\n---------------------------------------------------------------------------------------------------------\n\n##Task 3: Basics of MQTT Protocol\n\nDate: 14-10-2022\n\nAim: Learn the basics of MQTT protocol and its working\n\nRead an article on MQTT and its working.\n\nMQTT stands for Message Queuing Telemetry Transport which is a messaging protocol for communication between IOT devices.\n\nMQTT - Publish / Subscribe:\n\tDevices publish messages on a topic and all the devices that are subscribed to that specific topic receive the message.\n\nMQTT - Messages:\n         Information which is exchanged between devices which can be commands to control outputs, read and publish data from sensor nodes or data like sensor readings.\n\nMQTT - Topics:\n\tTopics are the way we register interest for incoming messages or specify where we want to publish the message. Basically, they are similar to addresses.\n\nMQTT - Broker:\n\tThe MQTT Broker is responsible for receiving and filtering all the messages, deciding which devices are interested in them and publishing the message to all subscribed clients/devices.\nIn home automation, we preferably use the Mosquitto Broker on Raspberry Pi.\n\nFinally, read about how to use MQTT in Home Automation and IOT projects.\n\n--------------------------------------------------------------------------------------------------------- \n\n                                                                                         \t\tUtkarsh R\n\n3rd Year ECE\n\nUVCE\n\t\t\t\t\t\t","tags":[],"reviewStatus":"APPROVED","feedback":"","rankingScore":1,"createdAt":"2022-11-20T16:58:49.689Z","updatedAt":"2023-01-21T15:05:12.476Z","slug":"iot-001-level-1-report-2022-utkarsh-raghunath","__v":0},{"_id":"63cb8b765d0eb9467e70e233","authorId":"102323299324943316410","authorName":"K Lalrinchhana","authorSlug":"k-lalrinchhana","authorImage":"https://lh3.googleusercontent.com/a/ALm5wu1rABEfjb4T2i5qSmwHNtEN8fpdM6Rs2N9G_eHS=s96-c","level":1,"courseCode":"D-P-001","domain":"D-P","title":"D & P LEVEL 1 PROJECT REPORT-K Lalrinchhana","content":"##TASK 1\n####ISOMETRIC AND ORTHOGRAPHIC PROJECTIONS\n####Brief Explanation and Images\n#####1.Drawing Orthographic projections of given Isometric Drawings \nThe Orthographic projections (Front View, Top View and Side View) of the given isometric drawing of a fractal tetrahedron is drawn on a drawing sheet \n![image](https://drive.google.com/uc?export=view&amp;id=1BhZHqh9QqG4kOwIA0F8gEQH1Ebf6FBiW)\n\n#####2.Drawing Isometric projections of given drawings \nThe Isometric Projection of given orthographic drawings are made\n\n1. Hexagonal nut bolt \n![image](https://drive.google.com/uc?export=view&amp;id=1BhurHVjW_oQEubhAFqEeTROpjmej1Y4v)\n\n2. Given Drawing\n![image](https://drive.google.com/uc?export=view&amp;id=1Biyb1G1a99WIte3zCW0mIn7VmqJpormw)\n\n####Technical Concepts Involved\nThe main technical aspect of this task is Engineering Drawing which is the most fundamental aspect of design in Engineering, especially  in Mechanical Engineering and Civil engineering. I learned from this task the basic orthographic projections, and the standard convention of how to draw them, and also how to draw Isometric Projection. Even though Engineering Drawing is included in the college syllabus, it was a good experience to revisit what I have learned as well as what I had forgotten, and be more familiar with the concepts\n\n####Challenges faced and lessons learned\nDrawing a tetrahedron was a bit challenging, as it took some time to figure it out, so first I draw the top view, an equilateral triangle, from there I projected the front view to get the true length of one of the sides, and hence the height, and from there to the side view. The Isometric drawings were also challenging, especially drawing circles in isometric projection. These are the challenges involved in this task.\n\n\n##TASK 2\n####2D DRAFTING IN CAD\n####Brief Explanation and Images\n#####2D drawing on sheet of the platonic solids using AutoCAD\nThis task involves the use of 2D drafting in AutoCad to make a 2D drawing of the following given solids\n\n1.Cube of sides 40mm\n\n![image](https://drive.google.com/uc?export=view&amp;id=1J5UdzKjlAalIRLBWvjQtxzMIpJLXU2eE)\n\n2.Tetrahedron of sides 35mm\n\n![image](https://drive.google.com/uc?export=view&amp;id=19QZPNyfVHqi1aZyEiPf5V0tiuoo9QF7O)\n\n3.octahedron of sides 30mm\n\n![image](https://drive.google.com/uc?export=view&amp;id=1W4fCFyoU72rJ9RgYH83YSMI0wWcMeJ00)\n\n4.Hemisphere of radius 70mm\n\n![image](https://drive.google.com/uc?export=view&amp;id=1ZUBJcb0ZEBTAYf6EGnr0kUSbsGe-za5X)\n\n####Process and Technical Concepts\nThis task is mainly about the use of AutoCad 2D Drawing workbench. The important points are the basic use of LINE command and specifying a center point, the use of ortho command to draw right angles, use of trim, intersection, snap to midpoint of a line and center of a circle, etc. The use of isometric command and drawing isocircle is also included. Hatch command is also used to shade the drawings.\n\n####Challenges Faced\nAs someone new to AutoCad, figuring out the basic commands itself was a bit challenging and I have to go through a lot of Youtube videos to get used to it. Drawing the tertrahedron was also challenging, so I first drew the orthographic projections, get the dimensions from there, and used it for the isometric drawing. I used the same process for the octahedron as well. Also the task was to draw 2D drafting so I simply assume it is isometric drawings only and I procceded to do as such. \n\n\n##TASK 3\n####3D DRAWING IN AUTOCAD\n####Brief Explanation and Images\nHere, 3D drawings of given solids are made using AutoCad. This task involves the use of the 3D workbench in AutoCad software and the various commands and tools associated with it in order to produce 3D models from 2D sketches. The software comes with inbuilt options for making some common solids like cube, prism, etc. However, as required by the task, these options are not used and all the 3D models are developed from 2D drawings\n\n#####1.Pentagonal pyramid of sides 40mm and height 60mm.\nFirst, a 2D drawing of a pentagon is made in the 2D workbench. Now the center is located by connecting the vertices. Then the 3D modelling workbench is selected. From the center, a line or altitude of height 60mm is drawn upwards, perpendicular to the plane of the pentagon. Ortho mode is engaged during this process. Now, the end of the altitude is joined with two adjacent vertices by a line, forming a triangular face. By using join command, the triangle is joined. Now using polar array, it is rotated about the center/altitude and five instances are made. Then using conceptual view, the 3D model is visible\n \n![image](https://drive.google.com/uc?export=view&amp;id=1I98ehap-XXNsJU-ld2RvZfkNcDLNbhIA)\n\n#####2.Hollow Cylinder, diameter 40mm and height 60mm,thickness 2mm.\nTwo concentric circles are made in drafting and annotation workbench and then in the 3D modelling workbench, using presspull command, the profile is extruded.\n\n![image](https://drive.google.com/uc?export=view&amp;id=1gQJoPnKNThAq_oxije_gCo4De6KUR9qX)\n\n#####3.A hexagonal pyramid of base edges 16mm and height 50mm is placed on a cylinder of radius 50mm.\nA circle of radius 50mm is drawn and then extruded. Now, using UCS command, the plane is changed to the top of the cylinder. Then, a pyramid is made on top of it using the same process as mention in the pentagonal pyramid \n\n\n\n![image](https://drive.google.com/uc?export=view&amp;id=1VENnkO3noLghyjLZXnqgtPS5ng7Xs0mw)\n\n#####3.A triangular prism of sides 30 mm placed a square prism of sides 50mm with equal inclination to the horizontal axis.\nA square is drawn in drafting workbench and extruded. Now it is rotated using the rotate command and using UCS command the plane is changed to the face of the square and a triangle is drawn on top. Then it is extruded to make a triangular prism.\n\n![image](https://drive.google.com/uc?export=view&amp;id=1SdM17Uruqso8meSaFks1HCnh4VuKn9iG)\n\n#####Process and Technical Concepts\nUse of UCS command, extrude a 2D profile, Substract, Various views, move, rotate command, joining several lines using JOIN command.\n\n#####Challenges Faced\nFiguring out 3D modelling commands in AutoCad, rotating objects and plane changes\n\n\n\n##TASK 4\n####DESIGN, ASSEMBLY AND SIMULATION\n\n####Brief Explanation and Images\n\nThis task involves Rapid prototyping of Hinge Joint Using Autocad. Here, a model of a hinge joint is made with different parts made differently and later assembled.\n\n![image](https://drive.google.com/uc?export=view&amp;id=17YUVXevcnWTSmVeRTuIeC_iYj2zaT8Jk)\n\n![image](https://drive.google.com/uc?export=view&amp;id=1EUK4SBQz5GnZ8ZwCDzfWHEL0mLiTzUPG)\n\n####Process and Technical Concepts\n\nThe side profile with knuckle profile is drawn and then extruded. Then a profile without the round knuckle part is drawn. This is then copied two times to make one side of the hinge. Now to make the other side if the hinge, the MIRROR command is used to mirror the hinge to make the other side. Then, the pin is developed by extruding a circle. Now, using the MOVE command, the axis of two sides of the hinge are made to coincide. Then, the axis of the pin is moved to coincide with the axis of the barrel using the same MOVE command. Now using the material command, a material is applied to the door hinge. The main technical concepts are:\n \n1)Developing 2D drawings on various planes, dynamic UCS,\n\n2)Copying 2D wireframe and move from base point.\n\n3)Join command for joining 2D sketches\n\n4)Union command for joining 3D solids\n\n5) Mirror command for mirroring objects\n\n6)Meaning of Ucs plane and View (World, SE Isometric, etc)\n\n7) How to use Snap to 2D,Snap to 3D objects.\n\n8) How to use Edge fillet and Edge chamfer\n\n9) How to use MOVE command by specifying base point\n\n10) how to use 3D move and 3D rotate.\n\n11)How to apply materials to objects.\n\n####Challenges Faced\n\nUCS plane changes is quite challenging and confusing for beginners, also confusing was changing the drawing planes and different views.\n\n\n##TASK 5\n####3D DESIGNING OF BALL AND SOCKET JOINT\n\n####Brief Explanation and Images\n\nThe task requires the designing and simulation of a ball and socket joint in AutoCAd. The ball and the socket are designed separately and then later assembled using the MOVE command.\n\n![image](https://drive.google.com/uc?export=view&amp;id=1XX8ONbyAxla5GJMn6UmBg4LC_5yIxNJg)\n\n![image](https://drive.google.com/uc?export=view&amp;id=1K-LiH7_4tiTuWoGvS4j5q_RqJRShXq95)\n\n####Process and Technical Concepts\n\nFirst, the socket part is developed by revolving a semicircular profile using the REVOLVE command. Now, using Snap to 3D, the center of this hollow sphere is then located by using Snap to 3D command. From here, a line is drawn for the stud. At the end of this line, a circle is drawn for the stud profile. This is then extruded to intersect the socket sphere. The Ball part is developed by using Sweep command and the thread for the stud is also made. This is done using helix, sweep and substract.\nThe lessons learned are:\n\n 1) How to extrude a surface from 3D sphere\n\n 2)How to make a helix\n\n 3)Sweep a profile using helix as guide curve.( To make thread.)\n\n 4)More use of Sweep command and better understanding of drawing in a different plane.\n\n####Challenges Faced\nMaking the thread of the screw. Sweeping the profile and substracting from the stud and making the hexagonal bolt was the challenging part of this task.\n\n##TASK 6\n####3D PRINTING\n####Brief Explanation\nUnfortunately, the 3D printer was not functioning around the time of submission of this task and I saved it for last. However, I have done it together with my friend and also during my participation in the humanoid project, I am involved in 3D printing. So the process is as follows: The stl file model of whatever we wanted to print is opened in ultimaker cura. This is then sliced and saved as gcode. If supports are needed, the supports are generated using meshmixer. Now the stl file can be pasted in SD card or uploaded via octoprint. Log in to octopi.local and use the marvel password. Then upload the gcode file. Set the print temperature appropriately (205-210 for nozzle and 55-60 for bed). Wait carefully for the print to finish. This is the process that we used for 3D printing. \n\n##TASK 7\n####LED ON A BREADBOARD\n####Brief Explanation and Images\nA circuit is made on a breadboard to light up an LED. The led is connected to a 9V battery through a resistor. Here 1k ohm resistor is used in this task. The resistor is then connected to the LED in series. The negative side of LED is then connected to ground. Several LEDs are also lighted by connecting them in parallel.\n\n![image](https://drive.google.com/uc?export=view&amp;id=1Lk47wxl3mzhwrABsU0gQ6SPwifegjfb1)\n\n####Process and Technical Concepts\nThe technical concept of this task is basic knowledge of building a circuit using a breadboard. Basic knowledge of how to use a breadboard for connection is required. Also, differentiating anode and cathode of an LED, and calculation of resistor value is also required. However, I didn't calculate the values of the resistor and I simply used 1k resistor.\n\n####Lessons Learned\n1)Basic circuit connections from reading circuit diagram\n\n2)Practical use of a resistor\n\n3)Basic working of a breadboard\n\n4)Basic connection of LED (connection of cathode and anode)\n  \n\n##TASK 8\n\n####TRANSISTOR AS A SWITCH\n####Brief Explanation and Images\n\nThe circuit uses a NPN transistor(BC547) in common emitter configuration. An LED is connected as the output in the collector side. A 1k resistor is connected in series with the LED\nand a push button switch is connected to the base of the transistor. A base resistor is also connected. The emitter side is connected to ground and the collector is connected to a 9v battery. When the switch is pressed, the base emitter junction conducts and a small base current flows. This turns on the collector junction and a large collector current flows. This turns on the base collector junction and the LED is turned on. Once the switch is released, the switch turns off and the LED is turned off.\n\n![image](https://drive.google.com/uc?export=view&amp;id=1SGzzRCeDz3HrvikBmIYppgXmuH8id7r0)\n\n![image](https://drive.google.com/uc?export=view&amp;id=1iAGv63TpE8DXWFFBP7rptIEuQ65GLBcj)\n\n####Lessons Learned\n\n1)Basic biasing of an NPN transistor in common emitter configuration ( here bc547 or 2N2222A is used)\n\n2)Practical working of a transistor\n\n3)Identifying pinout of a transistor by datasheet/google search\n\n\n\n##TASK 9\n####FLASH AN LED USING A TRANSISTOR\n####Brief Explanation and Images\n\nHere an astable multivibrator circuit is used to flash two LEDs. The circuit uses two transistors that oscillates the circuit. The timing of the flashing or oscillation is determined by the value of capacitor.\n\n![image](https://drive.google.com/uc?export=view&amp;id=1hYGreVLsQlwxO_K_CQ1ZJ3QiXQ240bvj)\n\n![image](https://drive.google.com/uc?export=view&amp;id=1O48uCOc8Eykli8t1B_9n9DS5kP1tNKIF)\nVideo\n\nhttps://youtu.be/Woy_QisDG6Q\n\n####Challenges Faced\nInitially, the circuit doesn't oscillate. So I disconnected the resistor and reconnected it, and it solves the problem. Also, the oscillation gets faster and faster and eventually both LEDs are on at the same time. I have tried replacing the capacitors and it works a bit better but the problem still exist. I was only able to reduce the time until both the LEDs are on. This may be due to current leakage of electrolytic capacitor. \n\n####Lessons Learned\n1)Basic connection of astable multivibrator\n\n2)Connection of electrolytic capacitors\n\n3)Troubleshooting a circuit when it doesn’t work\n\n##TASK 10\n####DARKNESS DETECTOR USING LDR\n####Brief Explanation and Images\nLDR is a Light Dependent Resistor. The resistance differs based on the light that shines on it. There are two circuits: The light detector and dark detector. The Circuit is made as given of light detector and dark detector\n\n\nLight Detector\nhttps://youtu.be/k0koO-7cM7Q\n\nDark Detector\nhttps://youtu.be/4qtrpZIutQw\n\n##TASK 11\n##CONVERT 3D DRAWINGS TO CAD\n####Brief Explanation\nThe 3D model of the following given drawings are made using Catia V5 software.\n\n1.\n![image](https://drive.google.com/uc?export=view&amp;id=1aT1J_wPlu-sN5rhlQI_WNDnnpA4lxQGW)\n\n2.![image](https://drive.google.com/uc?export=view&amp;id=11tfKD3_3vPsOwG7yGc8Gc0O8KAcWnj7w)\n\n3.![image](https://drive.google.com/uc?export=view&amp;id=1xDZxXtZKZs7YR-3vpZvgVz0T5o15KkHq)\n\n![image](https://drive.google.com/uc?export=view&amp;id=1oWaCEWpF5ddzUDT2_7mxOFwBKW8wHImS)\n\n![image](https://drive.google.com/uc?export=view&amp;id=1dVPgpC49_KJkBxhSMFuLO4yRR1NM7QTj)\n\n\n\n##TASK 12\n####SIMPLE SOLDERING PRACTICE\nThis task involves the learning the basic process of soldering by using soldering iron.\nI have soldered some resistors on a perf board and I also have soldered some wires together.\n\n![image](https://drive.google.com/uc?export=view&amp;id=127D1-qsPoBeqBIYHzvgVWilagXZEVljW)\n\n\n![image](https://drive.google.com/uc?export=view&amp;id=1dA1HSOls5Epl42uIeXMqG-f1yLL3GRHT)\n\n\n\n\n\n","tags":[],"reviewStatus":"APPROVED","feedback":"","rankingScore":1,"createdAt":"2023-01-21T06:51:34.274Z","updatedAt":"2023-03-02T13:45:09.353Z","slug":"d-and-p-level-1-project-report-k-lalrinchhana-k-lalrinchhana","__v":0},{"_id":"63ccdd2ae2aa197dd4e84fd7","authorId":"110997097116578982620","authorName":"darshan j","authorSlug":"darshan-j","authorImage":"https://lh3.googleusercontent.com/a-/ACNPEu--QojGT2Lja-9BadQO-ryybJc9HNhbbGFKoAeS6A=s96-c","level":1,"courseCode":"D-P-001","domain":"D-P","title":"Design and Prototyping Learnings Report LEVEL 1 by Darshan J","content":"1. **Task 1**: Isometric and Orthographic Projections\n\nIn this task, we had 3 drawings:\n\n1) Orthographic projection of Tetrahedron.\n2) Isometric View of a Nut.\n3) Isometric View of a machine part.\n\nfor drawing and learning about them. I didn't face much difficulty in this and could understand how the drawings could be drawn easily.\nFrom the part 1 of the task, I learnt about how to do orthographic projection of a tetrahedron.\n![Orthographic Projection of Tetrahedron](https://keep.google.com/u/0/media/v2/14D8986RjYTZliMAYZXrzcF0DhcXlgV8bSLeGlep3djg9-WY-ahmsf4NasPPOEA/1kAzesLcZRJhDqDGnfRZABHXEZom3b3esEbncmcKNlBcdIaJD0c_9dqvf38T2_Q?sz=512&amp;accept=image%2Fgif%2Cimage%2Fjpeg%2Cimage%2Fjpg%2Cimage%2Fpng%2Cimage%2Fwebp)\n\n In part 2 of the task, I learnt about isometric projection and its creation from orthographic projection.\n![Isometric View of a Hexagonal Nut](https://keep.google.com/u/0/media/v2/1KSSY_FSR-m4SUK6BDrodFdQ5qMyC1UftY8fohRA8hrq1gq9e1bN23XcNjjl9/1D2K5jr5lGTIL8s8BKwHIhtgZfN1UGHOadzTzLugPMxjVPieWrO9ktl8ozYlNBg?sz=512&amp;accept=image%2Fgif%2Cimage%2Fjpeg%2Cimage%2Fjpg%2Cimage%2Fpng%2Cimage%2Fwebp)\n\nIn part 3 of the task, I attempted to do the Isometric View of the machine part shown, but I got stuck in the thought about how to do the curves in the drawing. The drawing was a bit complex, and I didn't find a way to do it yet.\n\n 2.**Task 2**: 2D Drafting in CAD\n\nIn this task, I learnt about how to do 2D drawings of platonic solids using fusion 360 software.\n![2D drawing of a cube](https://keep.google.com/u/0/media/v2/1PPaa0Cptfnd6D1ey_RDOBOxOdb_5ldzGiEzSnLwLNqjO588Nt9wLSa34onY9jwI/1UeCY_boh-Ywhej2kifFsLQugpNmjzHn-GXCI9c7HChidoG_OYWtOdM3spI4BNbg?sz=512&amp;accept=image%2Fgif%2Cimage%2Fjpeg%2Cimage%2Fjpg%2Cimage%2Fpng%2Cimage%2Fwebp)\n\n![2D drawing of tetrahedron](https://keep.google.com/u/0/media/v2/1JECwWKB-w9lqcnrflh5FJY1ImPpWWLbhPnFSR1a0PIWApU_xJQ0Q2qKxF5KE63w/1SRRODLpzOSycihKR5pTbzazHRS_Ekxc3AtzGF41a7CYAiWne7S_QVMMLFzDa-Xs?sz=512&amp;accept=image%2Fgif%2Cimage%2Fjpeg%2Cimage%2Fjpg%2Cimage%2Fpng%2Cimage%2Fwebp)\n\n![2D drawing of Octahedron](https://keep.google.com/u/0/media/v2/1kPSfG0B9i89Tl5qez6DyIL0PLwCSeVj7dmPP1sOj9YCj8sYSmFVTXwK6d31Y7RQ/1BY7rvenAQ_sVwC0LLdmIH_cytSqdbY1EOZLnQt4asiRzkZTRePgOYcjI4dM-Qg?sz=512&amp;accept=image%2Fgif%2Cimage%2Fjpeg%2Cimage%2Fjpg%2Cimage%2Fpng%2Cimage%2Fwebp)\n\n3. **Task 3**: 3D drawing\n\nAt first, I attempted to draw 3D drawing of pentagonal pyramid from 2D sketches but couldn’t finish it successfully as I didn’t understand how to draw 3D models from 2D sketches. But then, I learnt about the 3D sketch option which can be used to create 3D sketches and so, completed it successfully. ![3D model of Pentagonal pyramid](https://keep.google.com/u/0/media/v2/1QwMAlO_apdh4nAj48ryy6xYJjMl1F8FbGdSFhwvfPEU-l-Rd8bbH-f-xiJlvr1c/1N3jtl748uXDspNbpwvzftiNTScd5Pgu3Fb1E7L3OokWqgDoFjW3TjwwUBaz9P8Y?sz=512&amp;accept=image%2Fgif%2Cimage%2Fjpeg%2Cimage%2Fjpg%2Cimage%2Fpng%2Cimage%2Fwebp)\n\n Then, I also completed the 3D model of hollow cylinder in which I learnt about how to extrude a plane to create a solid and how to remove parts inside it.\n![Front view of 3D model of hollow cylinder.](https://keep.google.com/u/0/media/v2/1efpnvaye9tTRlkh6bjXj22Ct6aSC7Ortec4pmxzR8PGslSSMCG-d7qcdQ5U7CA/1fiHgE5QHanLcyMjhXELR5vckZefqhh-cEEbmYEQdsBFWJ1umaQn5SQOix7L7GA?sz=512&amp;accept=image%2Fgif%2Cimage%2Fjpeg%2Cimage%2Fjpg%2Cimage%2Fpng%2Cimage%2Fwebp)\n![Top view of 3D model of hollow cylinder](https://keep.google.com/u/0/media/v2/1fglJ-QlnOlvzP1F0k1bZpGyEtuAK0fvkv7SUprRYVLtOK1lWyoXUJrNo39i1Ft0/19_boPQvHPIs6-3h73NdtNgcubGCDulKXc5YZv65mNX3E0ydAfn9zDgumUobyJA?sz=512&amp;accept=image%2Fgif%2Cimage%2Fjpeg%2Cimage%2Fjpg%2Cimage%2Fpng%2Cimage%2Fwebp)\n\nThen, I performed part 2 of this task which was about 3D model of hexagonal pyramid over a cylinder. Here, I learnt about how to extrude closed surface and also how to remove undesired parts using plane section to create the hexagonal pyramid.\n![3D model of hexagonal pyramid over a cylinder](https://keep.google.com/u/0/media/v2/1KHmVKMGhvrE_v4z6D_J5qSPoKqT-zEjNQMxCmuzgu0qzPNicvdIJ1IDzSBjZwQ/1m91uNiYjtGr7ZU_utIO7TkOojfmFLE-IYHg0YnREXA4ODVCnLMTudM1d_4JpGw?sz=512&amp;accept=image%2Fgif%2Cimage%2Fjpeg%2Cimage%2Fjpg%2Cimage%2Fpng%2Cimage%2Fwebp)\n\nAfter this, I finished part 3 of this task which is to draw a 3D model of triangular prism placed on a square prism, in which I learnt about extrusion of plane surface to create a solid\n![3D model of triangular prism placed on a square prism](https://keep.google.com/u/0/media/v2/1OVp7g1bx-mFSFacAEo1umRlhq6wlgPZVYx0ZoXWRtQe8OQjNSrEBZORHcA5o/1EeTn-KzOtrZbmNswge18fTwnEfDIOXIJ1E3ICvA7XMm5YrXHv9mhKnGQJdgJI1I?sz=512&amp;accept=image%2Fgif%2Cimage%2Fjpeg%2Cimage%2Fjpg%2Cimage%2Fpng%2Cimage%2Fwebp)\n\n4. **Task 4**: Design, Assembly and Simulation\n\nIn this task, I performed the rapid 3D prototyping of hinge joint, in which, I learnt about how to create different components and how to assemble components.\nAt first, I was facing many confusions and problems regarding this like how to draw different components separately and assemble them together, but then, I found out the way to do it and therefore successfully completed the task.\n![3D prototyping of hinge joint](https://keep.google.com/u/0/media/v2/1UWCngl-JLCghB37KFI-KCKgmqyCYYk_p-e5pUQH-MTqPe6Qk3OmmTytZbSguscc/1HumlSskyV0q1inwr0SGnA8WiuTDm0rXw7RZrfItvHh_Sjd0EdysEGHvG8Scwjg?sz=512&amp;accept=image%2Fgif%2Cimage%2Fjpeg%2Cimage%2Fjpg%2Cimage%2Fpng%2Cimage%2Fwebp)\n\n5. **Task 5**: 3D designing of ball and socket joint\n\nIn this task, I performed the 3D prototyping of Ball and Socket Joint, in which, I learnt about how to make different components and how to assemble them. I also learnt about how to remove unwanted parts properly and how to extrude only the required planes.\n![3D prototyping of Ball and Socket Joint](https://keep.google.com/u/0/media/v2/1uuHgvxsWUNAfF1hq7LcOJVwJbbSxnW62hmCsuyUNBAdoBRUry1DgyZSfMuv_uUM/1NC9-dGelFsSdbu0jV9XTWoPpkHUxnTbXImp3yz2xAOq0XqQmyEA42DUDmQxl7g?sz=512&amp;accept=image%2Fgif%2Cimage%2Fjpeg%2Cimage%2Fjpg%2Cimage%2Fpng%2Cimage%2Fwebp) \n\n6. **Task 7**: LED on a Breadboard\n\nIn this task, I rigged up a simple circuit for lighting of a LED using a breadboard, wires, a battery. I learnt about testing LED using multimeter. I also tried stacking of LED's and saw that their brightness decreased. Here I also used the \n breadboard power supply to get power supplies with different voltages and tried finding the resistance values that has to be used in series with the LED. \n![Lighting a LED on a breadboard](https://keep.google.com/u/0/media/v2/1wB0MQT4Pnfqqt3nc5mBFF1p7lhlTmX2JW7GbOpyKXxDgGD1OLaRnOZWq8hZlzCs/18S-Tr-lhkWQKm4AfTCHMCcbfcU7o5VkP8-iObgZtGlnxs5xuhH3IrGyrC6FM_ao?sz=512&amp;accept=image%2Fgif%2Cimage%2Fjpeg%2Cimage%2Fjpg%2Cimage%2Fpng%2Cimage%2Fwebp)\n\n7. **Task 8**: Transistor as a switch\n\nHere, in this task, I learnt about how to use the transistor as a switch. I built the circuit using a npn transistor, resistors, wires, switch and a voltage source and looked into the working of the circuit.\n![Transistor as a switch](https://keep.google.com/u/0/media/v2/1m30RsC7jsV8aMwGBZCavk8vEmVyu-ib1eFTD5J7BVJgnFs1qqSi8HdfXxJbD5GA/19LcOWnOl9jW0cMs0mN4WyI9A7ETbJ6daOz2EGywXLyk4nC6YqCEvPS2oYoli_w?sz=512&amp;accept=image%2Fgif%2Cimage%2Fjpeg%2Cimage%2Fjpg%2Cimage%2Fpng%2Cimage%2Fwebp)\n\n8. **Task9**: Flash an LED using a transistor\nThis task is about blinking LED's using transistors, resistors and capacitors. Here, I learnt and experimented about how the rate of blinking changes with change in values of capacitors and resistors.\n![Blinking of LED's](https://keep.google.com/u/0/media/v2/1J7AU5eMdBXUrR-S0TPDWJUCuj178eCS-kKXMHXUWCpWCBWhui4W7cWY4W2Fr9g/1qH07dYKJ05b_jfrfGXbkgCBqne2mQVrnZQFtG_8NfSmOELzlW7pjmefWqaipaq0?sz=512&amp;accept=image%2Fgif%2Cimage%2Fjpeg%2Cimage%2Fjpg%2Cimage%2Fpng%2Cimage%2Fwebp)\n\n9. **Task 10**: Darkness detector using LDR\n\nIn this task,I learnt about how a darkness detector and light detector circuit can be made using LDR.As we kept on varying the intensity of light, the LED kept on becoming dimmer or brighter depending on which circuit we were using.\n![Darkness detector using LDR-1](https://keep.google.com/u/0/media/v2/1SHKI0c9R28bk4ieMWuga7-GCdpG1qeM-iOBh0EpUH6hkeudnewVFElxdip8aKPs/1H4nrOdNzPNRTFNYuKUES2q5nkRQo6Ggz5jRzWYzVYAKmhbBfVJJ_5BKOQ14rb9A?sz=512&amp;accept=image%2Fgif%2Cimage%2Fjpeg%2Cimage%2Fjpg%2Cimage%2Fpng%2Cimage%2Fwebp)\n\n10. **Task 11**: Convert your drawings on paper to CAD\n\nIn the part 1 of this task, I performed the 3D modelling of an isometric projection picture using Fusion 360. Here, I learnt about making a cuboid and cutting it as required to make the required 3D model.\n![3D modelling of given picture](https://keep.google.com/u/0/media/v2/1s328WJvfLByaGcjEoJEs-Lk1nJI8qXHzPrmaEpNYf11zs8G9YDfyP4cQzaUbIyw/1k8VC0J1gurwR4QgqlZKqDzO9DhnhKsFfavYvubumQyHpsOaKAYXCNxkaNJ-1iQ?sz=512&amp;accept=image%2Fgif%2Cimage%2Fjpeg%2Cimage%2Fjpg%2Cimage%2Fpng%2Cimage%2Fwebp)\n\nIn part 2 of this task, I performed 3D drawing of isometric projection of the given image using fusion 360. Here, I learnt about how to make attached components and extrude them in simplified terms.\n![3D modelling of given picture](https://keep.google.com/u/0/media/v2/1b5dZEBXqAWrQrM6Ee23VTSUWR1zYegLTlQiyVTZs-qcNUEiUq2MfwBGx-ieTLA/1pFoNGsG_3_sJMN5iy6ZP7C3L7qWVtX8hvrx3t0bEEy3mM_zWCqMBGeAoPxLnmto?sz=512&amp;accept=image%2Fgif%2Cimage%2Fjpeg%2Cimage%2Fjpg%2Cimage%2Fpng%2Cimage%2Fwebp)\n\nHere, I tried to complete the part 3 of this task but could not complete because I had confusions and had difficulty in understanding how to do the 3D model.\n\n11. **Task 12**: Simple soldering practice\n\nIn this task, I practiced soldering using a soldering gun, a soldering tin on a copper board. I learnt to solder an IC and also to solder a stripped resistor. I also learnt about safe practices about how to maintain the gun,I also learnt that we should place the gun only on the holder and nowhere else. I also soldered another IC on my own. I faced problem of short circuiting, so I used a copper desoldering braid for desoldering.\n![Soldering](https://keep.google.com/u/0/media/v2/19bWBipTK232zSGMTLHxybrN0SSxEWeyzljFtLTbZuIvx8T58-U-a7fj6YI5suN0/1jcXZJYIi1aduIoR0BkjMe7k1xwbB-XiBVLzz_Z3OTAThxEo3yzZlYx4pQIoB1y4?sz=512&amp;accept=image%2Fgif%2Cimage%2Fjpeg%2Cimage%2Fjpg%2Cimage%2Fpng%2Cimage%2Fwebp)\n\n\n \n\n\n\n\n\n \n\n","tags":[],"reviewStatus":"PENDING","feedback":"","rankingScore":1,"createdAt":"2023-01-22T06:52:26.234Z","updatedAt":"2023-01-22T06:52:26.234Z","slug":"design-and-prototyping-learnings-report-level-1-by-darshan-j-darshan-j","__v":0},{"_id":"63cce9b6e2aa197dd4e85008","authorId":"118410162464738169067","authorName":"Bhavid A","authorSlug":"bhavid-a","authorImage":"https://lh3.googleusercontent.com/a/ALm5wu0WR2QOVsRvnREm_m-xzRP9-GShmUb6_-IrXrg80g=s96-c","level":2,"courseCode":"IOT-001","domain":"IOT","title":"MARVEL IOT-001 Level 2 and Level 3 Report","content":"#**Level 2**\n\n### Task 3: Esp32 Cam\nThe microcontroller used here was ESP32 Cam-which is same as an ESP32 but with less number of pins and and a camera.\nThe code was difficult to understand.\nWe had to use an FTDA adapter to connect the Esp32 cam and the upload also was a hassle.\nThe working was pretty straight forward.\n\n![](https://drive.google.com/uc?export=view&amp;id=1oG4qxvM3BIGEdr8gK4zLn5slFihEqBp1)\n\n*Fig. Hardware*\nCode:\n<script src=\"https://gist.github.com/Bhavid11/4cb99df3c06af7a00fd88aa3588866d8.js\"></script>\n\n\n*Video of Implementation*\n\n<iframe height=\"315\" src=\"https://www.youtube.com/embed/IGRiPtk2OOk\"></iframe>\n\n**Skills acquired:**\n\n- Working of ESP32 cam\n\n#**Level 3**\n\n### Task 1: Esp32 Webserver by switching on and off an LED\nFirst, I rigged up the hardware circuit of the LED’s and then went about interfacing the esp32 with other components. The code of esp32 connecting to the web server performing the function was easy to understand. Found the interfacing of both the HTML website and the ESP32 functioning difficult.\n\n![](https://drive.google.com/uc?export=view&amp;id=1oYrBwJZ8JZ8u-4nsMI-WSA8xBo_sd7Pk)\n\n*Fig. Hardware*\nCode:\n<script src=\"https://gist.github.com/Bhavid11/bf32e07d5b6ec7881f228606bf955315.js\"></script>\n\n\n*Video of Implementation*\n\n<iframe height=\"315\" src=\"https://www.youtube.com/embed/XRlwC3_NaRY\"></iframe>\n\n**Skills acquired:**\n\n- Interfacing HTML with Web Server and ESP32.\n\n### Task 2: Flashing Morse Code\nThis was the most difficult task till now as I had to combine all the knowledge acquired to accomplish the task. So I first went about Morse code and defined its dictionary. Then I had to rig up the circuit for the same using LED’s and connected it to. Again the most challenging part was to set up the web server. Once that was done I had to make sure a user input is given and the Morse code is generated which was done using HTML Queries.\n\n![](https://drive.google.com/uc?export=view&amp;id=1pg9jE53I7fJRA-nhTAFehpG_Kq3qPZKJ)\n\n*Fig. Hardware*\nCode:\n<script src=\"https://gist.github.com/Bhavid11/5ff285a819e3770744615e9c3a38a321.js\"></script>\n\n\n*Video of Implementation*\n\n<iframe height=\"315\" src=\"https://www.youtube.com/embed/_SYEW_x3XDE\"></iframe>\n\n**Skills acquired:**\n\n- Interfacing ESP32 with HTML\n\n- Storing it in a text file and fetch it to flash \n\n- Using the Webserver to bind individual sub tasks for the functionality\n\n\n\n\n\n### Task 3: Soil Moisture Sensor\nThis was my first time working with a sensor and ESP32. So I had just connect the sensor to ESP32 and had to set threshold values to indicate the condition of soil. A very easy task to implement.\n\n![](https://drive.google.com/uc?export=view&amp;id=1ovHlIdFKhmQ5Bdgu6aSBPk2C3yoL2_U-)\n\n*Fig. Hardware*\nCode:\n<script src=\"https://gist.github.com/Bhavid11/5260b89c98df41e882b887841687a2b0.js\"></script>\n\n*Video of Implementation*\n\n<iframe height=\"315\" src=\"https://www.youtube.com/embed/yv7qK7K24LA\"></iframe>\n\n**Skills acquired:**\n\n- Working with ESP32 and sensor\n\n\n\n\n\n\n\n### Task 4: Watering a Plant\nThis a direct continuation or add on feature to the previous task and had a perfect use case-(where we had to water the plant from the soil moisture values detected). We had to use a solenoid valve and a relay, both were a first time for me. Configuring how to use both off them were challenging to be honest as relays are affected easily and get damaged. The solenoid valve required a higher voltage to drive it so could not do the part to water the plant. The overall circuit excluding the valve where functioning perfectly as the relays turned on and off at the perfect time.\n\n![](https://drive.google.com/uc?export=view&amp;id=1pDqi2s7SSyV9hbitmNa3zJyjT2qT_ywt)\n\n*Fig. Hardware*\nCode:\n<script src=\"https://gist.github.com/Bhavid11/b5260e3fb1f397781f982a2d8a4e6d04.js\"></script>\n\n*Video of Implementation*\n\n<iframe height=\"315\" src=\"https://www.youtube.com/embed/6W96R4F-o3I\"></iframe>\n\n**Skills acquired:**\n\n- Working of Relay and Solenoid Valve\nHow to decode Circuit errors and how to improve a circuit.\n\n\n\n\n\n\n### Task 4: Read and Display Vitals\nThis task was a little different from others as I feel this had a potential to save lives. So as I started reading about the MAX30100 sensor, I had come to know that there are issues in the design of the sensor during fabrication itself. So we had to cut off the connection and give new onw with the help of solder. Then I had to learn the working of OLED and how it communicates and different functions related to display. After this with the help of libraries, I had to interface ESP32 and MAX30100 sensor and display the vitals on the OLED screen.\n\n![](https://drive.google.com/uc?export=view&amp;id=1oqks4c80H56mVmaihm7CiOrk7hJ9JKV-)\n\n*Fig. Hardware*\nCode:\n<script src=\"https://gist.github.com/Bhavid11/adbb66f3fa698adafb7aa7a18b790488.js\"></script>\n\n*Video of Implementation*\n<iframe height=\"315\" src=\"https://www.youtube.com/embed/5GEcx8y4rxs\"></iframe>\n\n**Skills acquired:**\n\n- Working of MAX30100 and identifying flawed design\n\n- Working with OLED Display\n\n\n&gt; **BHAVID A**\n\n&gt; *3RD YEAR ECE*\n\n\n\n","tags":["IOT","Marvel","Level 2","Level 3","Bhavid"],"reviewStatus":"PENDING","feedback":"","rankingScore":1,"createdAt":"2023-01-22T07:45:58.148Z","updatedAt":"2023-01-22T07:45:58.148Z","slug":"marvel-iot-001-level-2-and-level-3-report-bhavid-a","__v":0},{"_id":"63cd22a7e2aa197dd4e8509b","authorId":"105816042342668695665","authorName":"Shashank T S","authorSlug":"shashank-t-s","authorImage":"https://lh3.googleusercontent.com/a/ALm5wu1HBUDJc4UfJMcV-av6xSZj8SSbOeFD2LLwesFQ=s96-c","level":1,"courseCode":"AI-ML-001","domain":"AI-ML","title":"Level -1 Report","content":"#Task 1-report\n##Linear Regression \nLinear Regression is a supervised machine learning algorithm that is used to establish a relationship between variables and make predictions. It is represented by an equation of the form Y = a + bX, where Y is the dependent variable, X is the explanatory variable, b is the slope of the line and a is the intercept. Linear Regression is considered as a fundamental algorithm in machine learning and uses basic modules such as numpy, pandas and matplotlib. The Boston dataset from sklearn.datasets is loaded into a variable and converted into a data frame using Pandas for mathematical manipulation and cleaning. The house prices are then added to it.\n\n![](https://raw.githubusercontent.com/shashankts7/marvelreport/main/1.2.png?token=GHSAT0AAAAAAB6PDXG33WAIOJY4KZMOJGTAY7COX7Q)\n\n![](https://raw.githubusercontent.com/shashankts7/marvelreport/main/1.6.png?token=GHSAT0AAAAAAB6PDXG2KS5ABUIEJYSIPI5CY7COZOQ)\n\n## Logistic Regression\nLogistic Regression is a statistical method used to model the probability of a categorical outcome, such as true or false, given an input variable. It is used to make predictions about discrete outcomes. To start with logistic regression, we load the required modules and the iris dataset from sklearn.datasets. The different classes in the iris dataset are present in the variable 'iris.target' and the different features based on which the data is divided are present in the variable 'iris.feature_names'. The data is then divided into training and testing sets using the train_test_split function, where the parameter 'test_size' is used to specify the percentage of data used for testing the model. A logistic regression instance is created and the model is fit using the training data. The results are tested using a confusion matrix and the accuracy was found to be 97%, with only one incorrect prediction of a versicolor class being classified as virginica.\n\n![](https://raw.githubusercontent.com/shashankts7/marvelreport/main/2.2.png?token=GHSAT0AAAAAAB6PDXG3AFJ5MEJF6J763ETSY7CO2ZA)\n\n![](https://raw.githubusercontent.com/shashankts7/marvelreport/main/2.3.png?token=GHSAT0AAAAAAB6PDXG2CXW73OX2MX5IGC2WY7CO3EQ)\n\n![](https://raw.githubusercontent.com/shashankts7/marvelreport/main/2.5.png?token=GHSAT0AAAAAAB6PDXG2746JRJ7UEQXMLKGQY7CO3XA)\n\n![](https://raw.githubusercontent.com/shashankts7/marvelreport/main/2.6.png?token=GHSAT0AAAAAAB6PDXG36BDSM5HCTYARFR7OY7CO4EA)\n\n#Task 2-report\n## Data Visualisation \nMatplotlib is a plotting library in Python used for creating basic graphs such as line charts, bar graphs, scatter plots, bubble plots, and histograms. It is highly customizable and pairs well with other libraries such as Pandas and Numpy for Exploratory Data Analysis.\n\nMatplotlib offers a wide range of plot types including line and area plots, bar plots, pie plots, box plots, violin plots, marginal plots, contour plots, heat maps, and 3D plots. Each plot type is designed to visualize a specific aspect of the data, helping you to choose the most appropriate plot for your analysis.\n\n![](https://raw.githubusercontent.com/shashankts7/marvelreport/main/3.0.png?token=GHSAT0AAAAAAB6PDXG2P2B6CFBAVFRU5EO6Y7CRUKA)\n\n![](https://raw.githubusercontent.com/shashankts7/marvelreport/main/3.11.png?token=GHSAT0AAAAAAB6PDXG3VW25XNU2OGTOKOZWY7CRU6A)\n\n![](https://raw.githubusercontent.com/shashankts7/marvelreport/main/3.21.png?token=GHSAT0AAAAAAB6PDXG2ELPVR7VVVAZKKSRWY7CRVLA)\n\n# Task 3-report\n## Numpy Library\nNumpy is a powerful library for working with arrays in Python. One useful feature of Numpy is the ability to repeat a small array across each dimension, allowing for the creation of larger arrays with a specific pattern. This can be achieved using the numpy.repeat() function, which takes in the input array, the number of repetitions for each element, and the axis along which to repeat.\n\nFor example, given a small array A = [1, 2, 3], we can repeat it along the first axis 3 times to generate a new array B = [[1, 2, 3], [1, 2, 3], [1, 2, 3]]. We can also repeat it along the second axis 2 times to generate a new array C = [[1, 1], [2, 2], [3, 3]].\n\nAnother useful feature of Numpy is the ability to generate an array with element indexes such that the array elements appear in ascending order. This can be achieved using the numpy.argsort() function, which returns the indices of the elements of an array in sorted order. For example, given an array A = [3, 2, 1], the function numpy.argsort(A) will return the array [2, 1, 0], which are the indices of the elements in the original array in ascending order.\n\nIn summary, Numpy provides several useful functions for working with arrays, such as repeat() and argsort(), that can be used to generate new arrays with specific patterns or sort the elements of an array in ascending order. These functions can greatly simplify the process of working with arrays in Python and save time for the developer.\n\n# Task 4-report\n## Metrics and Performance Evaluation\nThe top_k_accuracy_score function is a generalization of accuracy_score. a prediction is\nconsidered correct as long as the true label is associated with one of the k highest predicted\nscores.\nThe accuracy_score function computes either the fraction (default) or the count\n(normalize=False) of correct predictions.\nacc = np.sum(predictions == y_test)/len(y_test)\nThe classification_report function builds a text report showing the main classification\nmetrics.\nprecision is the ability of the classifier not to label as positive a sample that is negative,\nand recall is the ability of the classifier to find all the positive samples\nThe F-measure is a weighted harmonic mean of the precision and recall. A Fβ measure\nreaches its best value at 1 and its worst score at 0\nThe hamming_loss computes the average Hamming loss or Hamming distance between two\nsets of samples\nmax_error function computes the maximum residual error , a metric that captures the worst\ncase error between the predicted value and the true value.\nMean absolute error: function computes mean absolute error, a risk metric corresponding to\nthe expected value of the absolute error loss or l1-norm loss.\nR² score represents the proportion of variance (of y) that has been explained by the\nindependent variables in the model. It provides an indication of goodness of fit and therefore\na measure of how well unseen samples are likely to be predicted by the model, through the\nproportion of explained variance\n\n# Task 5-report\n## Linear and Logistic Regression - Coding the model from SCRATCH \n\nImplementing a linear regression model on a specific dataset involves several steps. The key concepts involved in creating the linear regression model include the cost function, gradient descent, and the various functions and libraries used in the implementation.\n\nThe cost function measures the performance of a machine learning model and is represented as a single real number, calculated as the difference between predicted and actual values. The cost function for linear regression is typically the root mean squared error or mean squared error. To minimize this cost function, gradient descent is used to calculate the gradient of the cost function and adjust the weights accordingly.\n\nThe steps involved in implementing the linear regression model include:\n\n1. Creating a LinearRegression class and setting the learning rate and number of iterations\n2. Defining the fit method and implementing the gradient descent function\n3. Defining the predict method to take in new test samples\n4. Importing necessary libraries\n5. Splitting the data into training and testing sets using the train_test_split function\n6. Fitting the data into a dataframe and predicting the test values\n7. Defining the cost function as mean squared error and calculating the model's accuracy\n8. Visualizing the data with a scatter plot\n\nThe implementation of logistic regression, which is used for predicting binary outcomes, involves similar steps and concepts, but with adjustments to account for the logistic sigmoid function and the categorical nature of the output.\n\n![](https://raw.githubusercontent.com/shashankts7/marvelreport/main/5.1.png?token=GHSAT0AAAAAAB6PDXG32WQUJWNFZKC5FSB6Y7CRXCA)\n\n# Task 6-report\n## K-Nearest Neighbor Algorithm\n\nThe k-nearest neighbors (KNN) algorithm is a non-parametric, supervised learning method used for both regression and classification problems. The algorithm groups an individual data point based on its proximity to other similar points. Regression problems use the average of the k nearest neighbors to make a prediction, while classification uses discrete values. To make a classification, the distance between the query point and other data points must first be calculated using a distance metric such as Euclidean distance.\n\nFor classification, the majority class label of the K nearest neighbors from the training dataset is assigned as the predicted class for the new data point. In regression, the mean or median of the continuous values assigned to the K nearest neighbors from the training dataset is used as the predicted value for the new data point.\n\nKNN can be implemented using the scikit-learn library's neighbors.KNeighborsClassifier for multiple suitable datasets. The steps involved include importing necessary libraries, loading the dataset, splitting the data into training and testing sets, and calculating the accuracy of the model using the confusion matrix.\n\nKNN can also be implemented from scratch, which involves defining the euclidean_distance function, the KNN class with fit, predict, and _predict methods, and comparing the results with the built-in scikit-learn method for different datasets.\n\n","tags":[],"reviewStatus":"PENDING","feedback":"","rankingScore":1,"createdAt":"2023-01-22T11:48:55.857Z","updatedAt":"2023-02-07T17:45:26.796Z","slug":"level-1-report-shashank-t-s","__v":0},{"_id":"63ceabfce2aa197dd4e85278","authorId":"101799795740567039279","authorName":"Nischitha Tiwari","authorSlug":"nischitha-tiwari","authorImage":"https://lh3.googleusercontent.com/a-/ACNPEu-V2Fi--7ouAeaSaFsnEsykyM_ipebNim1b6y4=s96-c","level":1,"courseCode":"D-P-001","domain":"D-P","title":"LEVEL 1 : Design and Prototype","content":"### TASK 1 : Orthographic and Isometric Projections\n\n\nThe task 1 was about Engineering drawings on a paper considering the given dimensions. We were required to do the following sub-tasks.\n\n**1. Orthographic projection of a tetrahedron with sides 60mm.**\n\n Orthographic projections can be done in two ways.\n\na. First angle projection\n\nb. Second angle projection\n\nHere, I have made use of the first method i.e the first angle projection method.\n\nFractal tetrahedron is a simple 3-dimensional object made of equilateral triangles. In this case, the front view is same as that of the top view.\n\n*Challenges faced* : None\n\n![Fractal Tetrahedron](https://64.media.tumblr.com/8a23d3d0e7cfd84368b499f2ba88e7c6/c039cb6c3d3e2c9c-d9/s540x810/cd09f5dc22f23dd2e1cbb99b20b2ec4e2e022b24.jpg)\n\n**2. Isometric projections.**\n\nThese dimensions are 0.816 times their actual dimensions.\n\nHexagonal nut- as indicated by its name has 6 sides, which is one of the widely used fasteners, generally made of steel and a number of other materials.\n\n*Challenges faced * : The representation of threads was a bit time consuming as their sizes were small and needed precision.\n\n*How was it solved*  : Watched a couple of videos on how to draw the threads accurately.\n\n![Hexagonal nut](https://64.media.tumblr.com/18841c1b01e648b765147992a77bcc2f/fd8fa13d9a27781d-86/s540x810/458e8d0aad076db2632ce41d7343463e375351d5.jpg)\n\nAn another model was given for which the orthographic views were mentioned and the isometric view had to be drawn. This model seemed to be much easier to draw on a software rather than on a paper. The reason being that it involved a lot of circles for which drawing the isometric view with the appropriate dimensions is a quite difficult part.\n\n*Challenges faced* : This particular sub-task was the most time consuming. Achieving good amount of precision had been a tough task.\n\n*How was it solved*: This isometric view did not turn out good in the first try. Practiced isometric views of circles. Finally at the third time, I was able to get the view. The picture below is of the same. \n\n![Isometric View](https://64.media.tumblr.com/6160c24af94ea753376de89fce00dbd1/1c6823d91d1b75c4-16/s540x810/4747ce461823ebb9fe756086410708bd4cf85787.jpg)\n\n### TASK 2 : 2D drafting in CAD\n\nThis task required us to draw a few basic shapes on a design software. Below, I have made use of a software called Creo Parametric.\n\n- *Cube of sides 40mm.*\n\nHere, the cube was drawn using the sketch of a square and then extruding it using the option 'Extrude'.\n\n![Cube](https://64.media.tumblr.com/5ee6230d6a6e0bc6ab18555ea26deb84/2ee86360da57302a-b8/s540x810/8fabce2a7469b8e5ac1c1b799f2a8a425e9fe389.jpg)\n\n- *Tetrahedron of sides 35mm.*\n\n A triangular sketch was made and this triangle was blended to a point using the option 'Blend'.\n![Tetrahedron](https://64.media.tumblr.com/97150c7e03e7411ebe3988a6968ad438/0e7fa21646481b37-cd/s400x600/d298910fb724e04e8e72b97b3e06c2e178dd5589.jpg)\n\n-* Octahedron of sides 30mm.*\n\nOctahedron was also made using the option 'Blend' in the software.\n![Octahedron](https://64.media.tumblr.com/4cb7a5b6831237065531c31c163b6d14/e1424596a20c5ee7-4d/s400x600/bf3bff4b6d2a7c27de1831039181b314b58eb996.jpg)\n\n-* Hemisphere of radius 70mm.*\n\nI have shown both solid and hollow hemispheres. Both the spheres was done using the option 'Revolve' about a defined center line. The degrees was set to 180 as we needed only half of the sphere.\n \nFor the solid hemisphere, closed semi-circle was drawn and for the hollow hemisphere, open semi-circle was drawn.\n![Solid](https://64.media.tumblr.com/7b11fc4704565998ef6f4f8a7941435b/14d9d4284bafd4b3-8a/s400x600/e8d74ae83da5e3074cc7320f741794ef6a28a766.jpg)\n\n![Hollow](https://64.media.tumblr.com/dd9efb310ec8eb7a0eb088b9abbe98b5/ee95edd140879e91-54/s400x600/1cfaaed6d930b1c9af1b628270cdec064272d92b.jpg)\n\n*Challenges faced *: None\n\n### TASK 3 : 3D Drawing\n\nThe following  sub-tasks were given in this task. A few dimensions were not mentioned, so they were taken accordingly.\n\n1a.* Pentagonal pyramid of sides 40mm and height 60mm.*\n\nFor a pentagonal pyramid, again the option 'Blend' is useful. The point should be taken at the center of the Pentagon by taking proper dimensions.\n![Pentagonal Pyramid](https://64.media.tumblr.com/1274e2be2a2db51c13c7e8399b70ab8f/d662c0f2130de6ba-2b/s400x600/cd0bd9a9170386ecb5c374a052f9955b8aab9316.jpg)\n\n1b.* Hollow Cylinder, diameter 40mm and height 60mm,thickness 2mm.*\n\nA hollow cylinder is made by extruding a circle and removing the material from inside by providing the proper thickness.\n![Hollow Cylinder](https://64.media.tumblr.com/191a0fb10354261d0be675d5c6519163/918839ced15aaf04-71/s400x600/f33d8357b2e6ad2c37d3c6b3f51080619eee8afe.jpg)\n\n2.*A hexagonal pyramid of base edges 16mm and height 50mm is placed on a cylinder of radius 50mm.*\n \nHexagonal pyramid was made using 'Blend' option and then a circle was made on the base of the pyramid and 'Extrude' option was used.\n![Hexagonal pyramid](https://64.media.tumblr.com/61f061e679340a66b0697a26363f53bb/e65381c076e95328-bc/s400x600/4b9a740ec0795263a3dfedbd3f6e02da7bd3584a.jpg)\n\n3. *A triangular prism of sides 30 mm placed a square prism of sides 50mm with equal inclination to the horizontal axis.*\n\nA triangular prism was made using the sketch of a triangle and then extruding it. The base was again extruded to obtain a square prism.\n\n![Prism](https://64.media.tumblr.com/716ab467774877cae54fe5e2e5c22799/a5875dbf51dfb72e-aa/s400x600/5769de85d26ff9d55313c8fbc11ef1d0c95694a8.jpg)\n\n*Challenges faced* : None.\n\n### TASK 4 : Design, Assembly and Simulation.(Hinge joint) \n\nA hinge joint was to be shown in this task through the design software. A hinge joint is the one which allows flexion and extension in one plane with small degrees of motion in other planes. The required measurements were mentioned. All the three parts were to be created and then assembled together.\n\nOptions used:\n\n- 'Sketch' for creating the basic sketch.\n\n- 'Extrude' for extruding the sketch.\n\n- 'Hole' for creating holes on the extruded surface.\n\n- 'Pattern' for creating the pattern of holes.\n\n- 'Chamfer' for chamfering the surfaces.\n\nAlso, tried an option called 'Appearance' which gives the look of different types of materials to the objects. Different colours can be added too.\n\n*Challenges faced* : Although it was a little time consuming while doing an assembly on a new software as I was exploring various other options, no major challenges were faced.\n\n![Hinge Joint](https://64.media.tumblr.com/fe48eebb335c38ed83f823ab1999e4d5/cc6c90a113143a75-a9/s540x810/0a2ce471fa6d21d6a6339411d4bd567733c92210.jpg)\n\n### TASK 5: 3D designing of ball and socket joint.\n\nThe design and assembly of a ball and socket joint was to be done in this task. A ball and socket joint is a system consisting of a ball-shaped part that fits into a ball-shaped socket.\n\nOptions used :\n- 'Revolve' option was sufficient for the first part.\n- 'Extrude' to extrude the socket. \n- 'Revolve' to remove certain portions from the socket.\n\n![Ball and Socket](https://64.media.tumblr.com/3e18fc4df6a96ff72876e13efd7b87f8/7b82431973d34414-a2/s540x810/405e8df13e53a7e53b8a10761e826d5ed0bf37e4.jpg)\n\nI also tried creating different types for the ball and socket joint.\n\n![Ball](https://64.media.tumblr.com/fa4182f13b6fc7d7fc2c6bfbc925e645/ae05aec54948624b-8a/s400x600/7031b66fff383dad73b775afa0a707a235a90b45.jpg)\n\n### TASK 6 : 3D Printing\n \nIn this task, we had to create a simple machine component through a design software and then print is using Ultimaker Cura. But, since the 3D printer was not in proper condition since a while, we were not able to complete this task. \n\nHowever, in the mean time learnt a few basics of the Ultimaker Cura. The printable files are ready as well.\n\n### TASK 7 : LED on a Breadboard\n\nLED stands for Light Emitting Diode. It is a simple component which emits light when current is passed through it. LED has various applications such as in street lights, parking garage lighting, walkway and other outdoor area lighting, refrigerated case lighting, modular lighting, and task lighting. \n\nBelow I have built a very simple circuit which lights up a single Light Emitting Diode.\n\n*Components used* :\n\n- A breadboard \n : Used for building temporary circuits\n\n- Breadboard wire links\n : Used to connect two points in a circuit \n\n- Battery\n : To provide power supply\n\n\n- Battery clip\n :  For mounting batteries securely within a holder\n\n- LED \n : To emit light.\n\n- Resistor\n : The purpose of the resistor is to limit the current flowing through the LED so that the LED is not burned out.\n\nThe above components are connected in an arrangement as shown below. Once the circuit is closed, and the current is passing through LED it starts emitting light.\n\n*Challenges faced* : None\n\n![LED](https://64.media.tumblr.com/4f33020803e334d3d24f0174f45ab5e6/892ab5918f6ff15b-62/s540x810/4b51691276491ed7807e745410b9259dfc353e87.jpg)\n\nAlso tried using different LEDs by connecting them in parallel. I had used different resistor and LED combinations as well.\n\n![LED](https://64.media.tumblr.com/a7cfc3612cd04ea73680b6fc714d43d9/3c2f6c19af373998-82/s540x810/d651f9cb8b77e13fcfe88a134e4b93e0bb01331a.jpg)\n\n### TASK 8 : Transistor as a switch\n\nThis task required us to operate a transistor as a switch by biasing it appropriately. The transistor has 3 pins. Namely- Emitter, Base and Collector. Transistor has found use in great digital applications such as embedded systems, digital circuits, and control systems.\n\nComponents used :\n\n1. Breadboard : Used for building temporary circuits.\t\t\n2. Connecting Wires : Used to connect two points in a circuit\t\t\n3. Battery : To provide power supply\t\n4. BC547 NPN Transistor\t: Is usually used for current amplifier, quick switching and pulse-width modulation (PWM)\t\n5. Switch/Push Button :  Used to turn on and off the control circuit\t\n6. Resistors : To limit the current flowing\n7. LED : To emit light\n\n*Challenges faced* : It was little difficult to read the circuit diagram and make the connections accordingly.\n\n*How was it solved* : I had to go through all the symbolic representations of the devices, positive and the negative terminal differences and then was able to get it.\n\n![Transistor](https://64.media.tumblr.com/3d44f3ed998557af326916f02ef1e781/88dfe093a4ffbc6e-0d/s540x810/81aa4f71559623a19b5a6d20c0527cdb16365835.jpg)\n\n### TASK 9 : Flash an LED using a transistor\n\nIn this task, we were required to blink an LED using 2 npn transistors. This circuit basically works on the charging and discharging of capacitors. The speed of blinking can be changed by changing the value of capacitors. \n\n*Components used* :\n\n1. Breadboard: Used for building temporary circuits.\t\t\n2. Connecting Wires : Used to connect two points in a circuit\t\t\n3. Breadboard supply : To provide power supply through a DC Adaptor\n4. Resistors : 2 resistors of 1K ohm each and 2 resistors of 22k ohm each were used\n5. LEDs : 2 LEDs to emit light\n6. Transistors : 2 NPN transistors of BC547 were used\n7. Capacitors : 2 Capacitors of 100 micro farad each were used\n\nThe arrangement below shows Flasher circuit.\n\n*Challenges faced* : None\n\n![Flasher circuit](https://64.media.tumblr.com/cf068df06cf540976c2d2f8e211b876f/9dbb7083a5c165fa-75/s540x810/b96085cc2c0625ff73721bd1579b35d77b96e2a5.jpg)\n\n### TASK 10 : Darkness detector using LDR\n\n  LDR stands for Light Dependent Resistor. As indicated by the name, this type of resistor works on photoconductivity. LDR is used to indicate the presence or absence of light, or to measure the light intensity. Here, I have created a darkness detector circuit that turns on an LED when the room is dark. Also, designed a light detector by biasing the transistor appropriately. The arrangement is as shown in the picture below.\n\n*Components used* :\n\n1. Breadboard: Used for building temporary circuits.\t\t\n2. Connecting Wires : Used to connect two points in a circuit\t\t\n3. Breadboard supply : To provide power supply through a DC Adaptor\n4. Resistors : To limit the current flow.\n5. LDR : To measure the intensity of light.\n\n*Challenges faced*: None\n\n\n![Detector](https://64.media.tumblr.com/5c6afd738317e2987cea45639d3e3a26/211a34c46f3ca100-bc/s540x810/eba6048d099b847bb8b53683f27e11370659a1b3.jpg)\n\n### TASK 11 : Convert the drawings on paper to CAD\n\nA few components' isometric projections were given along with the specified dimensions. These parts were to be replicated on a design software using the given dimensions. In this task, I have made use of a software called Creo Parametric.\n\nThe different options that I made use of while designing the below components are :\n \n-  Sketch : For design 1, 2 and 3\n-  Extrude : For design 1, 2 and 3\n-  Shell : For design 2\n-  Trajectory rib : For design 2\n-  Sweep : For design 3\n\nThe 3D dimensional views are as given below.\n![1](https://64.media.tumblr.com/029d11dfa289edaa1731e4009932350f/f28e867437719564-46/s400x600/a9eb6f276f6f6d289c1fd3209dd72cbb83a2000e.jpg)\n![2](https://64.media.tumblr.com/b42577308c2770ae062e16225438da78/8340ac3031b13119-ce/s500x750/e0e2893f963534d85b2b2adf99e92592d5ad91c8.jpg)\n![3](https://64.media.tumblr.com/f92d27cc79ae4c9e889169624ad320dd/76ebaa937b6e277a-86/s400x600/c8d168f784c43d63bf95a0b3ca29af1630e85acc.jpg)\n\n### TASK 12 : Simple soldering practice\n\nSoldering is the process of joining two or more electronic parts together by melting solder around the connection. This process to be carried out, requires a few components. The components used are as listed below.\n\n - Soldering iron : Heats up in order to melt solder around electrical connections. \n\n-  Sponge : Helps to keep the soldering iron tip clean by removing the oxidation that forms.\n\n-  Soldering iron stand : Helps prevent the hot iron tip from coming in contact with flammable materials.\n\n- Solder : Metal alloy material that is melted to create a permanent bond between electrical parts.\n\n-  Helping hand : A device that has 2 or more alligator clips and sometimes a magnifying glass/light attached.\n  \n Here I have soldered two wires. I have also soldered an IC on a printed circuit board. Below are the pictures of same. This particular task was the most interesting one as I had performed this for the first time. Marvel coordinators had helped me by teaching how this works.\n\n*Challenges faced*: The soldering process was a little complicated while doing it on PCB.\n\n*How was it solved* : De-soldered where-ever I found that the soldering done was not satisfactory and soldered again.\n\n![Wire](https://64.media.tumblr.com/3c20c4d8f44535c9771fa28ba0df4d14/57ea90839327e589-37/s640x960/d8df44a02e282b67a1db1acc2f3c38463405978e.jpg)\n\n![PCB](https://64.media.tumblr.com/5cfcf8e8e179fc1926ae8f00a5e83a84/edbeb9daac4cf3d3-7b/s540x810/d4da4959da7bfb33bb3454be014759a55dc40450.jpg)\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n","tags":[],"reviewStatus":"PENDING","feedback":"","rankingScore":1,"createdAt":"2023-01-23T15:47:08.240Z","updatedAt":"2023-01-23T15:49:15.441Z","slug":"level-1-design-and-prototype-nischitha-tiwari","__v":0},{"_id":"63ceb018e2aa197dd4e8529d","authorId":"102366693772660356903","authorName":"Bharath M","authorSlug":"bharath-m","authorImage":"https://lh3.googleusercontent.com/a/AItbvmkgv-6D8f1WF6NDYdt6NCgwJj6SrbakWffIwJNw=s96-c","level":1,"courseCode":"EV-RE-001","domain":"EV-RE","title":"Level 1","content":"https://acrobat.adobe.com/link/review?uri=urn:aaid:scds:US:fcdf8206-21f2-3fa4-ac13-4cc8c0e2c386","tags":[],"reviewStatus":"PENDING","feedback":"","rankingScore":1,"createdAt":"2023-01-23T16:04:40.245Z","updatedAt":"2023-01-23T16:04:40.245Z","slug":"level-1-bharath-m","__v":0},{"_id":"63ceede5e2aa197dd4e852de","authorId":"100318100200674568635","authorName":"Sowmya KalaSindhu","authorSlug":"sowmya-kalasindhu","authorImage":"https://lh3.googleusercontent.com/a-/AFdZucrrIF3kh6v8AJ37oB8tF0sMyqlTl3L-5AbuCUnT8A=s96-c","level":1,"courseCode":"CL-CY-001","domain":"CL-CY","title":"Project Report L-1","content":"# Task 1: Basics of JavaScript\nThrough this task I learnt the basics of Javascript and also created a web page that takes marks and names of students and calculates the following: Percentage of each student,Class Average and Rankings of the students.\n\n## Output of Task 1: ![Student Data](https://github.com/Sowmya-KalaSindhu/JavaScript/blob/main/Task1.PNG?raw=true)\n\n# Task 2: Callback program to display Food Recipe\n\nIn this program we have used an **asynchronous callback function**.\nThis technique allows a function to call another function\nWhile implementing I learnt about various functions and keywords of JavaScript.\nI also came across *Callback hell* and its disadvantages.\n\n[Task2 souce code](https://github.com/SowmyaKalaSindhu/JavaScript/blob/main/Task%202.html)\n\n# Task 3: Food Recipe Using Promise\nHere instead of callback hell we have simplified the code using **promises**.\n\n## Code snippet of Promise:\n![Promises](https://github.com/Sowmya-KalaSindhu/JavaScript/blob/main/Task32.PNG?raw=true)\n\n### Here is the output of the Task 3, that displays recipe of Mac and Cheese:\n![Program on Promises](https://github.com/Sowmya-KalaSindhu/JavaScript/blob/main/Task31.PNG?raw=true)\n\n#### Benefits of using Promise are:\n\n- It is a solution for callback hell\n- Makes the code clean and organized\n- Better error handling\n- Improves code reusability\n- Better asynchronous flow control\n\n# Task 4: Basics of Ubuntu\n## Subtasks :\n\n### a. Create a folder named test\n### b. Cd into that folder\n### c. Create a blank file without using any text editor\n### d. List the files in that folder\n![Subtask b to d](https://github.com/Sowmya-KalaSindhu/JavaScript/blob/main/task4d.PNG?raw=true)\n\n### e. Create 2600 folders in this folder where each folder is named like M90 or B56\n\nWe can create multiple directories with single mkdir command using { } and separating each directory by comma. Here I have created 12 folders, we can do the same for 2600.\n![multiple directories](https://github.com/Sowmya-KalaSindhu/JavaScript/blob/main/Task4e.PNG?raw=true)\n\n### f. Concatenate two text files containing any random text and display them on the terminal\n![concatenate files](https://github.com/Sowmya-KalaSindhu/JavaScript/blob/main/task4f.PNG?raw=true)\n\n# Task 5: Basics of Vi\nThe default editor that comes with the UNIX operating system is called vi (visual editor). Using vi editor, we can edit an existing file or create a new file from scratch.\n\n[Code snippet](https://github.com/Sowmya-KalaSindhu/JavaScript/blob/main/Task%204.txt) \n\n# Task 6: Basics of regex and piping in Linux\n## Using last and grep command to extract login times:\n![](https://github.com/Sowmya-KalaSindhu/JavaScript/blob/main/task6b.PNG?raw=true)\n\n## Pipe into text file and put the same into a folder named logs:\n![](https://github.com/Sowmya-KalaSindhu/JavaScript/blob/main/task6c.PNG?raw=true)\n\n## Zip the folder using gzip and tar:\n![grep](https://github.com/Sowmya-KalaSindhu/JavaScript/blob/main/gzip.PNG?raw=true)\n\n![tar](https://github.com/Sowmya-KalaSindhu/JavaScript/blob/main/tar.PNG?raw=true)\n\n## Final Output:\nYou can see the zipped file in the desktop.\n![zip](https://github.com/Sowmya-KalaSindhu/JavaScript/blob/main/task6final.PNG?raw=true)\nFind the codes in [CL-CY](https://github.com/Sowmya-KalaSindhu/JavaScript.git)","tags":[],"reviewStatus":"PENDING","feedback":"","rankingScore":1,"createdAt":"2023-01-23T20:28:21.534Z","updatedAt":"2023-01-23T20:28:21.534Z","slug":"project-report-l-1-sowmya-kalasindhu","__v":0},{"_id":"63d1444e96cc391db050c253","authorId":"100964126036380601327","authorName":"Bhuvan K","authorSlug":"bhuvan-k","authorImage":"https://lh3.googleusercontent.com/a/AItbvmkA6hKrLs8saguy81650lp9wnXSgvxxoD1DcYqlKQ=s96-c","level":1,"courseCode":"EV-RE-001","domain":"EV-RE","title":"MARVEL  EV-RE-001 LEVEL 1 REPORT","content":"### Task 1:  LTspice and Kicad\n\n**Date:** October 03, 2022\n\n**Aim:** To Figure out how to use LTspice. Design and simulate a astable multivibrator using 555 timer.\n\n**Software** **used:** LTspice\n\n**Circuit diagram and output waveform: **\n![](https://drive.google.com/uc?export=view&amp;id=10vPQvW_gZohC51twCQoIf8hxPkxVZBCD)\n**Calculations:**\n\nThe capacitor voltage for a low pass RC circuit subjected to a step input of VCC volts is given by\n\nvc = VCC (1- e -t/RC)\n\nThe time t1 taken by the circuit to charge from 0 to 2/3 of Vcc is\n\n(2/3) VCC = VCC (1- e -t1/RC) or t1  = 1.09 RC\n\nThe time t2 taken by the circuit to charge from 0 to 1/3 of Vcc is\n\n(1/3) VCC = VCC (1- e -t2/RC) or t2  = 0.405 RC\n\nso tHIGH  = t1 - t2\n\n tHIGH  = 1.09 RC - 0.405 RC =&gt; 0.69RC\n\nso for the given circuit,\n\n tHIGH  = 0.69(RA + RB )C\n\nHere let C = 0.01uF , RA = 10K and RB = 100K\n\nThus  tHIGH  = 0.759 ms\n\nThe output is low  while the capacitor discharges from (2/3)Vcc to (1/3)Vcc \n\n(1/3) VCC = (2/3)VCC (1- e -t/RC)\nThen  tLOW = 0.69 RB C\nThus   tLOW = 0.69 ms\n\n**Outcomes:** \nUnderstood how to use LTspice software and using IC555 in this software how to implement astable multivibrator .\n\n**Date:** October 12, 2022\n\n**Aim:** To Figure out working of Kicad and use it to make a simple led blinking circuit.\n\n**Software used:** Kicad software\n\n**Theory:** \n1.Schematic symbol is a symbolic representation of an actual physical circuit.\n2.Footprint is a physical thing to which we solder stuff to.\n3.Resistors : SMD 0.8 inch x 0.5inch\n4.Surface mount battery holder S8211 - 48R\n\n**Procedure:** \n\n1.Schematic Symbol Creation \n\n2.Making The Schematic\n![](https://drive.google.com/uc?export=view&amp;id=11C-JU3RTX-llIW4FgxfpIlUmHyrflc7r)\n3. Associating Symbol and Footprint\n![](https://drive.google.com/uc?export=view&amp;id=119EcuWATX3d-PJcScJyy7MBvKKJAKTag)\n4. Creating A Custom Footprint\n\n5. Finishing The Layout\n![](https://drive.google.com/uc?export=view&amp;id=11-wHS6ix-9BZqFhT9bIkc8froYtYXY7n)\n**Outcomes:** \n\n1.Understood how to use Kicad software.\n\n2.A simple LED blinking circuit is implemented using this software\n\n### Task 2 : Speed control of DC motor\n\n**Aim** : To Learn about the dual H-Bridge L293D motor driver and control the speed of the dc motor shaft\n\n**Software used :** TinkerCad \n\n**Components used : **\nComponents\t\n5V DC motors\t2,\nArduino Uno\t1,\nmotor controller module\tL293D chip - 1,\nBattery\t9V - 1,\npotentiometer\t10K ohm - 1,\nJumper wire \tfew,\n\n**Circuit connections in TinkerCad : **\n![](https://drive.google.com/uc?export=view&amp;id=1VOzB7-VQ3wt0vrlTKnuCVs5fLJcqpCvT)\n\n\n**TinkerCad Link : **\nhttps://www.tinkercad.com/things/ijtrkJVpdtj?sharecode=PzXDrtuttW9xslwrUyAulpL5XKhFMs3UgmoFFL5vYcM\n\n### Task 3 : Direction Control of a Motor\n\n**Aim** : To Learn about the dual H-Bridge L293D motor driver and control the direction of the dc motor shaft\n\n**Software used :** TinkerCad \n\n**Components used : **\nComponents\t\n5V DC motors\t2,\nArduino Uno\t1,\nmotor controller module\tL293D chip - 1,\nBattery\t9V - 1,\npotentiometer\t10K ohm - 1,\nJumper wire \tfew,\n\n**Circuit connections in TinkerCad : **\n![](https://drive.google.com/uc?export=view&amp;id=1VOzB7-VQ3wt0vrlTKnuCVs5fLJcqpCvT)\n\n\n**TinkerCad Link : **\nhttps://www.tinkercad.com/things/j2BtUR7jUB0?sharecode=pJXM1kwo-k_XnExE_HB8zQXgLXFGY2_H85NsgB_S1Ak\n\n**References:**\n\n1.Learned about the dual H-Bridge L293D motor driver from the following youtube channel.\n\nhttps://www.youtube.com/watch?v=PVyAcgYkzDs\n\n2.Learned the circuit connections and arduino code from the resources provided.\n\n### Task 4 :Point Turn of a Vehicle\n\n**Date**: 6 January 2023\n\n**Aim** : Achieve point turn of a vehicle, use the knowledge accumulated from previous tasks.\n\n**Components used : **\nComponents\t\n5V DC motors\t2,\nArduino Uno\t1,\nmotor controller module\tL293D chip - 1,\nBattery\t9V - 1,\npotentiometer\t10K ohm - 1,\nJumper wire \tfew\n\n**Implementation:** \nTo achieve the point turn of a vehicle I made the both the wheels of the vehicle to move forward at first and later after certain interval of time made them both of them to turn in opposite direction in the code.\nTo make it to turn smoothly I used a ball wheel.\n\n\n\n**Problems faced:**\nAt first I used all 4 normal wheels even though the vehicle turned it was not a point turn so to improve it I used a ball wheel.\n\n### Task 5 :Ultrasonic Sensor\n\n**Date:** 5 January 2023\n\n**Aim : **The HC-SR04 Ultrasonic Distance Sensor is a sensor used for detecting the distance to an object using sonar. Using HC SR-04, make an obstacle avoiding vehicle.\n\n**Components used : **\nComponents\t\n5V DC motors\t2,\nArduino Uno\t1,\nmotor controller module\tL293D chip - 1,\nBattery\t9V - 1,\npotentiometer\t10K ohm - 1,\nJumper wire \tfew, Ultrasonic sensor - HC-SR04\n\n\n\n\n**Implementation:**\nTo implement the object avoiding bot I fixed a ultrasonic sensor in front of the bot and set a threshold distance in the code such that whenever if the distance measured by the sensor is less than the threshold distance only any one wheel should move reverse and the other should stop such that the bot should come back for certain interval of time and continue to move forward as before.\n\n**Reference or Resources used:**\n\nUltrasonic sensor pin out\n![](https://drive.google.com/uc?export=view&amp;id=1IrJZPlv91uorvaypCbE0-g1NfzgGm_yD)\n\nLearnt the basic working of the sensor from this video below:\n\nhttps://www.youtube.com/watch?v=vf2lW4LkmMQ\n\n### Task 6 : Temperature Detection\n\n**Date :** 18 November 2022\n\n**Aim :** To Measure temperature using an lm35 temperature sensor and Arduino and display it on the serial monitor. Measure temperature readings of air around soldering gun tip  taken at intervals of 5 seconds and turn a led on using BJT as a switch when the temp crosses a certain threshold.\n\n**Software used :** TinkerCad, Arduino ide.\n\nComponents used : \nTemperature sensor-\tLM 35\n,Arduino Uno-\t1\n,LED\t-1\nResistor-\t1K ohm -1,\nBreadboard \t-1,\nJumper wire \t-few\n\n**Circuit connections in TinkerCad : **\n![](https://drive.google.com/uc?export=view&amp;id=1tp5W2zRUDd38jSc7fWHX47pfN8S-FphN)\n\n\n\n**TinkerCad Link : **\nhttps://www.tinkercad.com/things/kA6g9cM3w6z?sharecode=wJuZrHftdP8G2J4M0QSZHKfDvw_iYzwHQoOABidK-6U\n\n**References:**\n1.Learned about the LM 35 temperature sensor from the  following youtube channel.\n\nhttps://www.youtube.com/watch?v=k099LBmwcgE\n\nAnd Learned the circuit connections and arduino code from the resources provided.\n\n**Problem faced:**\n\nConfusion in the pin configuration of  the sensor\n![](https://drive.google.com/uc?export=view&amp;id=1K56hhFHQkmU2MelWP_oNFeOVD279-_fd)\n\n\n### Task 7 : Temperature and Humidity Detection\n\n**Date :** 22 December 2022\n\n**Aim:** The DHT11 is a basic, low cost digital temperature and humidity sensor. Measure temperature and humidity using dht11 and display the readings on a LCD display.\n\n**Components used:**\n\nComponents used:\n\nTemperature sensor-\tDHT 11\n,Arduino Uno-\t1,\n\t\nResistor-\t1K ohm -1,\n\nBreadboard- \t1,\nJumper wire \t-few.\n\n\n**Implementation: **\nHere to measure the temperature and humidity a digital sensor is used, and the output is displayed on a 16*2 lcd display.\n\n**Problems faced: **\nWas not able to display the output in lcd screen so i reffered the below video for connection of lcd with arduino \n\nhttps://www.youtube.com/watch?v=CyPvIPG7s4Y\n\n**Outcomes:**\n\n1. Learned about the dht11 sensor and its working.\n\n2. Was able to implement the output in an lcd screen.\n\n### Task 8: BLDC Motor And Hall Effect Sensor\n\n**Aim:**\nMeasure the speed of a BLDC motor using a hall effect sensor and display it on the serial monitor.\n\n**Components Requried:** \nHall Effect Sensor module - 1, 5V DC Fan/Blower-1, Arduino Uno - 1, Neodymium magnets 5mm x 1mm - 3,  Breadboard - 1,\n\n**Implementation:**\n\nThis experiment using a 5V blower fan, hall sensor, and neodymium magnet attached to the fan. The setup allowed us to print out values for the approximate RPM of the fan, which can give us a more accurate idea of the flow rate of the fan. Tachometers are very useful for measuring speeds of various parts in mechanical systems like aircraft and automobiles. This method of tachometer: a contactless, interference resistant.\n\n\n\n**Theory Background:**\n\nThe hall effect, in short, is a relationship between electric and magnetic fields through a semiconductor that allows electricity to flow when a magnetic field is applied within the vicinity of a given hall sensor. \n\nUnipolar sensors are great for scenarios where only one pole of magnet is needed. This allows us to stick a magnet to a moving object and as it cycles through its rotation, each time it passes the hall sensor, the hall sensor registers its passing and we can say that one period has been completed. \n\n**Problems faced:**\nFor the better results the magnets should be sticked to the middle of the fan rather than on the blades.\n\nThe distance between the magnet and the sensor should be less than 3cm.\n\n\n### Task 9: Battery Capacity Measurement\n\n**Aim:** \nConstruct a battery undercharge monitor: Monitor the voltage of a Li-ion battery connected to a load and cut off the current to the load using MOSFET as a switch. Custom: overcharge and/or current protection.\n\n**Components Required:** \n\nArduino -1, Lcd display -1 , n-channel Mosfets - 2, resistors, 10k potentiometer,wires and li-ion battery 3v.\n\n**References:**\nFor the theory background and the arduino code i have reffered to the following website\nhttps://www.instructables.com/Arduino-cell-capacity-meter/\n\n**Outcomes:**\nWas able to measure the voltage of the li-ion battery used and display it on lcd.\nAnd also verified the measured voltage using multimeter.\n\n### Task 10: Battery Charging \n\n**Date: ** 21 January 2023\n\n**Aim: ** \nCharge the Li-ion battery using solar panels.\n\n**Components Required:**\n\nSolar panel 6V,Li - Ion charger board TP4056,Schottky diode ,Lithium - Ion battery, Lithium - Ion battery holder, wires.\n\n**Circuit Diagram:**\n\n![](https://drive.google.com/uc?export=view&amp;id=1JDgv9lIoCjX4uaC1Kkl0oO0OlU56ADnw)\n\n**Implementation:**\n\nConnect positive terminal of solar cell to anode of diode. Connect negative terminal of diode to IN+ (input positive) of TP4056. Diode is used because of reverse current.\n\nAlso connect negative terminal of solar cell to IN- (input negative) of TP4056. Finally connect battery, positive terminal of battery to BAT + of TP4056, similar negative terminal.\n\n**Outcomes:**\n\nThe li-ion battery got charged under the light.\n\n### Task 11 : Understanding 555 Timer And LDR\n\n**Date:** 22 December 2022\n**Aim:** \n\nConstruct an automated headlight setup, using an NE555 (IC1) and a LDR(Light dependent resistor).\n\n**Components Required:**\n\n1. L.D.R (Light Dependent Resistor)\n\n2. IC NE555 with Base\n\n3. LED1 &amp; LED 2 (Light Emitting Diode)\n\n4. Variable Resistance of 47 KΩ\n\n5. On/Off Switch\n\n6. 9v Battery with strip\n\n7. 47K Trimmer or Preset\n\n8. 330E Resistor\n\n**Circuit Diagram:**\n\n![](https://drive.google.com/uc?export=view&amp;id=1hie68gz1Fk5WuCE1mnZGZRrnRD-sVhTO)\n\n**Implementation:**\nLDR is a Light Dependent Resistor whose value depends on the quantity of the light which is falling on it. It has a resistance of almost 1 mega ohm when it is in total darkness, but its resistance is about 5k ohms when exposed to full brightness. The IC 555 timer is used to control the operations of the circuit which acts as a comparator circuit with pin 6 connected to the positive terminal. The output goes high when the pin no. 2 i.e trigger pin goes one-third of the supply voltage. Similarly, its output goes to low when output is above one-third of the voltage. For detection of the amount of light, LDR is used as a resistor to adjust the circuit voltage.\n\n**Outcomes:**\n\nDuring the day the green led glows and during night red led glows in the experiment.\n\n### Task 12: Solar Panel\n\n**Date:** 12 January 2023\n\n**Aim:**\nMake a simple solar panel set-up using diodes\n\n**Components Required :**\n\nSchottky diodes-6,breadboard-1,multimeter and Light.\n\n**Implementation:**\n\n5-6 schottky diodes are connected in parallel with all anodes connected to one node and similarly cathode connected to another node, when the set up is illuminated with light we observe a potential difference developing across the diodes using multimeter.\n\n**Problem Faced:**\n\n1.normal diodes did not work.\n\n2.best results under sunlight. \n \n### Respective Videos and arduino of all executed tasks in the given drive\nhttps://drive.google.com/drive/folders/1S9Kuxy6Pm7a74kbxTyXh7KtAa3b_P0Za\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","tags":[],"reviewStatus":"PENDING","feedback":"","rankingScore":1,"createdAt":"2023-01-25T15:01:34.625Z","updatedAt":"2023-01-25T19:22:02.222Z","slug":"marvel-ev-re-001-level-1-report-bhuvan-k","__v":0},{"_id":"63d4fabd81267cae39b109de","authorId":"116457774364774773301","authorName":"Utkarsh Raghunath","authorSlug":"utkarsh-raghunath","authorImage":"https://lh3.googleusercontent.com/a/AItbvmmVrxm7vHc5Nzu8YqCXDTS7dXdynkRUvDMIoO7j9cA=s96-c","level":2,"courseCode":"IOT-001","domain":"IOT","title":"IOT 001 - Level 2 & 3 Report 2022","content":"#IOT 001 - An Introductory Course on Internet Of Things\n![](https://res.cloudinary.com/marvelweb/image/upload/v1651086776/image2mrvl-min_sh7yax.png)\n\n##Level 2\n\n###Task 3: ESP 32 Cam\n\nAim: Set up a CCTV camera system that streams/records video footage from MARVEL as a measure to heighten the lab’s security.\n\n-Going through the resource given on the website gave a clear understanding about the ESP 32 module and also the FTDI cable.\n\n-The uploading part of the task was a bit confusing and took multiple trials to understand the correct procedure.\n\n-Video Recording of Task 3:\n<iframe height=\"315\" src=\"https://www.youtube.com/embed/eIg7BbtEiY8\"></iframe>\n\n\n-------------------------------------------------------------------------------------------------------------------------------\n\n##Level 3\n\n###Task 1: ESP32 as a Webserver\n\nAim: Set up ESP32 as an HTTP server to serve a webpage that contains a button that controls a relay to turn ON/OFF an LED using the webpage as interface.\n\n-The resource given along with this task was really helpful. It had the web server code and also a video tutorial which made learning easier. Also, there was a detailed explanation about how the code works.\n\n-The connections were simple and the entire process of uploading was really smooth.\n\n-I learned about the ESP IP Address and also how to access it.\n\n-This was a really interesting task as it gave a basic idea about how certain home appliances work over Wi-fi.\n\n-Image of the setup:\n![](https://drive.google.com/uc?export=view&amp;id=1Asdb83So619pFDN61KcHSEuO8VsgdTIw)\n\n\n-Video Recording of Task 1:\n<iframe height=\"315\" src=\"https://www.youtube.com/embed/kPTVNn_nVDo\"></iframe>\n\n-------------------------------------------------------------------------------------------------------------------------------\n\n###Task 2: Flashing Morse Code\n\nAim: Set up the ESP32 to flash Morse code using an LED making use of the above setup with a web page.\n\n-In this task, I learnt about what Morse code exactly is and how it works. This in turn gave me a clear idea about how this setup is expected to work.\n\n-The connections were simple with just 3 LEDs and 3 Resistors connected to the ESP32.\n\n-The code was, however, a bit difficult to find as most of the resources suggested to use a buzzer instead of LEDs.\n\n-Image of the setup:\n![](https://drive.google.com/uc?export=view&amp;id=1AikygQOV4JIan9cSePcQLCX6ETGmKG7C)\n\n\n-Video Recording of Task 2:\n<iframe height=\"315\" src=\"https://www.youtube.com/embed/-eGAQaeLmbg\"></iframe>\n-------------------------------------------------------------------------------------------------------------------------------\n\n###Task 3: Soil Moisture Sensor\n\nAim: Measure soil moisture using appropriate sensors and use ESP32 to display the readings in the terminal.\n\n-For this task, I tried researching about the sensor being used and in the process, I learnt about the different sensors that can be used for this task, namely: Capacitive Moisture Sensor and the Resistive Moisture Sensor.\n\n-I’ve used the Capacitive Moisture Sensor here, as it does not corrode over time in contrast to the Resistive Moisture Sensor. This is because, in the Capacitive Moisture Sensor, the sensor’s electrodes are not exposed and no electrical current flows between them.\n\n-The connections were really simple as I had to just connect the sensor to the ESP32 according to the wiring diagram.\n\n-The code was also easy to understand and implement.\n\n-Image of the setup:\n![](https://drive.google.com/uc?export=view&amp;id=1AhEa3erff5LWzoIEbNhm_78UBETZdpor)\n\n\n\n-Video Recording of Task 3:\n<iframe height=\"315\" src=\"https://www.youtube.com/embed/0nKtj_gkWFA\"></iframe>\n\n\n\n-------------------------------------------------------------------------------------------------------------------------------\n\nUtkarsh R\n\n3rd Year ECE\n\nUVCE\n\n","tags":[],"reviewStatus":"PENDING","feedback":"","rankingScore":1,"createdAt":"2023-01-28T10:36:45.197Z","updatedAt":"2023-01-28T10:36:45.197Z","slug":"iot-001-level-2-and-3-report-2022-utkarsh-raghunath","__v":0},{"_id":"63d956fd81267cae39b10c03","authorId":"106750292366256981673","authorName":"Somtea Khiangte","authorSlug":"somtea-khiangte","authorImage":"https://lh3.googleusercontent.com/a-/AFdZucqX4NYLjkDoeT1W77JYeTWT91qS5dk1Kl7Dkpk5AQ=s96-c","level":1,"courseCode":"D-P-001","domain":"D-P","title":"Project Report Malsawmtluanga Level 1","content":"#TASK 1\n\nIn Fractal tetrahedron and hexgonal nuts,\nI implement the steps and instructions that I study on EGD in 1st Semester.\nI use a mini-drafter, protractor, and scale  \n\n![image](https://drive.google.com/uc?export=view&amp;id=1hb7ZGJDjfGF6bxx1GKzIKn-ujdSbvOnw)\n\nDrawing machine parts, it's a little bit complicated. Many instructions learned from EGD were applied like orthogonal and isometric projections. The most challenging part is when doing the isometric projection of the machine parts. The three holes are a little bit difficult to draw and do a little bit of free hand.\n![image](https://drive.google.com/uc?export=view&amp;id=1hevuke91ldulqQ_umctnhcvl23CluYgg)\n\n#TASK 2\nHere we start using AutoCAD, I've learned how to use line command, and hatch command(for color).\n\nCube of sides 40mm\n![image](https://drive.google.com/uc?export=view&amp;id=1HQI012KfE7Vdem_rMKliAWpQmmn_C0uz)\nTetrahedron of sides 35mm\n![image](https://drive.google.com/uc?export=view&amp;id=1GCzgwSpXIEuehLT-FVineiCdwlgHVcN1)\nOctahedron of sides 30mm\n![image](https://drive.google.com/uc?export=view&amp;id=1xS_14Cg_kpRLEMjgXRpxO5Rwxey1VXEp)\nThe hemisphere of radius 70mm\n![image](https://drive.google.com/uc?export=view&amp;id=1fDvNQbGDvIoZysMwkxPeGx5Z_iLpoFne)\n\n#TASK 3\nA little more advanced model, a 3D model was drawn here in this task.\nImplement using line command, circle command, extrude command, and all.\nI find it a little bit difficult at the beginning to create from 2d sketches but manage to do so.\n\nA pentagonal pyramid of sides of 40mm and height of 60mm.\n![image](https://drive.google.com/uc?export=view&amp;id=10u1_jShc8AYTatHmNt4aQeDdgh1HWEya)\nHollow Cylinder, diameter 40mm, height 60mm, thickness 2mm.\n![image](https://drive.google.com/uc?export=view&amp;id=1ZMNbx3ZDS8g7I2ZOOqkKUHM5FfFSIntX)\nA hexagonal pyramid of base edges of 16mm and a height of 50mm is placed on a cylinder of radius 50mm.\n![image](https://drive.google.com/uc?export=view&amp;id=1ovcSDKLzIY4WB0yHmR1rP3VNgNZqMm_V)\nA triangular prism of sides 30 mm placed a square prism of sides 50mm with equal inclination to the horizontal axis.\n![image](https://drive.google.com/uc?export=view&amp;id=1h5SHFrbe_QqHrI33sjSm1-jZFucK47r9)\n\n#TASK 4\n\nSome of the measurements given doesn't match with the other so I do a little bit of modification just to make it looks better.\nOnly one side of the leaf was first drawn. with holes for the pin and for screw holes.\nMirror command was then used.\nModified the mirrored leaf(side) to make it fit with the other leaf.\nThe pin was made separate and then put inside\n![image](https://drive.google.com/uc?export=view&amp;id=1qvx-HgPn6Iy4JVAn22fhsa8LbdmVU9wv)\n![image](https://drive.google.com/uc?export=view&amp;id=1g1eb-QsJK8YvxjfpSs2RW95ZP7euTeCk)\n\n#TASK 5\nBall and Socket joint\nFirst I make the socket as the measurement given.\nCommands like extrude,line,circle, presspull,etc., were used.\n\n![image](https://drive.google.com/uc?export=view&amp;id=18Ja1Wx-b1Xht7d6nllvLeahru5x779jR)\n![image](https://drive.google.com/uc?export=view&amp;id=1TZbUtroKvGn-WFLHY19xAqYbs3SYtgnE)\n\n#TASK 6\n\nI used a model from task 4.\nThe pin of the Hinge.\nI convert the .dwg file into .stl file because 3d printing can only use .stl file.\nThen I send the .stl file to octoprint website and print the model\n\n \n![image](https://drive.google.com/uc?export=view&amp;id=1ixA4PEalhnGom1P1icaUWEsOcE9xiRPU)\n![image](https://drive.google.com/uc?export=view&amp;id=1iz9xCQRS7_JJ7YoW83ut9BpS9OdnzRg9)\n\n#TASK 7\nThis one is pretty easy.\nJust connect according to the circuit diagram.\n![image](https://drive.google.com/uc?export=view&amp;id=1kPGP-Si295uV6Sw3SvPK4JbmHBLfOjB0)\n\n#TASK 8\n\nLittle bit complicated, little bit of knowledge about transistor is needed.\nThen just do it according it to the diagram.\nhttps://youtube.com/shorts/dZJolzSI_Eo?feature=share\n![image](https://drive.google.com/uc?export=view&amp;id=1jqXyueCmChZn8tu_MV7zwIg6RF-cI8qD)\n![image](https://drive.google.com/uc?export=view&amp;id=1k0sVQrV3jGEywj0l3jnjeVkNIok05MK_)\n\n#TASK 9\nTransistors,Capacitors and Resistors are used.\nThe connection are just fine but due to some defect or low(or high) resistance or low(or high) capacitors makes it a little bit difficult.\nhttps://youtu.be/LAtH89kjUDc\n\n![image](https://drive.google.com/uc?export=view&amp;id=1krbbRsml3bFjbFsUjLF5FGEAarQ3If8M)\n![image](https://drive.google.com/uc?export=view&amp;id=1kifAAb2Hb5e23O8KkeDR5WjSnVnijKT2)\n\n#TASK 10\nLight detector\n\n\n\nhttps://youtu.be/5pOOtCxqVl4\nDark detector\nhttps://youtube.com/shorts/j99JRNn4xCY?feature=share\n\n![image](https://drive.google.com/uc?export=view&amp;id=1lRzVq5BxAPOhFhhacRikmtAl912TUJ13)\n\n![image](https://drive.google.com/uc?export=view&amp;id=1lPYfNpxqqDVL6znIsgZ9raWXJ_D5Kj0Q)\n\n#TASK 11\n\nhttps://youtu.be/cuQSFNOID4E\n\nThe extrude part was a little bit difficult\n\n\nI really enjoyed drawing these models.\n![image](https://drive.google.com/uc?export=view&amp;id=1Qb9tNBTRp8SJXxOATCSgappt69_zNx0j)\n![image](https://drive.google.com/uc?export=view&amp;id=1fRVt0gFPJ1rCh_ULYTn8FhKzkRTVrLRq)\n![image](https://drive.google.com/uc?export=view&amp;id=1FfxCy6kH6GlBbDniGVSJcaG0H-Db-pzv)\n![image](https://drive.google.com/uc?export=view&amp;id=18EHIzrNQe8t_k5KmN9ebcFERIPQfAHuY)\n![image](https://drive.google.com/uc?export=view&amp;id=1xfDuQNEvkSk-SdCE4z_r0qQIF2Ac0Uy_)\n\nFrom paper to CAD\n![image](https://drive.google.com/uc?export=view&amp;id=1lYdWLrUzdwzYBQze4HD--GvPedXxjIuj)\n![image](https://drive.google.com/uc?export=view&amp;id=1VyW1AzFn_3syuua4Dooo4uEKB5-IEtw5)\n\n#TASK 12\nhttps://youtube.com/shorts/DRX7i6MY_hg?feature=share\n\n\nThe soldering iron was carefully setup\nCircuits and wires to be soldered are carefully arranged.\n\n\n\nhttps://youtube.com/shorts/2s9n0KlkFpA?feature=share\n![image](https://drive.google.com/uc?export=view&amp;id=1i5cm8HGPCLojcuboNCfAn9mrcWVvQnhL)\n![image](https://drive.google.com/uc?export=view&amp;id=1-qacxnrwOn6YNNU8dmIMmVEUHMe9yvqF)\n![image](https://drive.google.com/uc?export=view&amp;id=1i5nt_0o82L89j3Atk8tj_Uxl3KFvOrek)\n![image](https://drive.google.com/uc?export=view&amp;id=1FpPq7GTCqLdB0OH_mCEVF2U8uR_ovZJP)\n","tags":[],"reviewStatus":"PENDING","feedback":"","rankingScore":1,"createdAt":"2023-01-31T17:59:25.512Z","updatedAt":"2023-02-07T17:48:55.902Z","slug":"project-report-malsawmtluanga-level-1-somtea-khiangte","__v":0},{"_id":"63e0a085c630c137e9590419","authorId":"102273199884430853787","authorName":"deepak panwar","authorSlug":"deepak-panwar","authorImage":"https://lh3.googleusercontent.com/a-/AFdZucpo8HwURngYDs3z9aZIV_CVN8J1nAKY_j6C5Qc8yA=s96-c","level":2,"courseCode":"IOT-001","domain":"IOT","title":"An intresting title Part-2","content":"# Level-2\n# Task-3\n## Esp32 CAM\n\nEsp32 cam:\n![](https://i.all3dp.com/workers/images/fit=cover,w=1000,gravity=0.5x0.5,format=auto/wp-content/uploads/2022/02/08114828/esp32-cam-ai-thinker-pinout-random-nerd-tutorials-220106_download-7.jpg)\nThe Esp32-Cam is a cheap, 2-megapixel, small-size camera module developed by AI-Thinker. It integrates an Esp32, a single 2.4 GHz Wi-Fi and Bluetooth SoC (System On a Chip), and an OV2640 camera. \n\nFDTI Programmer:\n\nThe FTDI (Future Technology Devices International) programmer is a USB-to-Serial converter that provides a simple way to connect your standard Esp32-Cam to a USB port on your computer.\n![](https://i.all3dp.com/workers/images/fit=cover,w=1000,gravity=0.5x0.5,format=auto/wp-content/uploads/2022/02/08114845/ftdi-programmer-connected-to-an-esp32-cam-luca-dinale-via-all3dp-220208_download-1.jpg)\nPinout of the serial connection:\n\n1. Connect RX on the FTDI programmer to UOT on the board.\n1. Connect TX on the FTDI programmer to UOR on the board.\n3. GND to GND.\n4. If you set the programmer to 5V, connect to 5V on the board; and if you set the programmer to 3.3V, connect to 3.3V on the board.\n\nPin GPIO0 determines the Normal mode or the Flash mode of the module:\n\n- GPIO0 connected to Ground = Esp32-CAM in Flash Mode = You can upload the code.\n- GPIO0 not connected to Ground = Esp32-CAM in Normal Mode = The board executes the program.\n\nEsp32 camera stream example:\n\n1. Go to File &gt; Examples &gt; Esp32 &gt; Camera &gt; Camera web server.  \n![](https://drive.google.com/uc?export=view&amp;id=1WstplwI0Oh2ad-zd5tt46HnSSE4z0K_a)\n2. Comment out the “#define CAMERA_MODEL_WROVER_KIT” line and uncomment out the “#define CAMERA_MODEL_AI_THINKER”. \n![](https://drive.google.com/uc?export=view&amp;id=1qKXEVn9vFjO_CmfJizlp2GC66RpFVzpx)\n3. Replace the fields with Wi-Fi ssid and Wi-Fi password. \n![](https://drive.google.com/uc?export=view&amp;id=1Z-6suZCP2qVE26mMtOh_iM75O9hX2f7F)\n4. Make sure the Esp32 cam is connected to Arduino IDE and then upload the sketch.\n5. After the Sketch is uploaded go to Tools &gt; Serial Monitor. Copy the IP address of the web server in your browser. Click on the start stream button to start the camera.\n\nImages:\n![](https://drive.google.com/uc?export=view&amp;id=1oAF51NwQtWTQUaF4X1Z_0tT1O3CjCEfz)\n![](https://drive.google.com/uc?export=view&amp;id=1l0qkJHOUJBquJ0hRhXi17yt925y5HVwf)\n![](https://drive.google.com/uc?export=view&amp;id=1kxMhDgpul5fHwMVVJME_NcwD_p4gzMML)\n\nVideos:\n\n1. [ESP32 cam][1]\n\n\n# Level-3\n# Task-1\n## ESP32 as a Webserver\n\nParts required:\n\n1. ESP32\n2. 1 x LEDs\n3. 1 x 330 ohm Resistors\n4. Breadboard\n5. Jumper Wires\n\nConnection:\n\n![](https://i0.wp.com/randomnerdtutorials.com/wp-content/uploads/2018/07/esp32_web_server_schematic.png?w=984&amp;quality=100&amp;strip=all&amp;ssl=1)\nHere we are only using one LED, so you can either remove one of the LEDs or add the logic for the other LED in the code.\n\nCode:\n\n[Click here][2] for the Arduino sketch which has the code for this Task.\n![](https://drive.google.com/uc?export=view&amp;id=1rUjojGMEpb20jM92T82SAkPGWCU2_U4E)\nWi-Fi library is included for helping us with Wi-Fi related functions. Enter your Wi-Fi ssid and Wi-Fi password. The port is set to 80 for the server. And global variables are initialized for the code. The pin 26 is used for the LED connection.\n\nImages:\n![](https://drive.google.com/uc?export=view&amp;id=1lx8p7NInabGv7VZLRIleXIDPhzqMrv-H)\n![](https://drive.google.com/uc?export=view&amp;id=1lmAlOJSV46XZPqa_bXHOskxm6dv4efzm)\n\nVideo:\n\n1. [ESP32 as a webserver][6]\n\n# Task-2\n## Flashing Morse Code\n\nParts required:\n\n1. 1 x LED\n2. 1 x 330 ohm resistor\n3. ESP32\n4. Breadboard\n5. Jumper Wires\n\nConnections:\n\nFirst, connect the GPIO26 pin to LED and then the LED to the resistor. Connect the resistor to the ground of ESP32.\n\nCode:\n\n[Click here][5] for the Arduino sketch\n\nProcedure:\n\n1. Make the required connections and upload the sketch.\n2. Go to serial monitor.\n3. Enter the characters whose morse code you want to flash.\n\nImages:\n![](https://drive.google.com/uc?export=view&amp;id=1l_YG0GxEhHgMP-nL_uJvkh5lugcTLTNj)\n![](https://drive.google.com/uc?export=view&amp;id=1ljpUyQOJOsKPlgbtkiSDwgtKBTd4vw6C)\n![](https://drive.google.com/uc?export=view&amp;id=1lfz9YFtugBAcr9IH7GNncGphhkEeJfeW)\n\nVideo:\n\n1. [Morse code][3]\n2. [Morse Code][4]\n\n# Task-3\n## Soil Moisture Sensor\nParts required:\n\n1. Soil Moisture Sensor\n2. Esp32\n\nThere are two types of soil moisture sensor resistive and capacitive.Using capacitive soil moisture sensor is highly recomnmended because it doesn't corrode with time.\n![](https://esp32io.com/images/tutorial/capacitive-soil-moisture-sensor-pinout.jpg)\nWorking:\n\nThe more is the water present in the soil the higher is the output of the AOUT pin.\n\nConnection:\n![](https://esp32io.com/images/tutorial/esp32-soil-moisture-sensor-wiring-diagram.jpg)\nCode:\n[Click here][7], for the sketch. \n\nProcedure:\n\n1. Make the connections as shows above.\n2. Upload the sketch onto Esp32.\n3. Go to serial monitor and check the values.\n\nImages:\n![](https://drive.google.com/uc?export=view&amp;id=1lZUIKsW1r1j3UqpgqvYRcFSnG4qJlmRT)\n![](https://drive.google.com/uc?export=view&amp;id=1lWirjgwrZJY9twWq9uUG-WBZZAKojzWt)\n![](https://drive.google.com/uc?export=view&amp;id=1lWlML9qny7Jen1VEa7bXNvgaAkEG7f8H)\n![](https://drive.google.com/uc?export=view&amp;id=1lVT4ahK4Hjh-iiMvqP0qGy9e32VALIfN)\n![](https://drive.google.com/uc?export=view&amp;id=1lNRoiXVcrjb3VY5PKPK1mDynMa0lANtk)\n![](https://drive.google.com/uc?export=view&amp;id=1lQWTnyA7KKVmcksddiL-jvgn8k5xJkAu)\n\nVideo:\n\n1. [Soil Moisture Sensor][8]\n2. [Soil Moisture Sensor][9]\n\n# Task-5\n## Read and Display Vitals\n\nParts Required:\n\n1. Esp32\n2. Max30100 sensor\n3. Jumper wires\n4. Breadboard\n\nMax30100:\n![](https://how2electronics.com/wp-content/uploads/MAX30100-Pulse-Oximeter.jpg)\nThe sensor is integrated pulse oximetry and heart-rate monitor sensor solution.\n\nWorking:\nThe device has two LEDs, one emitting red light, another emitting infrared light. For pulse rate, only the infrared light is needed. Both the red light and infrared light is used to measure oxygen levels in the blood.\n\nWhen the heart pumps blood, there is an increase in oxygenated blood as a result of having more blood. As the heart relaxes, the volume of oxygenated blood also decreases. By knowing the time between the increase and decrease of oxygenated blood, the pulse rate is determined.\n\nIt turns out, oxygenated blood absorbs more infrared light and passes more red light while deoxygenated blood absorbs red light and passes more infrared light. This is the main function of the MAX30100: it reads the absorption levels for both light sources and stored them in a buffer that can be read via I2C.\n\nConnection:\n![](https://how2electronics.com/wp-content/uploads/2020/03/ESP32-MAX30100-Connection.jpg)\nThe MAX30100 has I2C Pins. So connect its SDA pin to D21 &amp; SCL pin to D22 of ESP32 Board. The power supply required by MAX30100 is 5V. So connect its VCC terminal to 5V of Arduino nano.\n\nCode:\n\n[Click here][10] for the arduino sketch.\n\nUpload the code to Esp32 and open the serial monitor.\n\nImages:\n\n![](https://drive.google.com/uc?export=view&amp;id=1sxnaRs0ZReGXZEZHLDMDLjS9To5CxXPs)\n![](https://drive.google.com/uc?export=view&amp;id=1sxkTZHxy2MXXLSdsSon95b4bB25lQxnE)\n![](https://drive.google.com/uc?export=view&amp;id=1suo7Vgk-nOy4ylB3SqIQfHvtEmJea9OJ)\n\nVideo:\n\n1. [Sensor Video][11]\n2. [Sensor Video][12]\n\n[1]: https://drive.google.com/file/d/1o3hDRrvf1xPrs3CLDB_dCXW002f7FNa-/view?usp=share_link \"Esp32 cam server\"\n[2]: https://drive.google.com/file/d/1i1KebZbT2yXHESP7BTsUvaca7aLFbdcI/view?usp=share_link \"Arduino Code\"\n[3]:https://drive.google.com/file/d/1mNXSExdHxEMLLZYawy7RBVDv5oKWZd4r/view?usp=share_link \"Morse code video\"\n[4]: https://drive.google.com/file/d/1mQBHeKgi6-p2KjuhzFnQ0Pg0wE_gkAN8/view?usp=share_link \"Morse code video\"\n[5]: https://drive.google.com/file/d/1M1wLK_Z4KDBEnlDPYfk0DoS-M9s0Z32D/view?usp=share_link \"Morse code code\"\n[6]: https://drive.google.com/file/d/1mRcg8S7MOPvj2II6YTmKbR7B0VsJm1Qw/view?usp=share_link \"ESP32 as a webserver\"\n[7]: https://drive.google.com/file/d/1hU7bz7sIG3Imfcpt4HspkKYTu8x6Y3wZ/view?usp=share_link \"Soil moisture sensor code\"\n[8]: https://drive.google.com/file/d/1mN8s0GZ805Uta77bG9gFEJRYXIUc0n3o/view?usp=share_link \"Soil Moisture sensor video\"\n[9]: https://drive.google.com/file/d/1mKNo28b8bCff9qX8QMs9SYPHNGAmU2Cj/view?usp=share_link \"Soil moisture sensor video\"\n[10]: https://drive.google.com/file/d/1XkGhVviGaogT8zj0BAKGC9n11qDYPaiK/view?usp=share_link \"HeartBeat arduino sketch\"\n[11]: https://drive.google.com/file/d/1mZSfN8AaVomOayHBtP7q1GBzJ_DLwyp6/view?usp=share_link \"Sensor Video\"\n[12]: https://drive.google.com/file/d/1snUgeqOv76lCeWUN6v0j9zznTubjHhI3/view?usp=share_link \"Sensor Video\"","tags":[],"reviewStatus":"PENDING","feedback":"","rankingScore":1,"createdAt":"2023-02-06T06:39:01.770Z","updatedAt":"2023-02-06T09:17:06.924Z","slug":"an-intresting-title-part-2-deepak-panwar","__v":0},{"_id":"63e13610c630c137e959060e","authorId":"106308355386786384719","authorName":"Prajwal G","authorSlug":"prajwal-g","authorImage":"https://lh3.googleusercontent.com/a-/AFdZucq1KCIaJzus9SFWEjVv4izbkD-tME2-OqiuQKcp=s96-c","level":1,"courseCode":"EV-RE-001","domain":"EV-RE","title":"EV&RV Level 1 Project Report","content":"### **Task 1 : LTspice and KiCad**\n\nA........LTspice is a freeware computer software that implements a SPICE electronic circuit simulator, allowing users to design and simulate electronic circuits. In this experiment, an astable multivibrator using 555 timer was designed and simulated using LTspice. The 555 timer was configured as an astable multivibrator by connecting resistors and capacitors to its pins as specified in the datasheet. The simulation was then run and the output waveform was observed, showing the expected square wave oscillations. This experiment demonstrated the ability of LTspice to accurately simulate electronic circuits, making it a valuable tool for circuit design and analysis.\n\nB........KiCad is a powerful and user-friendly open-source software suite for electronic design automation (EDA). It enables users to design and simulate electronic hardware, as well as to create various manufacturing files. In KiCad, users can make use of an integrated environment for schematic capture, PCB layout, and SPICE simulation, all in one package. For the experiment, I used KiCad to design a simple LED blinking circuit. I was able to easily capture the schematic using the software's user-friendly interface and then proceed to layout the circuit on a PCB. I also utilized the SPICE simulation tool to ensure that the circuit would function as expected. Overall, KiCad proved to be a valuable resource in the design and simulation process of a simple LED blinking circuit.\n\n\n\nhttps://github.com/prajwal-006/Level-1-Task-1-LTspice-and-KiCad\n\n\n### **Task 2 : Speed control of DC motor**\n\nThe experiment was conducted to learn about the dual H-Bridge L293D motor driver and its ability to control the speed of a DC motor. A DC motor was connected to the L293D motor driver and the speed was controlled using pulse width modulation (PWM). The experiment showed that the L293D motor driver was capable of controlling the speed of the DC motor shaft effectively. The results confirmed that the PWM method provided a precise way to control the speed of the motor. The experiment was successful in demonstrating the use of the L293D motor driver to control the speed of a DC motor and provided valuable insights into the functionality of the device.\n\nhttps://github.com/prajwal-006/Task-2-Speed-control-of-DC-motor\n\n### **Task 3 : Direction Control of a Motor**\n\nThe experiment aimed to learn the parts and steps involved in controlling the speed and direction of a DC motor using a dual H-Bridge L 293D motor driver with Arduino. The components used were an Arduino board, L 293D motor driver, DC motor, and power supply. The steps involved connecting the DC motor to the L 293D motor driver, connecting the driver to the Arduino board, writing a code to control the speed and direction of the motor using PWM, and finally, uploading the code to the Arduino board. The experiment showed that the L 293D motor driver, when used with the Arduino board, can effectively control the speed and direction of a DC motor. The results of the experiment provided a hands-on experience in controlling the speed and direction of a DC motor and demonstrated the effectiveness of the L 293D motor driver and the Arduino in motor control applications.\n\nhttps://github.com/prajwal-006/level-1-Task-3-Direction-Control-of-a-Motor\n\n### **Task 4 : Point Turn of a Vehicle**\n\nIn this experiment, the goal was to achieve a point turn of a vehicle. This task required the integration of knowledge accumulated from previous experiments, such as understanding of vehicle dynamics and control systems. A point turn involves the vehicle moving in a circular path with a small radius, with the front wheels turning in opposite direction to the rear wheels. To perform this maneuver, the vehicle's speed was controlled, and the steering angle was adjusted accordingly using feedback from sensors such as the wheel encoders and the yaw rate sensor. The turn radius was also monitored, and adjustments were made to maintain the desired path. The experiment was successfully completed with the vehicle completing a smooth point turn, demonstrating the ability to effectively use the knowledge accumulated from previous tasks in a new, more complex scenario.\n\nhttps://github.com/prajwal-006/Level-1-Task-4-Point-Turn-of-a-Vehicle\n\n### **Task 5 : Ultrasonic Sensor**\n\nThe HC-SR04 Ultrasonic Distance Sensor is a effective tool in creating an obstacle avoiding vehicle. The sensor works by emitting a high frequency sound and measuring the time it takes for the sound to bounce back, which then calculates the distance of the object. This information is then processed by the microcontroller and used to control the movement of the vehicle. In the experiment, the HC-SR04 Ultrasonic Distance Sensor was connected to an Arduino board and programmed to control the movement of a small motorized vehicle. The vehicle was designed to navigate around objects in its path by using the sensor readings to determine the distance to an obstacle and adjust its direction accordingly. The experiment was successful in demonstrating the capabilities of the HC-SR04 Ultrasonic Distance Sensor in creating an obstacle avoiding vehicle.\n\nhttps://github.com/prajwal-006/Level-1-Task-5-Ultrasonic-Sensor\n\n### **Task 6 : Temperature Detection**\n\nThe LM35 temperature sensor is a widely used device for measuring temperature. In the experiment, an LM35 temperature sensor was connected to an Arduino board and used to measure the temperature around a soldering gun tip. The temperature readings were taken at intervals of 5 seconds and displayed on the serial monitor. The goal was to determine the temperature of the air around the soldering gun tip without making physical contact. The experiment also aimed to turn a LED on using a bipolar junction transistor (BJT) as a switch when the temperature crossed a certain threshold. The results showed that the LM35 temperature sensor was able to accurately measure the temperature of the air around the soldering gun tip, with the readings displayed on the serial monitor in real-time. The LED was also successfully triggered when the temperature crossed the set threshold, providing a visual indication of the temperature change. The experiment demonstrated the effectiveness of using an LM35 temperature sensor and an Arduino board for temperature monitoring and control applications.\n\nhttps://github.com/prajwal-006/Level-1-Task-6-Temperature-Detection\n\n### **Task 7 : Temperature and Humidity Detection**\nThe DHT11 is a basic, low-cost digital temperature and humidity sensor that was used in an experiment to measure and display temperature and humidity readings on a LCD display. The DHT11 sensor works by utilizing a capacitive humidity sensing element and a thermistor to measure the surrounding air and determine the relative humidity and temperature. The readings were then displayed on a LCD display, allowing for easy and convenient monitoring of the temperature and humidity levels. The experiment was successful in demonstrating the functionality of the DHT11 sensor and its ability to accurately measure and display temperature and humidity readings. The use of the LCD display made the readings easy to interpret and understand, making it a useful tool for various applications where temperature and humidity monitoring is required.\n\nhttps://github.com/prajwal-006/Level-1-Task-7-Temperature-and-Humidity-Detection\n\n\n### **Task 8 : BLDC Motor And Hall Effect Sensor**\n\nThe experiment was conducted to measure the speed of a Brushless DC (BLDC) motor using a Hall effect sensor and display it on the serial monitor. The Hall effect sensor was used to detect the position of the rotor and determine the speed of the BLDC motor. The readings were then transmitted to a microcontroller and displayed on the serial monitor. The experiment was successful in demonstrating the ability of the Hall effect sensor to accurately measure the speed of the BLDC motor and the functionality of the microcontroller in displaying the readings on the serial monitor. The results showed that the Hall effect sensor was able to detect the position of the rotor and determine the speed of the BLDC motor with high accuracy. The display on the serial monitor allowed for easy monitoring and analysis of the motor's speed. This experiment highlights the importance of precise speed measurement in the design and optimization of BLDC motor systems.\n\nhttps://github.com/prajwal-006/Level-1-Task-8-BLDC-Motor-And-Hall-Effect-Sensor\n\n### **Task 9 : Battery Capacity Measurement**\n\nThe experiment aimed to construct a battery undercharge monitor for a Li-ion battery connected to a load. The monitor was designed to measure the voltage of the battery and cut off the current to the load in case of undercharge, to protect the battery from damage. A MOSFET was used as a switch to cut off the current in case the voltage dropped below the desired threshold. In addition to undercharge protection, the monitor was also designed to provide overcharge protection and current protection. The experiment involved connecting the Li-ion battery to a load and monitoring the voltage using a microcontroller and a voltage sensor. The microcontroller was programmed to monitor the voltage and cut off the current to the load using the MOSFET switch in case of undercharge or overcharge. The results showed that the battery undercharge monitor was able to accurately monitor the voltage of the Li-ion battery and cut off the current to the load in case of undercharge, providing effective protection for the battery. The addition of overcharge and current protection further enhanced the functionality of the monitor and made it a useful tool for ensuring the safe and efficient use of Li-ion batteries in various applications.\n\nhttps://github.com/prajwal-006/Level-1-Task-9-Battery-Capacity-Measurement\n\n### **Task 10 : Battery Charging**\n\nThe experiment aimed to explore the capability of charging a Li-ion battery using solar panels. Li-ion batteries are widely used due to their high energy density and long cycle life. The experiment set up involved connecting solar panels to a Li-ion battery through a charge controller, which regulated the flow of current from the solar panels to the battery. The results indicated that the solar panels were able to efficiently charge the Li-ion battery, and the charge controller protected the battery from overcharging and other potential hazards. The experiment concluded that using solar panels to charge a Li-ion battery is a practical and eco-friendly solution, particularly in remote locations with limited access to grid electricity. The findings of this experiment underline the significance of renewable energy sources such as solar power in fulfilling energy needs in a sustainable manner.\n\nhttps://github.com/prajwal-006/Level-1-Task-10-Battery-Charging\n\n### **Task 11 : Understanding 555 Timer And LDR**\n\nThe experiment aimed to construct an automated headlight setup using an NE555 timer IC and a Light Dependent Resistor (LDR). The NE555 timer IC was used to control the switching of the headlight, while the LDR was used to detect ambient light levels and trigger the headlight when necessary. The LDR's resistance decreases in response to increased ambient light levels, which was used to trigger the NE555 timer and turn on the headlight. The experiment was successful in demonstrating the functionality of the automated headlight setup, with the LDR accurately detecting changes in ambient light levels and the NE555 timer effectively controlling the switching of the headlight. The results showed that the automated headlight setup was able to turn on and off the headlight in response to changes in ambient light levels, providing a convenient and energy-efficient solution for automotive lighting. The experiment highlights the potential of combining simple electronic components, such as the NE555 timer and LDR, to create functional and practical systems.\n\nhttps://github.com/prajwal-006/Level-1-Task-11-Understanding-555-Timer-And-LDR\n\n### **Task 12 : Solar Panel**\n\nThe experiment aimed to construct a simple solar panel setup using diodes. Solar panels convert sunlight into electrical energy, but they also generate electricity when there is no light, which can lead to reverse current and battery discharge. To prevent this, diodes were used in the experiment as a protective element. The experiment involved connecting the solar panel to a battery through diodes, which allowed the flow of current from the solar panel to the battery only in one direction. The results showed that the use of diodes effectively prevented the reverse flow of current from the battery to the solar panel when there was no light, ensuring that the battery was not discharged. The experiment demonstrated the importance of using diodes in a solar panel setup to protect the battery and optimize the performance of the system. This simple and low-cost solution provides a valuable alternative for individuals and communities seeking to harness renewable energy.\n\nhttps://github.com/prajwal-006/Level-1-Task-12-Solar-Panel\n\n### **Task 13 : Solar Tracker**\n\nThe experiment aimed to design and implement a system that uses a servo motor to control the orientation of a solar panel, maximizing the energy absorbed by the panel by following the sun's movement. The servo motor was connected to the solar panel and was programmed to track the sun's position throughout the day. The system utilized sensors to detect the sun's position and used this information to control the servo motor, adjusting the orientation of the solar panel to face the sun directly. The results of the experiment showed that the servo-controlled solar panel was able to effectively track the sun's movement and increased the amount of energy absorbed by the panel, compared to a fixed panel. This demonstrated the potential for servo-controlled solar panels to improve the efficiency of solar energy systems, by ensuring that the panel is always oriented towards the sun, maximizing the energy absorbed. The experiment highlights the importance of accurately tracking the sun's position for optimizing the performance of solar energy systems.\n\nhttps://github.com/prajwal-006/Level-1-Task-13-Solar-Tracker","tags":[],"reviewStatus":"PENDING","feedback":"","rankingScore":1,"createdAt":"2023-02-06T17:17:04.160Z","updatedAt":"2023-02-07T10:41:10.115Z","slug":"ev-and-rv-level-1-project-report-prajwal-g","__v":0},{"_id":"63e146ffc630c137e95906af","authorId":"117268979319917549320","authorName":"Vinay Basavaraddi","authorSlug":"vinay-basavaraddi","authorImage":"https://lh3.googleusercontent.com/a-/AFdZucpaXhCJNxGcF-DVJjc3903_MODO1UV61ayhZtnRZA=s96-c","level":1,"courseCode":"CL-CY-001","domain":"CL-CY","title":"LEVEL 1 LEADS","content":"**Project Drive Link:** https://drive.google.com/drive/folders/1UBwOZAZ7VO3ARsjCdBVevDHtPzg8Mm_L?usp=sharing\n\n### Task 1: Page to calculate and publish marks of students\nA webpage that takes input of 10 students that publishes the *rank list*, calculates *respective percentages* and the *class average*. This is made using concepts of **JavaScript** with usual **HTML** and **CSS** scripts.\n\n*Link to git repository:* https://github.com/v1n6y/Marvel/tree/Task-1\n\n### Task 2: Food recipe website\nA *callback-based* program that displays the steps of a food recipe in a chronological order using **asynchronous JavaScript** with usual **HTML** and **CSS** scripts.\n\n*Link to git repository:* https://github.com/v1n6y/Marvel/tree/Task-2\n\n### Task 3: Updated food recipe website\nAn recipe program with implemented *promises* that displays the steps of a food recipe in using **asynchronous JavaScript** with usual **HTML** and **CSS** scripts.\nPotential benefits of using *promises* in the program include \n1. Simplified and more readable code format\n2. Better error handling within\n3. Improved performance of the code\n\n*Link to git repository:* https://github.com/v1n6y/Marvel/tree/Task-3\n\n### Task 4: Getting familiarized with Linux command line interface\nTo get a good grip over the **Linux command line** and to complete the given subtasks on it.\n\n*Link to git repository:* https://github.com/v1n6y/Marvel/tree/Task-4\n\n### Task 5: Getting familiarized with Vi Text Editor\n**Vi** is a powerful *text editor* and has many other commands and features that can be used to customize and format the markdown file. Can learn more about vi by using the **:help** command within the editor or by reading its manual online.\n\n*Link to git repository:* https://github.com/v1n6y/Marvel/tree/Task-5\n\n### Task 6: Regex and piping implementation\nUsing '**grep**' concept to extract login times within a date/time range from the login logs. And later with '**piping**' concept putting this information into a text file and further into a folder named logs. Finally zipping this folder using gzip and tar.\n\n*Link to git repository:* https://github.com/v1n6y/Marvel/tree/Task-6","tags":["linux","JavaScript","Text Editor","Terminal","CLI"],"reviewStatus":"PENDING","feedback":"","rankingScore":1,"createdAt":"2023-02-06T18:29:19.829Z","updatedAt":"2023-02-07T18:54:45.604Z","slug":"level-1-leads-vinay-basavaraddi","__v":2},{"_id":"63e1470dc630c137e95906b8","authorId":"106699868170952763516","authorName":"mohammed hamza","authorSlug":"mohammed-hamza","authorImage":"https://lh3.googleusercontent.com/a-/AOh14Gjg-gYDlGqhkeYDF1C3zXXFWs3FjpAMy_cXygB5=s96-c","level":1,"courseCode":"EV-RE-001","domain":"EV-RE","title":"Marvel LE","content":"#LEVEL -1 EV-RE Report\n\n\n##Task 1: Understanding LTspice and KiCad\nLTspice is a powerful, fast, and free SPICE simulator software, schematic capture and waveform viewer with enhancements and models for improving the simulation of analog circuits.LTspice has been used for Design and simulate a astable multivibrator using 555 timer\nKiCad is a free software suite for electronic design and simulation of electronic hardware.KiCad was used to make simple led blinking circuit.\n\n\n##Task 2: DC motor speed control using Arduino\nThe speed of a DC motor can be controlled using the PWM functionality available on microcontrollers such as the Arduino. Manual input to control the speed is done using a potentiometer on the microcontroller board. The microcontroller then provides  PWM signal to the motor driver, which in turn drives the DC motor at the required speed.\n\n##Task 3: DC motor direction control using Arduino\nThe direction of a DC motor can be controlled using a microcontroller such as an Arduino. Manual input to control direction is via a potentiometer on the microcontroller board. The microcontroller sends the appropriate signal to the input pin of the motor he driver. A motor driver drives a DC motor in the desired direction.\n\n##Task 4: Point turn of a vehicle\nAn object undergoes a point rotation when it rotates around an axis that passes through the center of the object. The vehicle makes a point turn when the wheels on one side turn in one direction and the wheels on the other side turn in the opposite direction as shown. The direction of rotation of the vehicle depends on the direction of rotation of the wheels.\nA microcontroller like an Arduino can be used to send the appropriate signals to a motor driver like his L298N. The L298N drives each motor in the desired direction.A microcontroller such as arduino can be used to send appropriate signals to a motor driver such as a L298N which in turn drives the respective motors in desired direction.\n\n##Task 5: Obstacle avoiding vehicle\nUltrasonic sensors can be used to detect the presence of objects around the vehicle .It works on the principle of ultrasonic sound and echo .It send a signal whenever they are present. A microcontroller like an Arduino can use these signals to control the vehicle and avoid collisions with nearby objects. Here we use such sensors to detect obstacles in front of the vehicle and use the Arduino Uno with the feed back of the ultrasonic sensors changes the course of the vehicle to avoid colliding with the obstacles.\n\n##Task 6: Measure temperature using an lm35 temperature sensor \nLM35 is a temperature measuring device having an analog output voltage proportional to the temperature.It provides output voltage in Centigrade (Celsius). It does not require any external calibration circuitry.It can measure temperature in the range of -55°C to 150°C.LM35 output is given to arduino in the form of analog voltage through analog pin.Which is converted to its digital form and processed to get temperature reading.\n\n##Task 7: Temperature and Humidity Detection with DHT11\nDHT11 sensor measures and provides humidity and temperature values serially over a single wire.It can measure relative humidity in percentage (20 to 90% RH) and temperature in degree Celsius in the range of 0 to 50°C.It has 4 pins; one of which is used for data communication in serial form.Which processed using the DHT11 library and giving out put on lcd.\n\n##Task 8: Hall Effect Sensor\nMeasuring the speed of a BLDC motor using a hall effect sensor and display it on the serial monitor.Bldc stands for brush less DC Motor.The RPM of the Bldc motor can be known by constructing a tachometer from a hall effect sensor\n\n##Task 12: Solar cell with zener diode\nThe Voltage difference can be observed between a diode when there is incident light on the diode.This due to poperty of zener diode which is heavily dope\n\n##Videos of all executed tasks in the given drive\nhttps://drive.google.com/drive/folders/1_hfY-i7kFXkGMgwxR50iyIsbOL7A4w6b?usp=sharing \n\n##Individual Reports are in the given drive\nhttps://drive.google.com/drive/folders/1zK1G8TwYyJYpwKYqrWnS7dgHiBMtyHDa?usp=sharing\n\n","tags":[],"reviewStatus":"PENDING","feedback":"","rankingScore":1,"createdAt":"2023-02-06T18:29:33.656Z","updatedAt":"2023-02-06T18:29:33.656Z","slug":"marvel-le-mohammed-hamza","__v":0},{"_id":"63e21608c630c137e959084a","authorId":"117751499077038425046","authorName":"Bhavya Jonnagadla","authorSlug":"bhavya-jonnagadla","authorImage":"https://lh3.googleusercontent.com/a/ALm5wu1maZTDMTuWl0jsOn-TLdmcha-U0A1PhlwUqMPV=s96-c","level":1,"courseCode":"CL-CY-001","domain":"CL-CY","title":"Task1","content":"TASK1\n\nhttps://github.com/jbhavyapriya/marveltask1\n\nTASK 2\nhttps://github.com/jbhavyapriya/marveltask2\n\nTASK 3\nhttps://github.com/jbhavyapriya/marveltask3\n\nTASK 4\nhttps://github.com/jbhavyapriya/marveltask4\n\nTASK 5\nhttps://github.com/jbhavyapriya/marveltask5\n\nTASK 6\nhttps://github.com/jbhavyapriya/marveltask6","tags":[],"reviewStatus":"PENDING","feedback":"","rankingScore":1,"createdAt":"2023-02-07T09:12:40.027Z","updatedAt":"2023-02-07T17:41:08.500Z","slug":"task1-bhavya-jonnagadla","__v":0},{"_id":"63e25ca4c630c137e959098a","authorId":"105273707812534403739","authorName":"Vikas V 0330","authorSlug":"vikas-v-0330","authorImage":"https://lh3.googleusercontent.com/a/ALm5wu2ZEDOd6xCab3eaUQwtC-ZG88c1zeUGrxvMzyEf=s96-c","level":1,"courseCode":"AI-ML-001","domain":"AI-ML","title":"Project report AIML","content":"Date 17/8/2022\nMy name is Vikas, student at Marvel, and today with all buzz I have started learning at MARVEL UVCE officially.\n\nI am given a domain of AIML, and yes that’s what I had opted for! Here at marvel, we have levels to climb consisting of many tasks. Today I thought off of starting with level 1,but no sooner I visited the website, I realized there are some introduction concepts to study before getting on levels. Hence I started the first intro concept i.e. Statistics in AIML.\n\n\nStatistics is all about collecting data, analyzing it and presenting it in an interpretable way. Its of two types: Descriptive and Inferential. Descriptive is all about summarizing data and presenting it using bar graphs, pie charts etc. Mean ,Median, Mode, Standard Variance etc are used in this type. Inferential statistics is about considering sample data and drawing conclusions about it. Concept of Probability is used here.\n\n\nWhy should u learn Statistics for ML?\nSay, you have developed a product, Statistics tells you what features are important in your product.\nIt tells about the minimal performance required and how you can design strategy for your product.\nIt also tells the most common and expected outcome of your product.\nSo Statistics is a tool for you to be on a safer side.\n\n\n\n\n### **Task 1**\nThe data is imported as a pandas dataframe, then we add the house prices to it. This will allow us to manipulate this data mathematically by using inbuilt methods in pandas which is called data cleaning.\nWe will start with importing basic modules such as numpy, pandas and matplotlib. We put the data into a data frame which behaves like an 2D array in C, using Pandas. With data frames we can manipulate the data mathematically by using inbuilt methods in pandas which is called data cleaning.\nWe will use a set of data that helps us understand the relationship between variables. We import numpy to convert the data from Pandas into a 2D array. Then we can manipulate the data mathematically by adding columns and slicing it in different ways with pd.DataFrame().\nLinear Regression is a supervised learning algorithm, which means that it works on a set of labeled examples. Before we look at how to use linear regression in Python, let's first learn about the concepts we need to understand before using the appropriate methods.\n\n\n\n\n### **Task2**\nIn this project we are going to learn Logistic Regression. Logistic regression is modelling the probability of a discrete outcome given an input variable. It says whether something is true or false. The prediction logistic regression is categorical because it will have different classes in iris dataset present in iris.target, and different features based on which they are divided are present in iris.feature_names\nLogistic regression is used to predict the probability of a discrete outcome given an input variable. In this project, our goal is to optimize the performance of logistic regression by minimizing bias and variance. This can be done by finding out the model with best results on training set subset, while also performing cross validation on testing set.\n\n### **Task 3**\n Some of the plot which are plotted using matplotlib.pyplot and seaborn are shown here,\n1.Ball and Bubble plot\n2.Bar plot\n3.pie plot\n4.Violin plot\n5.3D plot\nhttps://docs.google.com/document/d/1za9gWpeQ2ql8xdKhaZZbglouYXZD80MK/edit\n\n\n\n\n### **Task 4.**\nLinear regression is a commonly used statistical method that allows us to model the relationship between a dependent variable and one or multiple independent variables. In this report, we will discuss how to implement linear regression from scratch using example images.\n\nStep 1: Preparation of data\nWe will use example images in the form of arrays, where each image is represented as a two-dimensional array with rows and columns representing pixels. The dependent variable will be the label associated with each image, and the independent variables will be the pixel values. We will divide the data into a training set and a testing set.\n\nStep 2: Initialization\nWe need to initialize the weights and biases of our linear regression model. These values will be updated during the training process to minimize the loss function.\n\nStep 3: Training\nThe training process involves iterating over the training data and updating the weights and biases to minimize the loss function. We will use mean squared error as the loss function, which measures the difference between the predicted output and the actual label. The gradient descent algorithm can be used to update the weights and biases in the direction of the minimum loss.\n\nStep 4: Testing\nOnce the training process is completed, we can evaluate the performance of the model on the testing data. We will calculate the mean squared error on the test data and use it as a measure of how well the model has learned the relationship between the pixel values and the labels.\n\nStep 5: Deployment\nFinally, we can deploy the model in a real-world scenario by using it to predict the label of new images based on their pixel values.\n\nIn conclusion, implementing linear regression from scratch with example images requires a few simple steps: preparation of data, initialization, training, testing, and deployment. The trained model can be used to make predictions on new data and is a powerful tool for solving real-world problems\n\n\n\n### **Task 5**\nProject Report: Regression Metrics and Classification Algorithms\n\nIntroduction:\nRegression and classification are two important areas of machine learning that deal with predicting continuous and categorical values respectively. In this project, we will explore different regression metrics and classification algorithms and evaluate their performance on a sample dataset.\n\nDataset:\nWe will use the Iris dataset, which contains information about the sepal length, sepal width, petal length, and petal width of 150 Iris flowers. The dataset is divided into three classes based on the species of the flower.\n\nRegression Metrics:\nIn regression problems, we need to evaluate the performance of the model by comparing the predicted values to the actual values. The following regression metrics will be used in this project:\n\nMean Absolute Error (MAE) - measures the average magnitude of the errors in a set of predictions.\n\nMean Squared Error (MSE) - measures the average of the squares of the errors in a set of predictions.\n\nRoot Mean Squared Error (RMSE) - the square root of the MSE.\n\nEvaluation:\nThe performance of each algorithm will be evaluated based on the accuracy of the predictions on the test data. The accuracy is defined as the proportion of correct predictions in the test data.\n\n\n\n\n### **Task 6**\nThe k-Nearest Neighbor (k-NN) algorithm is a popular and simple machine learning algorithm used for classification and regression problems. It is a non-parametric algorithm that makes predictions based on the majority of the k-nearest data points to a given sample.\n\nWorking of k-NN:\nThe k-NN algorithm operates on the principle of instance-based learning. It uses a distance metric, such as Euclidean distance, to calculate the similarity between a given sample and the data points in the training set. The k-nearest data points to the sample are selected, and their class labels are used to make a prediction.\n\nIn classification problems, the majority vote of the k-nearest data points is used to predict the class label of a sample. In regression problems, the average of the k-nearest data points is used to make a prediction.\n\nSelection of k:\nThe choice of k is a crucial factor in the k-NN algorithm as it affects the performance of the algorithm. A small value of k results in a high variance model, which is sensitive to noise in the data. A large value of k results in a high bias model, which may miss important patterns in the data.\n\nExample:\nLet's consider a binary classification problem, where we need to classify a given data point as either class 0 or class 1. The k-NN algorithm is applied to a sample data set with two features, x1 and x2, as follows:\n\nThe sample data set is split into a training set and a test set.\n\nThe k-NN algorithm is trained on the training set and k is set to 3.\n\nThe k-NN algorithm is used to make predictions on the test set by finding the 3 nearest data points in the training set and taking the majority vote of their class labels.\n\nThe accuracy of the predictions is evaluated and compared to other algorithms.\n\nConclusion:\nThe k-NN algorithm is a simple and effective algorithm that can be used for both classification and regression problems. Its performance depends on the choice of k and the distance metric used. In practice, the k-NN algorithm is often used in combination with other algorithms for improved performance\n\n","tags":[],"reviewStatus":"PENDING","feedback":"","rankingScore":1,"createdAt":"2023-02-07T14:13:56.197Z","updatedAt":"2023-02-07T14:59:13.742Z","slug":"project-report-aiml-vikas-v-0330","__v":0},{"_id":"63e27989c630c137e9590a6b","authorId":"106650024370826124534","authorName":"Liyana Zuhur","authorSlug":"liyana-zuhur","authorImage":"https://lh3.googleusercontent.com/a/AItbvmknZHv3e6A7xo18iSG07KLzB9q6m-CahNEsJwS2ZQ=s96-c","level":1,"courseCode":"AI-ML-001","domain":"AI-ML","title":"Level 1 Project Report","content":"## Linear and Logistic Regression - HelloWorld for AIML\nLinear Regression is an ML algorithm that determines the relationship between dependent and independent variables and then goes on to use this relationship to make target predictions.\n<br />On the other hand, Logistic Regression is a classification algorithm that models the probability of an event by plotting the logarithmic sigmoid of a linear combination of independent variables.\nBoth of these are implemented using existing libraries such as **NumPy**, **Pandas**, **Scikit-learn** and **Matplotlib**\n\nTask (1a) - [Predict the price of a home, based on multiple different variables. Use sci-kit’s linear_model.LinearRegression()](https://github.com/liyana-27/Marvel_Tasks/blob/main/task1.md)\n\nTask (1b) - [Train a model to distinguish between different species of the Iris flower based on sepal length, sepal width, petal length, and petal width.\nUse sci-kit’s linear_model.LogisticRegression()](https://github.com/liyana-27/Marvel_Tasks/blob/main/task1.md)\n\n## Data Visualization\nMatplotlib is one the most common Python libraries and is used for data visualization purposes. Different kinds of plots like bar graphs, scatter plots, etc. can be plotted using this library. It works as an extension of NumPy as provides an API for embedding the plots into applications, making it extremely convenient.\n\nTask (2) - [Using matplotlib and diff kinds of plots. (Bar, scatter, Time Series and Histogram).](https://github.com/liyana-27/Marvel_Tasks/blob/main/task2.md)\n\n## NumPy\nNumPy is another such important library. Python doesn't support arrays by itself which is where NumPy comes to the rescue. This library supports large arrays and matrices and also provides a large collection of mathematical operations\n\nTask (3) - [Using Numpy Generate an array by repeating a small array across each dimension and Generate an array with element indexes such that the array elements appear in ascending order.](https://github.com/liyana-27/Marvel_Tasks/blob/main/task3.md)\n\n## Metrics and Performance Evaluation\nOne of the most important aspects of a machine learning algorithm/model is the metrics that calculate some form of accuracy and performance evaluation so that necessary changes can be made to improve the model. \n\nTask (4) - [Regression Metrics - used to evaluate performance of regression algorithms and Classification Metrics - used to evaluate performance of classification algorithms.](https://github.com/liyana-27/Marvel_Tasks/blob/main/task4.md)\n\n## Linear and Logistic Regression - Coding the model from SCRATCH\nKnowing what the models do and how they function, we now learn how to code it form scratch by implementing two main concepts - the cost function and the gradient descent. Here, the cost function is the difference between actual and predicted values for the whole of the training data whereas the gradient is calculated by taking partial derivative of the cost function. \n\nTask (5) - [Coding the regression models from scratch](https://github.com/liyana-27/Marvel_Tasks/blob/main/task5.md)\n\n## K- Nearest Neighbor Algorithm\nKNN is a supervised learning classification algorithm that makes use of proximity of all other points in order to make a prediction. The premise on which it works is that the data points close to each other have similar values.\nIt can be implemented using sci-kit's existing model or built from scratch making use of what is known as the Euclidean distance function\n\nTask (6) - [Implementing KNN using sci-kit and from scratch](https://github.com/liyana-27/Marvel_Tasks/blob/main/task6.md)","tags":[],"reviewStatus":"PENDING","feedback":"","rankingScore":1,"createdAt":"2023-02-07T16:17:13.135Z","updatedAt":"2023-02-07T16:18:33.313Z","slug":"level-1-project-report-liyana-zuhur","__v":0},{"_id":"63e28ce1c630c137e9590ad4","authorId":"105071756002333883338","authorName":"Ganga Lokesh V","authorSlug":"ganga-lokesh-v","authorImage":"https://lh3.googleusercontent.com/a/AItbvmk21jocSs60Nas-_Oa_2-goZq08Pw2ZY-TjxsC0=s96-c","level":1,"courseCode":"EV-RE-001","domain":"EV-RE","title":"Marvel Level 1 Report","content":"![](https://scx2.b-cdn.net/gfx/news/2020/couldschrdin.jpg)\n\n#Batch 2 Level 1 in EV &amp; RE\n####*Ganga Lokesh V*\n\n### LTspice &amp; Kicad\n\nLTspice and KiCad are two popular software tools used in electronics design.\nLTspice is a simulation software for analog circuits, which allows engineers to model and analyze the behavior of circuits before building them. It has a large library of components and models, and supports SPICE simulation.\nKiCad is an open-source software suite for electronic design automation (EDA). It includes a schematic editor, PCB layout editor, 3D visualization tools, and more. KiCad is widely used for designing PCBs, from schematic capture to board-level design, and provides a comprehensive set of tools for electronics engineers.\nBoth LTspice and KiCad are commonly used in the electronics industry, and both have their own strengths and weaknesses. LTspice is best suited for simulation of analog circuits, while KiCad is more comprehensive and covers a wider range of design tasks, including schematic capture and PCB layout.\n\n\n### Speed control of a DC motor\n\nSpeed control of a DC motor can be achieved by varying the voltage applied to the motor or by changing the amount of current in the armature circuit. Two common methods for controlling the speed of a DC motor are:\n- PWM (Pulse Width Modulation): This method involves rapidly switching the voltage applied to the motor on and off, thus controlling the average voltage applied to the motor and hence its speed.\n- Armature Resistance Control: This method involves changing the resistance in the armature circuit, which in turn changes the amount of current flowing through the circuit and hence the speed of the motor.\nBoth of these methods require the use of electronic circuitry, typically in the form of an electronic controller, to implement the speed control.\n\n\n### Direction control of a DC motor\n\nThe direction of rotation of a DC motor can be controlled by reversing the polarity of the applied voltage. This can be achieved by using a switch to switch the connections of the motor's terminals. When the switch is in one position, the motor will rotate in one direction, and when it is switched to the other position, the motor will rotate in the opposite direction. Another common method for controlling the direction of a DC motor is to use a H-bridge circuit, which allows for electronic control of the voltage applied to the motor.\n\n\n### Point turn of a vehicle\n\nA point turn in a vehicle is a maneuver where the vehicle turns in place, usually within the length of its own wheelbase. \nStop the vehicle in a straight line position with equal distance from the center of the turning point.\nShift the transmission into reverse gear.\nTurn the steering wheel all the way to one direction.\nAccelerate gently in reverse gear while maintaining the direction of the steering wheel.\nOnce the vehicle has turned through a complete 180 degree rotation, shift the transmission back into drive gear and straighten the steering wheel.\nThe exact method to achieve a point turn may vary depending on the type of vehicle and its drive system.\n\n\n### Ultrasonic sensor\n\nThe HC-SR04 ultrasonic sensor is a low-cost device used for measuring distances or detecting objects. It uses ultrasound to determine the distance to an object by measuring the time it takes for a sound wave to travel to the object and back. The device is commonly used in robotics and other projects that require distance measurement. It consists of a transmitter and a receiver, and it operates by sending out an ultrasonic pulse and measuring the time it takes for the echo to return. The distance to the object can then be calculated using the speed of sound and the time taken for the echo to return.\n\n\n### Temperature detection\n\nThe LM35 is a commonly used analog temperature sensor that outputs a voltage proportional to the temperature in Celsius. It is easy to use and has a linear temperature-to-voltage conversion characteristic, making it suitable for a variety of temperature sensing applications. The sensor is precise, with a typical accuracy of ±1°C, and has a wide temperature range, from -55°C to 150°C. It is also relatively low-cost and widely available, making it a popular choice for hobby and educational projects.\n\n\n### Temperature &amp; humidity detection\n\nThe DHT11 sensor is a commonly used temperature and humidity sensor that provides accurate and reliable readings. It uses a capacitive humidity sensor and a thermistor to measure the ambient air temperature and relative humidity, respectively. The DHT11 has a low cost, low power consumption, and a simple serial interface for communication with a microcontroller. It can operate in a range of temperatures between 0°C to 50°C and relative humidity between 20% to 90%. This makes the DHT11 sensor ideal for a variety of applications, including HVAC control, weather monitoring, and indoor air quality control.\n\n\n### BLDC motor &amp; half hall effect\n\nA Brushless DC (BLDC) motor is a type of electric motor that uses direct current (DC) electricity to generate magnetic fields, which drive the motor's rotation. Unlike traditional brushed DC motors, BLDC motors do not have brushes that physically transfer electrical energy to the rotor. Instead, the current is sent through the stator windings to generate the magnetic fields that drive the rotor.\nA Hall Effect sensor is a transducer that varies its output voltage in response to a magnetic field. In a BLDC motor, Hall Effect sensors are used to detect the position of the rotor and provide feedback to the controller, allowing the controller to accurately control the current in the stator windings and thus the motor's rotation. By detecting the position of the rotor, the controller can determine the appropriate time to switch the current in the stator windings, resulting in smooth and efficient operation of the motor.\n\n\n### Battery capacity management\n\n- Connect the battery to a load resistor: Connect the positive terminal of the battery to one side of a load resistor and the negative terminal to the other side.\n- Connect the load resistor to the analog input of the Arduino: Connect the load resistor to the analog input of the Arduino and use a voltage divider circuit to measure the voltage across the load resistor.\n- Write code to measure the voltage: Use the Arduino's analogRead() function to measure the voltage and convert it to a battery level percentage.\n- Discharge the battery: Use a code loop to gradually discharge the battery by applying a load to it through the load resistor.\n- Store the discharge data: Use the Arduino's EEPROM to store the voltage readings at each discharge stage.\n- Calculate the capacity: Use the stored discharge data to calculate the capacity of the battery in milliampere-hours (mAh).\n\n\n### Battery charging\n\nTo charge a Li-ion battery using solar panels, you need to have a solar panel with the appropriate voltage and current output, a solar charge controller, and a battery charger.\nThe solar panel converts sunlight into electrical energy and provides it to the charge controller. The charge controller regulates the voltage and current from the solar panel and ensures it's within safe levels for the battery. The battery charger uses the regulated energy from the charge controller to charge the Li-ion battery.\n\n\n### Understanding 555 timer &amp; LDR or DLR\n\nThe 555 timer is a popular integrated circuit used in a variety of applications as a timer, flip-flop, oscillator, and amplifier. It gets its name from the three 5kΩ resistors used in its internal circuitry.\nDLR stands for \"dead time reload\", which is a term used in 555 timer circuits. Dead time is the interval during which no output is produced by the 555 timer, even if the input conditions are such that an output should be produced. The DLR feature allows the adjustment of the dead time period in 555 timer circuits.\n\n### Solar panel\n\nA solar panel is a device that converts sunlight into electricity. It consists of a collection of photovoltaic (PV) cells, which are made of semiconductor materials that generate a flow of electrons when exposed to light. These cells are connected in a series to form a module, which can be combined with other modules to create a solar panel. Solar panels are used to power homes, businesses, and public infrastructure and are an important component in the transition to renewable energy.\n\n\n### Solar tracker\n\nA solar tracker is a device used to orient photovoltaic panels or concentrating solar collectors towards the sun. This improves the efficiency of solar panels by increasing the amount of sunlight received, resulting in higher energy output. There are two main types of solar trackers: single-axis and dual-axis. Single-axis trackers move the panels along one axis, typically the horizontal, to follow the sun as it moves across the sky. Dual-axis trackers, on the other hand, move the panels along two axes, both horizontally and vertically, providing even greater tracking accuracy and efficiency. Solar trackers are commonly used in large commercial and utility-scale solar installations.\n\n\n\n#### Brief study about RE and EV\n \n![](https://www.rolls-roycemotorcars.com/content/dam/rrmc/marketUK/rollsroycemotorcars_com/2-1-1-103-ex/page-properties/rolls-royce-103ex-share-image.jpg)\n\n (A brief study about electric vehicles and renewable energy and its sources. And learning about the basic electrical components used in a circuit.) \n\n Level 1 : LTspice and Kicad\nReferring to resources provided\n\nLevel 2 : project 1\nIntroduction to Arduino and L298N chip\n\nProject 2: controlling of speed and direction of the DC motor\n\nFew points about potentiometer\n\nSpeed and direction control of the DC motor. \nHere we learn about how the speed of the motor is controlled using potentiometer and Arduino and the analog writing. \n\nAnd in the direction control of the motor, we use L298N motor drive and Arduino uno.\n\nDetection of distance of the object from the sensor by HC SR-04. And by using the same, we detect any obstacles in front of the sensor which avoids the movement of the vehicle created. And the components used in the manufacturing of the vehicle. \n\nLearning about temperature detection using LM35. We detect the temperature of the surrounding (air) around the tip of the soldering gun using Bipolar junction transistor. Using LM35 sensor has many advantages as it is very precise and never wears out. And also it is of low voltage. Here we need to have a basic idea about how a transistor works and the principle involved. In transistor, we have collector and base as types ( it can either be current or voltage). And the great advantage of transistor is, it can used as a regulator of voltage and current. By hooking up with Arduino, we can place this sensor without any problem.\n","tags":["level1report","ev&re"],"reviewStatus":"PENDING","feedback":"","rankingScore":1,"createdAt":"2023-02-07T17:39:45.081Z","updatedAt":"2023-02-07T18:25:20.574Z","slug":"marvel-level-1-report-ganga-lokesh-v","__v":0},{"_id":"63e28e50c630c137e9590b00","authorId":"117195121744424483017","authorName":"Sujay Vikram G S","authorSlug":"sujay-vikram-g-s","authorImage":"https://lh3.googleusercontent.com/a-/AOh14GitOGBEFqUYSplo02SK8pZkPe4DGcPySYSKZFip=s96-c","level":1,"courseCode":"CL-CY-001","domain":"CL-CY","title":"sujay's level 1 Project Report: Introduction to Cybersecurity/Cloud Computing  ","content":"&gt; The Level 1 task in the cybersecurity/cloud computing domain provided me with a comprehensive introduction to various topics including JavaScript, asynchronous programming, the command line, vi, regular expressions, and piping in Linux. I was able to understand the basics of these topics and implement them in small projects.\n\n&gt; These tasks helped me lay a strong foundation in these areas and equipped me with the skills and knowledge necessary to tackle more advanced topics in the future. It was an engaging and challenging task that broadened my horizons and helped me grow as a programmer. I am confident that the knowledge and experience I have gained will be valuable to me in my future endeavors in the field of cybersecurity and cloud computing.\n\n&gt; the tasks are explained briefly and mostly in layman terms\n\n\n![js logo](https://upload.wikimedia.org/wikipedia/commons/6/6a/JavaScript-logo.png)\n![js](https://miro.medium.com/v2/resize:fit:1400/format:webp/0*3TQeEjxgHFkdoEEA.png)\n\n### ***Task1: JavaScript Fundamentals***\nIn this task, I learned the basics of JavaScript and created a small webpage that takes the names and marks of ten students and calculates:\n- The percentage of each student\n- The class average\n- The rankings of the students\n\n\n\nThe following code demonstrates my understanding of basic JavaScript programming:\n\n<script src=\"https://gist.github.com/vodori6161/dad3566e7d90ab1b1ce76bf01827c1bc.js\"></script>\n\n### ***Task 2: Asynchronous JavaScript***\n\n&gt; ![](https://miro.medium.com/max/828/1*Y41dOkntUbR3I4UCJBx9Xg.webp)\n\nIn this task, I learned about asynchronous JavaScript and implemented a small callback-based program that displays the steps of a food recipe (consisting of at least 10 steps).\n\nThe following code demonstrates my understanding of asynchronous JavaScript programming:\n\n<script src=\"https://gist.github.com/vodori6161/5f4e1640c719f77c1f34f0118b5ade0f.js\"></script>\n\nThis code defines an array recipeSteps that contains the 10 steps of a food recipe. Then, it defines a function displayRecipe that takes a callback function as a parameter and displays the recipe steps one by one. Finally, the code calls the displayRecipe function and provides a callback function that logs a message to the console after the recipe steps have been displayed.\n\nThis implementation uses a forEach loop to iterate over the recipeSteps array and display each step. The use of a callback function ensures that the message \"Enjoy your delicious cake!\" is displayed only after all the recipe steps have been displayed.\n\n### ***Task 3: Promises and Benefits***\n\n&gt; ![i promise](https://allma.si/blog/wp-content/uploads/2020/11/benefits-of-using-promises-in-javascript.png)\n\nIn this task, I implemented the above recipe program with promises and listed the potential benefits and improvements of using promises.\n\nHere is the code for the promise based program:\n<script src=\"https://gist.github.com/vodori6161/1505bd46a4dcad501661bf0c82488533.js\"></script>\n\n\n&gt; The use of promises has several benefits and improvements over using callbacks:\n\n&gt; - Better error handling: Promises provide a clear way to handle errors and exceptions. In the example code, if an error occurs while displaying the recipe steps, the promise is rejected and the error message is logged to the console.\n- Improved readability: Promises make the code easier to read and understand, especially for asynchronous code. The use of the then and catch methods makes it clear what should happen after the promise is resolved or rejected.\n- Chaining: Promises can be easily chained together to perform multiple asynchronous operations in a concise and readable way. For example, you could add a step to the food recipe that saves the recipe to a database, and chain that step to the displayRecipe promise to ensure that it only runs after the recipe has been displayed.\n- Better performance: Promises are designed to be more efficient than callbacks, especially when dealing with a large number of asynchronous operations. This can lead to faster and more responsive applications.\n\n### ***Task 4: Command Line***\n\n![linux](https://media.geeksforgeeks.org/wp-content/uploads/s2-1.jpg)\n<iframe height=\"315\" src=\"https://www.youtube.com/embed/ZtqBQ68cfJc?controls=0&amp;start=2966\"></iframe>\n\nLinux is a free and open-source operating system that is used in a wide variety of settings, including personal computers, servers, and embedded devices. \n\n\n***a. To create a new folder in Linux, we can use the mkdir command. For example, to create a new folder called \"myfolder\", the following command is use***\n\n&gt; mkdir myfolder\n\n*You can also create multiple folders at once by specifying the names of the folders separated by spaces. For example:*\n\n&gt; mkdir folder1 folder2 folder3\n\n\nBy default, the mkdir command will create the new folder in the current working directory. If you want to create the folder in a different location, you can specify the path to the desired location as an argument to the mkdir command. For example:\n\n&gt; mkdir /home/user/documents/myfolder\n\n\n***B. To navigate to a specific folder in the Linux filesystem, we can use the cd command. For example, to navigate to the Linux kernel folder, which is typically located at /usr/src/linux, we can use the following command:***\n\n&gt; cd /usr/src/linux\n\nThis will change your current working directory to the Linux kernel folder. Once you are in the kernel folder, you can use other Linux commands to list the contents of the folder, create new files or folders, and perform other operations.\n\n\n***C.  create a blank file without using any text editor***\n\n\nTo create a blank file in Linux without using a text editor, you can use the touch command. This command allows you to create an empty file with a specified name. For example, to create a blank file called \"myfile.txt\", you would use the following command:\n\n\n&gt; touch myfile.txt\n\n\n***D. listing the files in the folder***\n\nTo list the files in a folder in Linux, you can use the ls command. This command allows you to view the contents of a directory and displays a list of the files and subdirectories it contains.\nBy default, the ls command lists the files and subdirectories in the current working directory. To list the files in a different directory, you can specify the path to that directory as an argument to the ls command. For example, to list the files in the /etc directory, you would use the following command:\nls /etc\n\n&gt; for i in {1..2600}; do mkdir MB66$i; done\n\n\n&gt;** # [the link to video of the same](https://drive.google.com/file/d/1BHsVHEo5tjx8bqscKvrRdG41yNMbC4Jc/view?usp=share_link)**\n\n***F. concatenate two text files containing any random text and display them on the terminal.***\n\n*the cat and less commands are useful tools for concatenating and displaying text files on the terminal in a Linux environment. You can use these commands to easily view and manipulate the contents of text files from the command line.*\n\n-  cat command to concatenate the two text files.\n-  When the combined output is too long to fit on one screen, we can use the less command to display the output one page at a time.\n\n&gt; cat file1.txt file2.txt | less\n\n&gt; cat file1.txt file2.txt\n\n\n### ***Task 5: Vi***\n\n![VIVIVIVIV](https://www.howtogeek.com/wp-content/uploads/2012/01/vi-tutorial-6.png?trim=1,1&amp;bg-color=000&amp;pad=1,1)\n\n<iframe height=\"315\" src=\"https://www.youtube.com/embed/zxfccHcl1Ns?controls=0&amp;start=194\"></iframe>\n\nIn this task, I learned the basics of Vi and created a markdown file in Vi illustrating the various features of Vi that I found to be fascinating.\n\n\nHere is an example of a markdown file created in vi that illustrates the various features of vi that are fascinating:\n\n<script src=\"https://gist.github.com/vodori6161/8d3cc361b978b93bff092b5338baadb5.js\"></script>\n\n### ***Task 6: Regex and Piping in Linux***\n\n![regex](https://i.ytimg.com/vi/upu_TeZImN0/maxresdefault.jpg)\n\nIn this task, I learned the basics of regex and piping in Linux.I used grep to extract login times within a date/time range from the login logs using the last command. Then piped this information into a text file and put it into a folder named logs. Finally, I zipped this folder using gzip and tar.\n\n<script src=\"https://gist.github.com/vodori6161/be2760eb451bc1b1606d49227ac7fa44.js\"></script>\n\n\n\n\n","tags":["javascript","js","web","webpage","linux","regex","grep","terminal"],"reviewStatus":"PENDING","feedback":"","rankingScore":1,"createdAt":"2023-02-07T17:45:52.279Z","updatedAt":"2023-02-07T17:45:52.279Z","slug":"sujay-s-level-1-project-report-introduction-to-cybersecurity-cloud-computing-sujay-vikram-g-s","__v":0},{"_id":"63e29082c630c137e9590b4a","authorId":"116401292645131885948","authorName":"shrushti bhalkiker","authorSlug":"shrushti-bhalkiker","authorImage":"https://lh3.googleusercontent.com/a-/ACNPEu8CnA5-y1AzjsmkYkik9zOKyivMnOOR4KbKfz7t=s96-c","level":1,"courseCode":"CL-CY-001","domain":"CL-CY","title":"MARVEL LEVEL 1   TASKS","content":" ---------------Task 1----------------\nconst calculate = () =&gt; {\n\n    let list = [];\n    let chemistry = document.querySelector(\"#chemistry\").value;\n    let name = document.querySelector(\"#name\").value;\n    let maths = document.querySelector(\"#maths\").value;\n    let phy = document.querySelector(\"#phy\").value;\n    let grades = \"\";\n    \n    let totalgrades =\n        parseFloat(chemistry) +\n        parseFloat(maths) +\n        parseFloat(phy);\n    \n    \n    let percentage = (totalgrades / 400) * 100;\n\nconst para = document.createElement(\"li\");\nconst node = document.createTextNode(`${percentage} ${totalgrades} ${name}`);\npara.appendChild(node);\nconst element = document.getElementById(\"showdata\");\nelement.appendChild(para);\n\n\n    };\n\n    const sort = () =&gt; {\n  \n        var list, i, run, li, stop;\n\n        list = document.getElementById(\"showdata\");\n\n        run = true;\n\n        while (run) {\n            run = false;\n            li = list.getElementsByTagName(\"li\");\n           \n            for (i = 0; i &lt; (li.length - 1); i++) {\n                stop = false;\n                if (li[i].innerHTML.toLowerCase() &gt; \n                    li[i + 1].innerHTML.toLowerCase()) {\n                    stop = true;\n                    break;\n                }\n            }\n\n            if (stop) {\n                li[i].parentNode.insertBefore(\n                        li[i + 1], li[i]);\n\n                run = true;\n            }\n        }\n    }\n\n\n\n\n\n\n-----------------Task 2-------------\n\n\n\n\n    \n    \n    \n    Document\n\n\n\nMaggie :) <br />\n\n    enter amount <br />\n\n    Recipe\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n    <script></script>\n\n\n\n\n\n\n\n ---------------Task 3---------------\n\n\n\n\n    \n    \n    \n    Document\n\n\n\nMaggie :) <br />\nenter account <br />\n\n    \n    \n    \n   \n    Recipe\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n    <script></script>\n\n \n\n\n\n\n\n---------------Task 4---------------\nmkdir test \ncd test \ntouch file1 \nfor num in ![]({1..2600};do)\n   mkdir $num \ndone \ncat 1 2&gt;3\n\n\n\n\n---------------Task 5-------------\nvi featuresofvi (this is used to create a vi markdown file)\nAfter that we can see a lot of tilt symbols \nNow to add data we press i from the keyboard and type the text to be added to this file \nTo save the test we click on escape button in the keyboard\n:wq to save and quiet the vi file\n\n\n-----------------Task 6-----------------\n last|grep fri(word to be searched)&gt;filename(file100.txt)\nmkdir logs \nmv file7.txt /home/shrushti/logs\ntar cvf filename.tar filename \ngzip -v filename.tar.gz\n\naccording the given question here fri is the word to searches using grep  /home/shrushti/logs is the path to move the file into directory\nand atlast zip the file","tags":[],"reviewStatus":"PENDING","feedback":"","rankingScore":1,"createdAt":"2023-02-07T17:55:14.621Z","updatedAt":"2023-02-07T17:55:14.621Z","slug":"marvel-level-1-tasks-shrushti-bhalkiker","__v":0}]