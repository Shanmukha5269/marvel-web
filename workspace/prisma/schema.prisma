generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

//scope of user
enum Scope {
  NONE
  PROFILE
  WRITER
  R_WRITER
  CRDN
  ADMIN
}

type Level {
  tasks Task[]
}

type Task {
  description String
}

//in works
enum TypeOfWork {
  COURSE
  PROJECT
}

//in articles only
enum ReviewStatus {
  PENDING
  APPROVED
  FLAGGED
  FEATURED
}

//in articles
enum TypeOfArticle {
  BLOG
  RESOURCE
}

//in works. to keep track of reports.
type ReportStatus {
  level    Int?
  id       String  @db.ObjectId
  feedback String?
}

model People {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  slug         String?  @unique
  name         String
  email        String   @unique
  profilePic   String
  googleId     String   @unique
  scope        Scope[]  @default([NONE])
  crdnCourses  String[] @default([])
  readMe       String?
  rankingScore Int      @default(1)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("people")
}

model Course {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  courseCode     String   @unique
  courseDuration String
  caption        String
  totalLevels    Int
  intro          String
  levels         Level[]
  rankingScore   Int      @default(1)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("courses")
}

enum Role {
  ACTIVE
  INACTIVE
  WRITER
}

type Person {
  googleId   String
  name       String
  slug       String
  profilePic String
  role       Role?
}

model Work {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  typeOfWork   TypeOfWork     @map("_type")
  //people part of this work
  authors      Person[]
  //coordinators for this work
  coordinators Person[]
  //reports
  Report       Report[]
  //tracking status
  pending      ReportStatus[]
  flagged      ReportStatus[]

  name         String? //not used in case of coursework
  coverPhoto   String?
  level        Int      @default(1) //is also used as stage number. its its +1 of totalLevels, that marks course completion
  totalLevels  Int? //not used in case of project
  courseCode   String? //not used in case of project
  note         String? //not used in case of project
  searchTerms  String[] @default([])
  rankingScore Int      @default(1)

  @@map("works")
}

model Report {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  work   Work   @relation(fields: [workId], references: [id])
  workId String @db.ObjectId
  level  Int? //not used in case of project report

  title   String
  content String

  @@map("reports")
}

model Article {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  typeOfArticle TypeOfArticle @map("_type")
  author        Person

  title        String
  tags         String[]     @default([])
  coverPhoto   String?
  content      String
  courseCodes  String[] //not used in case of blog post
  reviewStatus ReviewStatus
  searchTerms  String[]     @default([])
  feedback     String?
  rankingScore Int          @default(1)

  @@map("articles")
}
